1758919843
3d99647a2a2fc2912c8002152881da16-phpdoc%3A82968c2cb50d7f4c06d8affc04c10b1e-ebb8b4abd6bf615710d915b1eabc9f4c
s:5768:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjY6Imp2LnBocCI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJlYmI4YjRhYmQ2YmY2MTU3MTBkOTE1YjFlYWJjOWY0YyI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQzOiJ2ZW5kb3IvbmVzYm90L2NhcmJvbi9zcmMvQ2FyYm9uL0xhbmcvanYucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoyMzk3OiI8P3BocAoKLyoqCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDYXJib24gcGFja2FnZS4KICoKICogKGMpIEJyaWFuIE5lc2JpdHQgPGJyaWFuQG5lc2JvdC5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCi8qCiAqIEF1dGhvcnM6CiAqIC0gSm9zaCBTb3JlZgogKiAtIHRnZmp0CiAqIC0gSkQgSXNhYWNrcwogKi8KcmV0dXJuIFsKICAgICd5ZWFyJyA9PiAnezF9c2V0YXVufF0xLEluZls6Y291bnQgdGF1bicsCiAgICAnbW9udGgnID0+ICd7MX1zZXd1bGFufF0xLEluZls6Y291bnQgd3VsYW4nLAogICAgJ3dlZWsnID0+ICd7MX1zYWttaW5nZ3V8XTEsSW5mWzpjb3VudCBtaW5nZ3UnLAogICAgJ2RheScgPT4gJ3sxfXNlZGludGVufF0xLEluZls6Y291bnQgZGludGVuJywKICAgICdob3VyJyA9PiAnezF9c2V0dW5nZ2FsIGphbXxdMSxJbmZbOmNvdW50IGphbScsCiAgICAnbWludXRlJyA9PiAnezF9c2V0dW5nZ2FsIG1lbml0fF0xLEluZls6Y291bnQgbWVuaXQnLAogICAgJ3NlY29uZCcgPT4gJ3sxfXNhd2V0YXdpcyBkZXRpa3xdMSxJbmZbOmNvdW50IGRldGlrJywKICAgICdhZ28nID0+ICc6dGltZSBpbmdrYW5nIGtlcGVuZ2tlcicsCiAgICAnZnJvbV9ub3cnID0+ICd3b250ZW4gaW5nIDp0aW1lJywKICAgICdkaWZmX3RvZGF5JyA9PiAnRGludGVuJywKICAgICdkaWZmX3llc3RlcmRheScgPT4gJ0thbGEnLAogICAgJ2RpZmZfeWVzdGVyZGF5X3JlZ2V4cCcgPT4gJ0thbGEoPzpcXHMrd2luZ2kpPyg/OlxccytwdWt1bCk/JywKICAgICdkaWZmX3RvbW9ycm93JyA9PiAnTWJlbmphbmcnLAogICAgJ2RpZmZfdG9tb3Jyb3dfcmVnZXhwJyA9PiAnTWJlbmphbmcoPzpcXHMrcHVrdWwpPycsCiAgICAnZGlmZl90b2RheV9yZWdleHAnID0+ICdEaW50ZW4oPzpcXHMrcHVuaWtvKT8oPzpcXHMrcHVrdWwpPycsCiAgICAnZm9ybWF0cycgPT4gWwogICAgICAgICdMVCcgPT4gJ0hILm1tJywKICAgICAgICAnTFRTJyA9PiAnSEgubW0uc3MnLAogICAgICAgICdMJyA9PiAnREQvTU0vWVlZWScsCiAgICAgICAgJ0xMJyA9PiAnRCBNTU1NIFlZWVknLAogICAgICAgICdMTEwnID0+ICdEIE1NTU0gWVlZWSBbcHVrdWxdIEhILm1tJywKICAgICAgICAnTExMTCcgPT4gJ2RkZGQsIEQgTU1NTSBZWVlZIFtwdWt1bF0gSEgubW0nLAogICAgXSwKICAgICdjYWxlbmRhcicgPT4gWwogICAgICAgICdzYW1lRGF5JyA9PiAnW0RpbnRlbiBwdW5pa28gcHVrdWxdIExUJywKICAgICAgICAnbmV4dERheScgPT4gJ1tNYmVuamFuZyBwdWt1bF0gTFQnLAogICAgICAgICduZXh0V2VlaycgPT4gJ2RkZGQgW3B1a3VsXSBMVCcsCiAgICAgICAgJ2xhc3REYXknID0+ICdbS2FsYSB3aW5naSBwdWt1bF0gTFQnLAogICAgICAgICdsYXN0V2VlaycgPT4gJ2RkZGQgW2tlcGVuZ2tlciBwdWt1bF0gTFQnLAogICAgICAgICdzYW1lRWxzZScgPT4gJ0wnLAogICAgXSwKICAgICdtZXJpZGllbScgPT4gZnVuY3Rpb24gKCRob3VyKSB7CiAgICAgICAgaWYgKCRob3VyIDwgMTEpIHsKICAgICAgICAgICAgcmV0dXJuICdlbmppbmcnOwogICAgICAgIH0KICAgICAgICBpZiAoJGhvdXIgPCAxNSkgewogICAgICAgICAgICByZXR1cm4gJ3NpeWFuZyc7CiAgICAgICAgfQogICAgICAgIGlmICgkaG91ciA8IDE5KSB7CiAgICAgICAgICAgIHJldHVybiAnc29udGVuJzsKICAgICAgICB9CgogICAgICAgIHJldHVybiAnbmRhbHUnOwogICAgfSwKICAgICdtb250aHMnID0+IFsnSmFudWFyaScsICdGZWJydWFyaScsICdNYXJldCcsICdBcHJpbCcsICdNZWknLCAnSnVuaScsICdKdWxpJywgJ0FndXN0dXMnLCAnU2VwdGVtYmVyJywgJ09rdG9iZXInLCAnTm9wZW1iZXInLCAnRGVzZW1iZXInXSwKICAgICdtb250aHNfc2hvcnQnID0+IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01laScsICdKdW4nLCAnSnVsJywgJ0FncycsICdTZXAnLCAnT2t0JywgJ05vcCcsICdEZXMnXSwKICAgICd3ZWVrZGF5cycgPT4gWydNaW5nZ3UnLCAnU2VuZW4nLCAnU2Vsb3NvJywgJ1JlYnUnLCAnS2VtaXMnLCAnSmVtdXdhaCcsICdTZXB0dSddLAogICAgJ3dlZWtkYXlzX3Nob3J0JyA9PiBbJ01pbicsICdTZW4nLCAnU2VsJywgJ1JlYicsICdLZW0nLCAnSmVtJywgJ1NlcCddLAogICAgJ3dlZWtkYXlzX21pbicgPT4gWydNZycsICdTbicsICdTbCcsICdSYicsICdLbScsICdKbScsICdTcCddLAogICAgJ2ZpcnN0X2RheV9vZl93ZWVrJyA9PiAxLAogICAgJ2RheV9vZl9maXJzdF93ZWVrX29mX3llYXInID0+IDEsCiAgICAnbGlzdCcgPT4gWycsICcsICcgbGFuICddLApdOwoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjQwOiJUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ2FyYm9uIHBhY2thZ2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjE1ODoiKGMpIEJyaWFuIE5lc2JpdHQgPGJyaWFuQG5lc2JvdC5jb20+CgpGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQpmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";