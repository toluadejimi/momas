1758919804
3d99647a2a2fc2912c8002152881da16-phpdoc%3A3f122d3d97492965b002168b63b66829-d154979759512eb20d40a0e734e9d053
s:21912:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:25:"new-transformer.blade.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"d154979759512eb20d40a0e734e9d053";s:39:" phpDocumentor\Reflection\Php\File path";s:59:"resources/views/admin/transformer/new-transformer.blade.php";s:41:" phpDocumentor\Reflection\Php\File source";s:15480:"@php use App\Models\Estate;use Illuminate\Support\Facades\Auth; @endphp
@extends('layouts.main')
@section('content')

    @if(Auth::user()->role == 0)

        <div class="content">

            <!-- Start Content-->
            <div class="container-fluid">

                <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
                    <div class="flex-grow-1">
                        <h4 class="fs-18 fw-semibold m-0">Add New Transformer</h4>
                    </div>
                </div>




                <div class="row">
                    <div class="card">
                        <div class="card-body">
                            <form action="add-new-transformer" method="post">
                                @csrf

                                <div class="row">

                                    <h6 class="d-flex justify-content-start my-4">Transformer Information</h6>

                                    <div class="col-3">
                                        <label class="my-2">Title</label>
                                        <input type="text" name="Title" class="form-control" required>
                                    </div>

                                    <div class="col-3">
                                        <label class="my-2">Capacity</label>
                                        <input type="number" name="Capacity" class="form-control" required>
                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">MD Meter SN</label>
                                        <input type="text" name="MDMeterSN" class="form-control" required>
                                    </div>


                                    <div class="col-3 mt-4">
                                        <input type="checkbox" name="Multiplier" class="form-check-input"
                                               style="border: 10px">
                                        <label class="form-check-label">Multiplier</label>

                                    </div>


                                    <hr class="my-4">


                                    <div class="col-3">
                                        <label class="my-2">Estate</label>
                                        <select name="Estate_id" required class="form-control">
                                            <option value="">--select estate--</option>
                                            @foreach($estate as $data)
                                                <option value="{{$data->id}}">{{$data->title}}</option>
                                            @endforeach

                                        </select>
                                        {{--                                    <input type="text" readonly class="form-control" value="{{$estate->title ?? "name"}}">--}}
                                        {{--                                    <input type="text" hidden name="Estate_id" value="{{$estate->id ?? "id"}}">--}}

                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">Address</label>
                                        <input type="text" name="Location" class="form-control">
                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">City</label>
                                        <input type="text" name="City" class="form-control">
                                    </div>

                                    <div class="col-xl-3 col-sm-12">
                                        <label class="my-2">State</label>
                                        <select type="text" name="State" class="form-control">
                                            <option disabled selected>--Select State--</option>
                                            <option value="Abia">Abia</option>
                                            <option value="Adamawa">Adamawa</option>
                                            <option value="Akwa Ibom">Akwa Ibom</option>
                                            <option value="Anambra">Anambra</option>
                                            <option value="Bauchi">Bauchi</option>
                                            <option value="Bayelsa">Bayelsa</option>
                                            <option value="Benue">Benue</option>
                                            <option value="Borno">Borno</option>
                                            <option value="Cross River">Cross River</option>
                                            <option value="Delta">Delta</option>
                                            <option value="Ebonyi">Ebonyi</option>
                                            <option value="Edo">Edo</option>
                                            <option value="Ekiti">Ekiti</option>
                                            <option value="Enugu">Enugu</option>
                                            <option value="FCT">Federal Capital Territory</option>
                                            <option value="Gombe">Gombe</option>
                                            <option value="Imo">Imo</option>
                                            <option value="Jigawa">Jigawa</option>
                                            <option value="Kaduna">Kaduna</option>
                                            <option value="Kano">Kano</option>
                                            <option value="Katsina">Katsina</option>
                                            <option value="Kebbi">Kebbi</option>
                                            <option value="Kogi">Kogi</option>
                                            <option value="Kwara">Kwara</option>
                                            <option value="Lagos">Lagos</option>
                                            <option value="Nasarawa">Nasarawa</option>
                                            <option value="Niger">Niger</option>
                                            <option value="Ogun">Ogun</option>
                                            <option value="Ondo">Ondo</option>
                                            <option value="Osun">Osun</option>
                                            <option value="Oyo">Oyo</option>
                                            <option value="Plateau">Plateau</option>
                                            <option value="Rivers">Rivers</option>
                                            <option value="Sokoto">Sokoto</option>
                                            <option value="Taraba">Taraba</option>
                                            <option value="Yobe">Yobe</option>
                                            <option value="Zamfara">Zamfara</option>
                                        </select>

                                    </div>


                                    <hr class="my-4">


                                    <div class="col-3">
                                        <label class="my-2">CT Ratio</label>
                                        <input type="text" name="CTRatio" class="form-control">
                                    </div>


                                    <hr class="my-4">

                                    <button type="submit" class="col-2 d-flex btn btn-primary">
                                        Add Transformer
                                    </button>

                                </div>


                            </form>


                        </div>


                    </div>


                </div>


            </div>


        </div>

    @else(Auth::user()->role == 1)

        <div class="content">

            <!-- Start Content-->
            <div class="container-fluid">

                <div class="py-3 d-flex align-items-sm-center flex-sm-row flex-column">
                    <div class="flex-grow-1">
                        <h4 class="fs-18 fw-semibold m-0">Add New Transformer</h4>
                    </div>
                </div>


                <div class="row">

                    <div class="card">

                        <div class="card-body">

                            <form action="add-new-transformer" method="post">
                                @csrf

                                <div class="row">

                                    <h6 class="d-flex justify-content-start my-4">Transformer Information</h6>


                                    <div class="col-3">
                                        <label class="my-2">Title</label>
                                        <input type="text" name="Title" class="form-control" required>
                                    </div>

                                    <div class="col-3">
                                        <label class="my-2">Capacity</label>
                                        <input type="number" name="Capacity" class="form-control" required>
                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">MD Meter SN</label>
                                        <input type="text" name="MDMeterSN" class="form-control" required>
                                    </div>


                                    <div class="col-3 mt-4">
                                        <input type="checkbox" name="Multiplier" class="form-check-input"
                                               style="border: 10px">
                                        <label class="form-check-label">Multiplier</label>

                                    </div>


                                    <hr class="my-4">


                                    <div class="col-3">
                                        <label class="my-2">Estate</label>
                                        @php $estate_name = Estate::where('id', Auth::user()->estate_id)->first()->title @endphp
                                        <input value="{{$estate_name}}" name="estate" class="form-control" readonly>
                                        <input value="{{Auth::user()->estate_id}}" name="Estate_id" class="form-control" hidden>

                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">Address</label>
                                        <input type="text" name="Location" class="form-control">
                                    </div>


                                    <div class="col-3">
                                        <label class="my-2">City</label>
                                        <input type="text" name="City" class="form-control">
                                    </div>

                                    <div class="col-xl-3 col-sm-12">
                                        <label class="my-2">State</label>
                                        <select type="text" name="state" class="form-control">
                                            <option disabled selected>--Select State--</option>
                                            <option value="Abia">Abia</option>
                                            <option value="Adamawa">Adamawa</option>
                                            <option value="Akwa Ibom">Akwa Ibom</option>
                                            <option value="Anambra">Anambra</option>
                                            <option value="Bauchi">Bauchi</option>
                                            <option value="Bayelsa">Bayelsa</option>
                                            <option value="Benue">Benue</option>
                                            <option value="Borno">Borno</option>
                                            <option value="Cross River">Cross River</option>
                                            <option value="Delta">Delta</option>
                                            <option value="Ebonyi">Ebonyi</option>
                                            <option value="Edo">Edo</option>
                                            <option value="Ekiti">Ekiti</option>
                                            <option value="Enugu">Enugu</option>
                                            <option value="FCT">Federal Capital Territory</option>
                                            <option value="Gombe">Gombe</option>
                                            <option value="Imo">Imo</option>
                                            <option value="Jigawa">Jigawa</option>
                                            <option value="Kaduna">Kaduna</option>
                                            <option value="Kano">Kano</option>
                                            <option value="Katsina">Katsina</option>
                                            <option value="Kebbi">Kebbi</option>
                                            <option value="Kogi">Kogi</option>
                                            <option value="Kwara">Kwara</option>
                                            <option value="Lagos">Lagos</option>
                                            <option value="Nasarawa">Nasarawa</option>
                                            <option value="Niger">Niger</option>
                                            <option value="Ogun">Ogun</option>
                                            <option value="Ondo">Ondo</option>
                                            <option value="Osun">Osun</option>
                                            <option value="Oyo">Oyo</option>
                                            <option value="Plateau">Plateau</option>
                                            <option value="Rivers">Rivers</option>
                                            <option value="Sokoto">Sokoto</option>
                                            <option value="Taraba">Taraba</option>
                                            <option value="Yobe">Yobe</option>
                                            <option value="Zamfara">Zamfara</option>
                                        </select>

                                    </div>


                                    <hr class="my-4">


                                    <div class="col-3">
                                        <label class="my-2">CT Ratio</label>
                                        <input type="text" name="CTRatio" class="form-control">
                                    </div>


                                    <hr class="my-4">

                                    <button type="submit" class="col-2 d-flex btn btn-primary">
                                        Add Transformer
                                    </button>

                                </div>


                            </form>


                        </div>


                    </div>


                </div>


            </div>


        </div>

    @endif

@endsection
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";