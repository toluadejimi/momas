1758919869
3d99647a2a2fc2912c8002152881da16-phpdoc%3A446d7297aca6a8a81b476913b78a6264-0998aeefbabbffb1fb7769d7703f689e
s:387884:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjg6Ilhsc3gucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czozMjoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXIiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozMjoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo2OiJSZWFkZXIiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czozNzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeCI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjE1OntzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AaW1wbGVtZW50cyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGNvbnN0YW50cyI7YTo0OntzOjUxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpJTklUSUFMX0ZJTEUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQiOjk6e3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6SU5JVElBTF9GSUxFIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6IklOSVRJQUxfRklMRSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjEzOiInX3JlbHMvLnJlbHMnIjtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmaW5hbCI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABhdHRyaWJ1dGVzIjthOjA6e319czo1MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6UkVMX1RPX01BSU4iO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQiOjk6e3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNzQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE3NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6UkVMX1RPX01BSU4iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiUkVMX1RPX01BSU4iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABkb2NCbG9jayI7TjtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudAB2YWx1ZSI7czoyMDI6IltcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XE5hbWVzcGFjZXM6OlBVUkxfT0ZGSUNFX0RPQ1VNRU5UID0+IFxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcTmFtZXNwYWNlczo6UFVSTF9NQUlOLCBcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XE5hbWVzcGFjZXM6OlRIVU1CTkFJTCA9PiAnJ10iO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGZpbmFsIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAbWV0YWRhdGEiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpSRUxfVE9fRFJBV0lORyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudCI6OTp7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE3OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTgxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpSRUxfVE9fRFJBV0lORyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE0OiJSRUxfVE9fRFJBV0lORyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjEzNjoiW1xQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcTmFtZXNwYWNlczo6UFVSTF9SRUxBVElPTlNISVBTID0+IFxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcTmFtZXNwYWNlczo6UFVSTF9EUkFXSU5HXSI7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZmluYWwiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABtZXRhZGF0YSI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAYXR0cmlidXRlcyI7YTowOnt9fXM6NTE6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OlJFTF9UT19DSEFSVCI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudCI6OTp7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE4MztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTg1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpSRUxfVE9fQ0hBUlQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiUkVMX1RPX0NIQVJUIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZG9jQmxvY2siO047czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmFsdWUiO3M6MTM0OiJbXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxOYW1lc3BhY2VzOjpQVVJMX1JFTEFUSU9OU0hJUFMgPT4gXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxOYW1lc3BhY2VzOjpQVVJMX0NIQVJUXSI7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZmluYWwiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABtZXRhZGF0YSI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAYXR0cmlidXRlcyI7YTowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YTo1OntzOjU1OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjokcmVmZXJlbmNlSGVscGVyIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5IjoxNDp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjU0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OiRyZWZlcmVuY2VIZWxwZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToicmVmZXJlbmNlSGVscGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjI1OiJSZWZlcmVuY2VIZWxwZXIgaW5zdGFuY2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWYXJfIjo0OntzOjc6IgAqAG5hbWUiO3M6MzoidmFyIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlZmVyZW5jZUhlbHBlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJSZWZlcmVuY2VIZWxwZXIiO319czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjMxOiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTozOTp7czoxMDoiQ29vcmRpbmF0ZSI7czo0MDoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XENlbGxcQ29vcmRpbmF0ZSI7czo4OiJEYXRhVHlwZSI7czozODoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XENlbGxcRGF0YVR5cGUiO3M6OToiSHlwZXJsaW5rIjtzOjM5OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcQ2VsbFxIeXBlcmxpbmsiO3M6MTE6IkRlZmluZWROYW1lIjtzOjM2OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcRGVmaW5lZE5hbWUiO3M6MTA6IlhtbFNjYW5uZXIiO3M6NTE6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcU2VjdXJpdHlcWG1sU2Nhbm5lciI7czoxMDoiQXV0b0ZpbHRlciI7czo0NzoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XEF1dG9GaWx0ZXIiO3M6NToiQ2hhcnQiO3M6NDI6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxDaGFydCI7czoyMjoiQ29sdW1uQW5kUm93QXR0cmlidXRlcyI7czo1OToiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XENvbHVtbkFuZFJvd0F0dHJpYnV0ZXMiO3M6MTc6IkNvbmRpdGlvbmFsU3R5bGVzIjtzOjU0OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcQ29uZGl0aW9uYWxTdHlsZXMiO3M6MTU6IkRhdGFWYWxpZGF0aW9ucyI7czo1MjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XERhdGFWYWxpZGF0aW9ucyI7czoxMDoiSHlwZXJsaW5rcyI7czo0NzoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XEh5cGVybGlua3MiO3M6MTA6Ik5hbWVzcGFjZXMiO3M6NDc6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxOYW1lc3BhY2VzIjtzOjk6IlBhZ2VTZXR1cCI7czo0NjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XFBhZ2VTZXR1cCI7czoxNDoiUHJvcGVydHlSZWFkZXIiO3M6NDc6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxQcm9wZXJ0aWVzIjtzOjEzOiJTaGFyZWRGb3JtdWxhIjtzOjUwOiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcU2hhcmVkRm9ybXVsYSI7czoxNjoiU2hlZXRWaWV3T3B0aW9ucyI7czo1MzoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XFNoZWV0Vmlld09wdGlvbnMiO3M6MTA6IlNoZWV0Vmlld3MiO3M6NDc6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxTaGVldFZpZXdzIjtzOjY6IlN0eWxlcyI7czo0MzoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XFN0eWxlcyI7czoxMToiVGFibGVSZWFkZXIiO3M6NDg6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxUYWJsZVJlYWRlciI7czo1OiJUaGVtZSI7czo0MjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XFRoZW1lIjtzOjEyOiJXb3JrYm9va1ZpZXciO3M6NDk6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxXb3JrYm9va1ZpZXciO3M6MTU6IlJlZmVyZW5jZUhlbHBlciI7czo0MDoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlZmVyZW5jZUhlbHBlciI7czo4OiJSaWNoVGV4dCI7czo0MjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJpY2hUZXh0XFJpY2hUZXh0IjtzOjQ6IkRhdGUiO3M6MzY6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRGF0ZSI7czo3OiJEcmF3aW5nIjtzOjM5OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcU2hhcmVkXERyYXdpbmciO3M6NDoiRmlsZSI7czozNjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFNoYXJlZFxGaWxlIjtzOjQ6IkZvbnQiO3M6MzY6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRm9udCI7czoxMjoiU3RyaW5nSGVscGVyIjtzOjQ0OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcU2hhcmVkXFN0cmluZ0hlbHBlciI7czoxMToiU3ByZWFkc2hlZXQiO3M6MzY6IlBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTcHJlYWRzaGVldCI7czo1OiJDb2xvciI7czozNjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXENvbG9yIjtzOjk6IlN0eWxlRm9udCI7czozNToiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXEZvbnQiO3M6MTI6Ik51bWJlckZvcm1hdCI7czo0MzoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXE51bWJlckZvcm1hdCI7czo1OiJTdHlsZSI7czozNjoiUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXFN0eWxlIjtzOjE5OiJIZWFkZXJGb290ZXJEcmF3aW5nIjtzOjU0OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XEhlYWRlckZvb3RlckRyYXdpbmciO3M6OToiV29ya3NoZWV0IjtzOjQ0OiJQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7czo5OiJUaHJvd2FibGUiO3M6OToiVGhyb3dhYmxlIjtzOjk6IlhNTFJlYWRlciI7czo5OiJYTUxSZWFkZXIiO3M6MTA6IlppcEFyY2hpdmUiO3M6MTA6IlppcEFyY2hpdmUiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBob29rcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlydHVhbCI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBhdHRyaWJ1dGVzIjthOjA6e319czo0MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6JHppcCI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6MTQ6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjU5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjokemlwIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MzoiemlwIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMToiXFppcEFyY2hpdmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiWmlwQXJjaGl2ZSI7fX1zOjE1OiIAKgB2YXJpYWJsZU5hbWUiO3M6MDoiIjt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBob29rcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlydHVhbCI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBhdHRyaWJ1dGVzIjthOjA6e319czo1MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6JHN0eWxlUmVhZGVyIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5IjoxNDp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjYyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTE6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OiRzdHlsZVJlYWRlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJzdHlsZVJlYWRlciI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czowOiIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFZhcl8iOjQ6e3M6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcU3R5bGVzIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiU3R5bGVzIjt9fXM6MTU6IgAqAHZhcmlhYmxlTmFtZSI7czowOiIiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjExMjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAc3RhdGljIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7TjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQByZWFkT25seSI7YjowO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGhvb2tzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXJ0dWFsIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbWV0YWRhdGEiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjU0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojokc2hhcmVkRm9ybXVsYWUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjE0OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Njc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6JHNoYXJlZEZvcm11bGFlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6InNoYXJlZEZvcm11bGFlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6MTU6IgAqAHZhcmlhYmxlTmFtZSI7czowOiIiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjExMjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MjoiW10iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBob29rcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlydHVhbCI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AG1ldGFkYXRhIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBhdHRyaWJ1dGVzIjthOjA6e319czo0OToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6JHBhcnNlSHVnZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6MTQ6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjY5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ5OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjokcGFyc2VIdWdlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6OToicGFyc2VIdWdlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO047czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czo1OiJmYWxzZSI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAc3RhdGljIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQByZWFkT25seSI7YjowO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGhvb2tzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXJ0dWFsIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAbWV0YWRhdGEiO2E6MDp7fXM6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6Mzk6e3M6NTM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnNldFBhcnNlSHVnZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xCb29sZWFuIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo5OiJwYXJzZUh1Z2UiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjc3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI1MDU7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6ODA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjYwNjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpzZXRQYXJzZUh1Z2UoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJzZXRQYXJzZUh1Z2UiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMDoiQWxsb3cgdXNlIG9mIExJQlhNTF9QQVJTRUhVR0UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjEyNzoiVGhpcyBvcHRpb24gY2FuIGxlYWQgdG8gbWVtb3J5IGxlYWtzIGFuZCBmYWlsdXJlcywKYW5kIGlzIG5vdCByZWNvbW1lbmRlZC4gQnV0IHNvbWUgdmVyeSBsYXJnZSBzcHJlYWRzaGVldHMKc2VlbSB0byByZXF1aXJlIGl0LiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjUyOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpfX2NvbnN0cnVjdCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6ODU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjY3MTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo5MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyODcyO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUyOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpfX2NvbnN0cnVjdCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6Il9fY29uc3RydWN0Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzQ6IkNyZWF0ZSBhIG5ldyBYbHN4IFJlYWRlciBpbnN0YW5jZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NDg6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhblJlYWQoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoiZmlsZW5hbWUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjk1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI5NDE7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTEyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjMzOTk7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ4OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpjYW5SZWFkKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJjYW5SZWFkIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mzg6IkNhbiB0aGUgY3VycmVudCBJUmVhZGVyIHJlYWQgdGhlIGZpbGU/IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjU0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojp0ZXN0U2ltcGxlWG1sKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToidmFsdWUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjExNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTozNDQ5O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjEyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTozNjYyO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojp0ZXN0U2ltcGxlWG1sKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoidGVzdFNpbXBsZVhtbCI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjU6InZhbHVlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjExMjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MTtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo1NDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6Z2V0QXR0cmlidXRlcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZSI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZQByZWFsVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6InZhbHVlIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6Im5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IicnIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTIyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjM2Njk7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTI1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjM4NjU7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmdldEF0dHJpYnV0ZXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJnZXRBdHRyaWJ1dGVzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnhwYXRoTm9GYWxzZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6InN4bWwiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoicGF0aCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTMwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjM5ODQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTMzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjQxMzI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6eHBhdGhOb0ZhbHNlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoieHBhdGhOb0ZhbHNlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpmYWxzZVRvQXJyYXkoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJ2YWx1ZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTM4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjQxODI7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTQxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjQyOTA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6ZmFsc2VUb0FycmF5KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiZmFsc2VUb0FycmF5Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NToidmFsdWUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjQ4OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojpsb2FkWmlwKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTozOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImZpbGVuYW1lIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6Im5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IicnIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xCb29sZWFuIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxNzoicmVwbGFjZVVuY2xvc2VkQnIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6NToiZmFsc2UiO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNDM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6NDI5Nzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6NDg2Mjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6bG9hZFppcCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoibG9hZFppcCI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo1OToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6bG9hZFppcE5vbmFtZXNwYWNlKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImZpbGVuYW1lIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6Im5zIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNjE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6NDk3NTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNzI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6NTQyMzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1OToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6bG9hZFppcE5vbmFtZXNwYWNlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxODoibG9hZFppcE5vbmFtZXNwYWNlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjU5OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpsaXN0V29ya3NoZWV0TmFtZXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJmaWxlbmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjU5ODY7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjI0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjcxMTk7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTk6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6Omxpc3RXb3Jrc2hlZXROYW1lcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTg6Imxpc3RXb3Jrc2hlZXROYW1lcyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjk4OiJSZWFkcyBuYW1lcyBvZiB0aGUgd29ya3NoZWV0cyBmcm9tIGEgZmlsZSwgd2l0aG91dCBwYXJzaW5nIHRoZSB3aG9sZSBmaWxlIHRvIGEgU3ByZWFkc2hlZXQgb2JqZWN0LiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo4OiJmaWxlbmFtZSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTg6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6Omxpc3RXb3Jrc2hlZXRJbmZvKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoiZmlsZW5hbWUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIzMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTo3MzExO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMyMjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTUzMTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1ODoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6bGlzdFdvcmtzaGVldEluZm8oKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJsaXN0V29ya3NoZWV0SW5mbyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjk1OiJSZXR1cm4gd29ya3NoZWV0IGluZm8gKE5hbWUsIExhc3QgQ29sdW1uIExldHRlciwgTGFzdCBDb2x1bW4gSW5kZXgsIFRvdGFsIFJvd3MsIFRvdGFsIENvbHVtbnMpLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo4OiJmaWxlbmFtZSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhc3RUb0Jvb2xlYW4oKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxOiJjIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMjQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTE1Mzg7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzM0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjExODIzO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6Y2FzdFRvQm9vbGVhbigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6ImNhc3RUb0Jvb2xlYW4iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTI6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhc3RUb0Vycm9yKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE51bGxhYmxlIjoxOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE51bGxhYmxlAHJlYWxUeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MToiYyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzM2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjExODMwO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMzOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTk2NDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZSI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZQByZWFsVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTI6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhc3RUb0Vycm9yKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiY2FzdFRvRXJyb3IiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhc3RUb1N0cmluZygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZSI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZQByZWFsVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE6ImMiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM0MTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTk3MTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozNDQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTIxMDY7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpjYXN0VG9TdHJpbmcoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJjYXN0VG9TdHJpbmciO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmNhc3RUb0Zvcm11bGEoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjc6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX19czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxOiJjIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE6InIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTI6ImNlbGxEYXRhVHlwZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTozO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6InZhbHVlIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjE7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjQ7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTU6ImNhbGN1bGF0ZWRWYWx1ZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTo1O086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMjoiY2FzdEJhc2VUeXBlIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjY7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE3OiJ1cGRhdGVTaGFyZWRDZWxscyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czo0OiJ0cnVlIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzUwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMTkzO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM3OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMzY3Mzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpjYXN0VG9Gb3JtdWxhKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoiY2FzdFRvRm9ybXVsYSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czowOiIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mjp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo1OiJ2YWx1ZSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9aToxO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czoxNToiY2FsY3VsYXRlZFZhbHVlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjExMjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6ZmlsZUV4aXN0c0luQXJjaGl2ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMToiXFppcEFyY2hpdmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiWmlwQXJjaGl2ZSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6ImFyY2hpdmUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJmaWxlTmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiInJyI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM4NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMzcyNzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0MDI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTQ0NjU7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYwOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpmaWxlRXhpc3RzSW5BcmNoaXZlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxOToiZmlsZUV4aXN0c0luQXJjaGl2ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czowOiIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtIjo2OntzOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6ODoiZmlsZU5hbWUiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjU4OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpnZXRGcm9tWmlwQXJjaGl2ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMToiXFppcEFyY2hpdmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiWmlwQXJjaGl2ZSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6ImFyY2hpdmUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJmaWxlTmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiInJyI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQwOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxNDU0ODt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0MzY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTU3NTE7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTg6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmdldEZyb21aaXBBcmNoaXZlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNzoiZ2V0RnJvbVppcEFyY2hpdmUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjg6ImZpbGVOYW1lIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO31pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjY0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojpsb2FkU3ByZWFkc2hlZXRGcm9tRmlsZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJmaWxlbmFtZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDQxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjE1ODEwO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE4NjM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTE0MDA2O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM3OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFNwcmVhZHNoZWV0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6IlNwcmVhZHNoZWV0Ijt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY0OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojpsb2FkU3ByZWFkc2hlZXRGcm9tRmlsZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjM6ImxvYWRTcHJlYWRzaGVldEZyb21GaWxlIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mjg6IkxvYWRzIFNwcmVhZHNoZWV0IGZyb20gZmlsZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnBhcnNlUmljaFRleHQoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX19czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoyOiJpcyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTg2ODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTQwNTM7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk1MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTgxNTc7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnBhcnNlUmljaFRleHQoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJwYXJzZVJpY2hUZXh0Ijt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSaWNoVGV4dFxSaWNoVGV4dCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjg6IlJpY2hUZXh0Ijt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjExMjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo1MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFJpYmJvbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mzp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTcHJlYWRzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJTcHJlYWRzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6ImV4Y2VsIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE0OiJjdXN0b21VSVRhcmdldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMToiXFppcEFyY2hpdmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiWmlwQXJjaGl2ZSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6InppcCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk1NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMTgxNjQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk5NTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjAyNzg7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFJpYmJvbigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6InJlYWRSaWJib24iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmdldEFycmF5SXRlbSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6ImFycmF5IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6Mzoia2V5IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjE6IjAiO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDAzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMDQxMzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDA2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMDU2Mzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6Z2V0QXJyYXlJdGVtKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiZ2V0QXJyYXlJdGVtIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YTo0OntpOjA7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE51bGxfIjowOnt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fWk6MjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fWk6MztPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fXM6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NToiYXJyYXkiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fWk6MTtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO31zOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AdmFyaWFibGVOYW1lIjtzOjM6ImtleSI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjQ3OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpkaXJBZGQoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJiYXNlIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MzoiYWRkIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDEyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMDY4Mzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDE4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMDg5Mzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDc6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmRpckFkZCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiZGlyQWRkIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YTozOntpOjA7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE51bGxfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1pOjI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo0OiJiYXNlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO31pOjE7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjc6IgAqAHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YTozOntpOjA7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE51bGxfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1pOjI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czozOiJhZGQiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MTEyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjUxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojp0b0NTU0FycmF5KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6InN0eWxlIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDIwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMDkwMDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDQ5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyMTk4MTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojp0b0NTU0FycmF5KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoidG9DU1NBcnJheSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MTtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo3MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6c3RyaXBXaGl0ZVNwYWNlRnJvbVN0eWxlU3RyaW5nKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6InN0cmluZyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjA1MTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjE5ODg7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjA1NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjIxNDc7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjcxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpzdHJpcFdoaXRlU3BhY2VGcm9tU3R5bGVTdHJpbmcoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjMwOiJzdHJpcFdoaXRlU3BhY2VGcm9tU3R5bGVTdHJpbmciO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MTtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo0ODoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6Ym9vbGVhbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJ2YWx1ZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjA1NjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjIxNTQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjA2MztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjIzNTE7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQm9vbGVhbiI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ4OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4Ojpib29sZWFuKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJib29sZWFuIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjYxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpyZWFkSHlwZXJMaW5rRHJhd2luZygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mzp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcRHJhd2luZyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjc6IkRyYXdpbmciO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMDoib2JqRHJhd2luZyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjEwOiJjZWxsQW5jaG9yIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTA6Imh5cGVybGlua3MiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIwNjg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTIyNDA2O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIwODI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTIzMDcxO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjE6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRIeXBlckxpbmtEcmF3aW5nKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMDoicmVhZEh5cGVyTGlua0RyYXdpbmciO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czoxMDoiaHlwZXJsaW5rcyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoxMTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRQcm90ZWN0aW9uKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM3OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFNwcmVhZHNoZWV0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6IlNwcmVhZHNoZWV0Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiZXhjZWwiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMToieG1sV29ya2Jvb2siO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIwODQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTIzMDc4O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIxMDc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTI0MTE0O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRQcm90ZWN0aW9uKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNDoicmVhZFByb3RlY3Rpb24iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmdldExvY2tWYWx1ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjEwOiJwcm90ZWN0aW9uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6ImtleSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjEwOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjQxMjE7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjExOTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjQ0ODU7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUiOjE6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTnVsbGFibGUAcmVhbFR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xCb29sZWFuIjowOnt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpnZXRMb2NrVmFsdWUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJnZXRMb2NrVmFsdWUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NjY6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRGb3JtQ29udHJvbFByb3BlcnRpZXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjU6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzc6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcU3ByZWFkc2hlZXQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiU3ByZWFkc2hlZXQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJleGNlbCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czozOiJkaXIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTM6ImZpbGVXb3Jrc2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MztPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IldvcmtzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImRvY1NoZWV0IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjQ7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxODoidW5wYXJzZWRMb2FkZWREYXRhIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjE7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMTIxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyNDQ5Mjt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMTQ2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyNTkxNzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY2OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpyZWFkRm9ybUNvbnRyb2xQcm9wZXJ0aWVzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyNToicmVhZEZvcm1Db250cm9sUHJvcGVydGllcyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFByaW50ZXJTZXR0aW5ncygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6NTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTcHJlYWRzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJTcHJlYWRzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6ImV4Y2VsIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6ImRpciI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMzoiZmlsZVdvcmtzaGVldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTozO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcV29ya3NoZWV0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6OToiV29ya3NoZWV0Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoiZG9jU2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6NDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE4OiJ1bnBhcnNlZExvYWRlZERhdGEiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MTtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIxNDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTI1OTI0O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIxNzY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTI3NjQ4O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjA6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRQcmludGVyU2V0dGluZ3MoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE5OiJyZWFkUHJpbnRlclNldHRpbmdzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjYwOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpnZXRXb3JrYm9va0Jhc2VOYW1lKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMTc4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyNzY1NTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjAyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyODU1Nzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYwOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpnZXRXb3JrYm9va0Jhc2VOYW1lKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxOToiZ2V0V29ya2Jvb2tCYXNlTmFtZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFNoZWV0UHJvdGVjdGlvbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcV29ya3NoZWV0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6OToiV29ya3NoZWV0Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoiZG9jU2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJ4bWxTaGVldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjIwNDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjg1NjQ7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjIyNztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjk2NDc7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2MDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFNoZWV0UHJvdGVjdGlvbigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6InJlYWRTaGVldFByb3RlY3Rpb24iO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NTU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRBdXRvRmlsdGVyKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoieG1sU2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IldvcmtzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImRvY1NoZWV0IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjI5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyOTY1NDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjM2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEyOTg4OTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU1OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpyZWFkQXV0b0ZpbHRlcigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6InJlYWRBdXRvRmlsdGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjUxOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpyZWFkVGFibGVzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTo1OntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6ODoieG1sU2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IldvcmtzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImRvY1NoZWV0IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6ImRpciI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTozO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMzoiZmlsZVdvcmtzaGVldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aTo0O086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxMToiXFppcEFyY2hpdmUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiWmlwQXJjaGl2ZSI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjM6InppcCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjIzODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMjk4OTY7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjI0ODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMzAyODE7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cmVhZFRhYmxlcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6InJlYWRUYWJsZXMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NjM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnJlYWRUYWJsZXNJblRhYmxlc0ZpbGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjU6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTc6IlxTaW1wbGVYTUxFbGVtZW50IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlNpbXBsZVhNTEVsZW1lbnQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJ4bWxTaGVldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToxO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czozOiJkaXIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTM6ImZpbGVXb3Jrc2hlZXQiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MztPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTE6IlxaaXBBcmNoaXZlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6IlppcEFyY2hpdmUiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czozOiJ6aXAiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6NDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IldvcmtzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImRvY1NoZWV0IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjUwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEzMDI4ODt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjgwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjEzMTg1NTt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYzOiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpyZWFkVGFibGVzSW5UYWJsZXNGaWxlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMjoicmVhZFRhYmxlc0luVGFibGVzRmlsZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo1NDoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6ZXh0cmFjdFN0eWxlcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mzp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZSI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZQByZWFsVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6InN4bWwiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToibm9kZTEiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToibm9kZTIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyODI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTMxODYyO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyOTI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTMyMTg0O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTQ6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmV4dHJhY3RTdHlsZXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJleHRyYWN0U3R5bGVzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjU1OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4OjpleHRyYWN0UGFsZXR0ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZSI6MTp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xOdWxsYWJsZQByZWFsVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6InN4bWwiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyOTQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTMyMTkxO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIzMDk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTMyNjk4O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OmV4dHJhY3RQYWxldHRlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNDoiZXh0cmFjdFBhbGV0dGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NjE6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnByb2Nlc3NJZ25vcmVkRXJyb3JzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE3OiJcU2ltcGxlWE1MRWxlbWVudCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJTaW1wbGVYTUxFbGVtZW50Ijt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MzoieG1sIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ1OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFdvcmtzaGVldFxXb3Jrc2hlZXQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo5OiJXb3Jrc2hlZXQiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo1OiJzaGVldCI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjMxMTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMzI3MDU7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjM1MztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxMzQ4OTc7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcVm9pZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo2MToiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6cHJvY2Vzc0lnbm9yZWRFcnJvcnMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIwOiJwcm9jZXNzSWdub3JlZEVycm9ycyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo3OiJwcml2YXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czo2MzoiXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeDo6c3RvcmVGb3JtdWxhQXR0cmlidXRlcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTM6e3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mzp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFNpbXBsZVhNTEVsZW1lbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiU2ltcGxlWE1MRWxlbWVudCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE6ImYiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDU6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcV29ya3NoZWV0XFdvcmtzaGVldCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IldvcmtzaGVldCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6ImRvY1NoZWV0IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE6InIiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIzNTU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTM0OTA0O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIzNjg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MTM1NDU3O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFZvaWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3g6OnN0b3JlRm9ybXVsYUF0dHJpYnV0ZXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIyOiJzdG9yZUZvcm11bGFBdHRyaWJ1dGVzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjoxO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMzY5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM3OiJcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiWGxzeCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDM6IlxQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXEJhc2VSZWFkZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiQmFzZVJlYWRlciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwByZWFkT25seSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiIwOTk4YWVlZmJhYmJmZmIxZmI3NzY5ZDc3MDNmNjg5ZSI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjY2OiJ2ZW5kb3IvcGhwb2ZmaWNlL3BocHNwcmVhZHNoZWV0L3NyYy9QaHBTcHJlYWRzaGVldC9SZWFkZXIvWGxzeC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjEzNTQ2MToiPD9waHAKCm5hbWVzcGFjZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyOwoKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxDZWxsXENvb3JkaW5hdGU7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcQ2VsbFxEYXRhVHlwZTsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxDZWxsXEh5cGVybGluazsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxEZWZpbmVkTmFtZTsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcU2VjdXJpdHlcWG1sU2Nhbm5lcjsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxBdXRvRmlsdGVyOwp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XENoYXJ0Owp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XENvbHVtbkFuZFJvd0F0dHJpYnV0ZXM7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcQ29uZGl0aW9uYWxTdHlsZXM7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcRGF0YVZhbGlkYXRpb25zOwp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XEh5cGVybGlua3M7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcTmFtZXNwYWNlczsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxQYWdlU2V0dXA7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcUHJvcGVydGllcyBhcyBQcm9wZXJ0eVJlYWRlcjsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxTaGFyZWRGb3JtdWxhOwp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlYWRlclxYbHN4XFNoZWV0Vmlld09wdGlvbnM7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcU2hlZXRWaWV3czsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSZWFkZXJcWGxzeFxTdHlsZXM7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcVGFibGVSZWFkZXI7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcVGhlbWU7CnVzZSBQaHBPZmZpY2VcUGhwU3ByZWFkc2hlZXRcUmVhZGVyXFhsc3hcV29ya2Jvb2tWaWV3Owp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFJlZmVyZW5jZUhlbHBlcjsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxSaWNoVGV4dFxSaWNoVGV4dDsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRGF0ZTsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRHJhd2luZzsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRmlsZTsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcRm9udDsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTaGFyZWRcU3RyaW5nSGVscGVyOwp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFNwcmVhZHNoZWV0Owp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXENvbG9yOwp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXEZvbnQgYXMgU3R5bGVGb250Owp1c2UgUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFN0eWxlXE51bWJlckZvcm1hdDsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTdHlsZVxTdHlsZTsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcSGVhZGVyRm9vdGVyRHJhd2luZzsKdXNlIFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcV29ya3NoZWV0Owp1c2UgU2ltcGxlWE1MRWxlbWVudDsKdXNlIFRocm93YWJsZTsKdXNlIFhNTFJlYWRlcjsKdXNlIFppcEFyY2hpdmU7CgpjbGFzcyBYbHN4IGV4dGVuZHMgQmFzZVJlYWRlcgp7CiAgICBjb25zdCBJTklUSUFMX0ZJTEUgPSAnX3JlbHMvLnJlbHMnOwoKICAgIC8qKgogICAgICogUmVmZXJlbmNlSGVscGVyIGluc3RhbmNlLgogICAgICoKICAgICAqIEB2YXIgUmVmZXJlbmNlSGVscGVyCiAgICAgKi8KICAgIHByaXZhdGUgJHJlZmVyZW5jZUhlbHBlcjsKCiAgICAvKioKICAgICAqIEB2YXIgWmlwQXJjaGl2ZQogICAgICovCiAgICBwcml2YXRlICR6aXA7CgogICAgLyoqIEB2YXIgU3R5bGVzICovCiAgICBwcml2YXRlICRzdHlsZVJlYWRlcjsKCiAgICAvKioKICAgICAqIEB2YXIgYXJyYXkKICAgICAqLwogICAgcHJpdmF0ZSAkc2hhcmVkRm9ybXVsYWUgPSBbXTsKCiAgICBwcml2YXRlIGJvb2wgJHBhcnNlSHVnZSA9IGZhbHNlOwoKICAgIC8qKgogICAgICogQWxsb3cgdXNlIG9mIExJQlhNTF9QQVJTRUhVR0UuCiAgICAgKiBUaGlzIG9wdGlvbiBjYW4gbGVhZCB0byBtZW1vcnkgbGVha3MgYW5kIGZhaWx1cmVzLAogICAgICogYW5kIGlzIG5vdCByZWNvbW1lbmRlZC4gQnV0IHNvbWUgdmVyeSBsYXJnZSBzcHJlYWRzaGVldHMKICAgICAqIHNlZW0gdG8gcmVxdWlyZSBpdC4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldFBhcnNlSHVnZShib29sICRwYXJzZUh1Z2UpOiB2b2lkCiAgICB7CiAgICAgICAgJHRoaXMtPnBhcnNlSHVnZSA9ICRwYXJzZUh1Z2U7CiAgICB9CgogICAgLyoqCiAgICAgKiBDcmVhdGUgYSBuZXcgWGxzeCBSZWFkZXIgaW5zdGFuY2UuCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpCiAgICB7CiAgICAgICAgcGFyZW50OjpfX2NvbnN0cnVjdCgpOwogICAgICAgICR0aGlzLT5yZWZlcmVuY2VIZWxwZXIgPSBSZWZlcmVuY2VIZWxwZXI6OmdldEluc3RhbmNlKCk7CiAgICAgICAgJHRoaXMtPnNlY3VyaXR5U2Nhbm5lciA9IFhtbFNjYW5uZXI6OmdldEluc3RhbmNlKCR0aGlzKTsKICAgIH0KCiAgICAvKioKICAgICAqIENhbiB0aGUgY3VycmVudCBJUmVhZGVyIHJlYWQgdGhlIGZpbGU/CiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBjYW5SZWFkKHN0cmluZyAkZmlsZW5hbWUpOiBib29sCiAgICB7CiAgICAgICAgaWYgKCFGaWxlOjp0ZXN0RmlsZU5vVGhyb3coJGZpbGVuYW1lLCBzZWxmOjpJTklUSUFMX0ZJTEUpKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgICRyZXN1bHQgPSBmYWxzZTsKICAgICAgICAkdGhpcy0+emlwID0gJHppcCA9IG5ldyBaaXBBcmNoaXZlKCk7CgogICAgICAgIGlmICgkemlwLT5vcGVuKCRmaWxlbmFtZSkgPT09IHRydWUpIHsKICAgICAgICAgICAgWyR3b3JrYm9va0Jhc2VuYW1lXSA9ICR0aGlzLT5nZXRXb3JrYm9va0Jhc2VOYW1lKCk7CiAgICAgICAgICAgICRyZXN1bHQgPSAhZW1wdHkoJHdvcmtib29rQmFzZW5hbWUpOwoKICAgICAgICAgICAgJHppcC0+Y2xvc2UoKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkcmVzdWx0OwogICAgfQoKICAgIC8qKgogICAgICogQHBhcmFtIG1peGVkICR2YWx1ZQogICAgICovCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHRlc3RTaW1wbGVYbWwoJHZhbHVlKTogU2ltcGxlWE1MRWxlbWVudAogICAgewogICAgICAgIHJldHVybiAoJHZhbHVlIGluc3RhbmNlb2YgU2ltcGxlWE1MRWxlbWVudCkgPyAkdmFsdWUgOiBuZXcgU2ltcGxlWE1MRWxlbWVudCgnPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48cm9vdD48L3Jvb3Q+Jyk7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRBdHRyaWJ1dGVzKD9TaW1wbGVYTUxFbGVtZW50ICR2YWx1ZSwgc3RyaW5nICRucyA9ICcnKTogU2ltcGxlWE1MRWxlbWVudAogICAgewogICAgICAgIHJldHVybiBzZWxmOjp0ZXN0U2ltcGxlWG1sKCR2YWx1ZSA9PT0gbnVsbCA/ICR2YWx1ZSA6ICR2YWx1ZS0+YXR0cmlidXRlcygkbnMpKTsKICAgIH0KCiAgICAvLyBQaHBzdGFuIHRoaW5rcywgY29ycmVjdGx5LCB0aGF0IHhwYXRoIGNhbiByZXR1cm4gZmFsc2UuCiAgICAvLyBTY3J1dGluaXplciB0aGlua3MgaXQgY2FuJ3QuCiAgICAvLyBTaWdoLgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24geHBhdGhOb0ZhbHNlKFNpbXBsZVhtbEVsZW1lbnQgJHN4bWwsIHN0cmluZyAkcGF0aCk6IGFycmF5CiAgICB7CiAgICAgICAgcmV0dXJuIHNlbGY6OmZhbHNlVG9BcnJheSgkc3htbC0+eHBhdGgoJHBhdGgpKTsKICAgIH0KCiAgICAvKioKICAgICAqIEBwYXJhbSBtaXhlZCAkdmFsdWUKICAgICAqLwogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBmYWxzZVRvQXJyYXkoJHZhbHVlKTogYXJyYXkKICAgIHsKICAgICAgICByZXR1cm4gaXNfYXJyYXkoJHZhbHVlKSA/ICR2YWx1ZSA6IFtdOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gbG9hZFppcChzdHJpbmcgJGZpbGVuYW1lLCBzdHJpbmcgJG5zID0gJycsIGJvb2wgJHJlcGxhY2VVbmNsb3NlZEJyID0gZmFsc2UpOiBTaW1wbGVYTUxFbGVtZW50CiAgICB7CiAgICAgICAgJGNvbnRlbnRzID0gJHRoaXMtPmdldEZyb21aaXBBcmNoaXZlKCR0aGlzLT56aXAsICRmaWxlbmFtZSk7CiAgICAgICAgaWYgKCRyZXBsYWNlVW5jbG9zZWRCcikgewogICAgICAgICAgICAkY29udGVudHMgPSBzdHJfcmVwbGFjZSgnPGJyPicsICc8YnIvPicsICRjb250ZW50cyk7CiAgICAgICAgfQogICAgICAgICRyZWxzID0gQHNpbXBsZXhtbF9sb2FkX3N0cmluZygKICAgICAgICAgICAgJHRoaXMtPmdldFNlY3VyaXR5U2Nhbm5lck9yVGhyb3coKS0+c2NhbigkY29udGVudHMpLAogICAgICAgICAgICBTaW1wbGVYTUxFbGVtZW50OjpjbGFzcywKICAgICAgICAgICAgJHRoaXMtPnBhcnNlSHVnZSA/IExJQlhNTF9QQVJTRUhVR0UgOiAwLAogICAgICAgICAgICAkbnMKICAgICAgICApOwoKICAgICAgICByZXR1cm4gc2VsZjo6dGVzdFNpbXBsZVhtbCgkcmVscyk7CiAgICB9CgogICAgLy8gVGhpcyBmdW5jdGlvbiBpcyBqdXN0IHRvIGlkZW50aWZ5IGNhc2VzIHdoZXJlIEknbSBub3Qgc3VyZQogICAgLy8gd2h5IGVtcHR5IG5hbWVzcGFjZSBpcyByZXF1aXJlZC4KICAgIHByaXZhdGUgZnVuY3Rpb24gbG9hZFppcE5vbmFtZXNwYWNlKHN0cmluZyAkZmlsZW5hbWUsIHN0cmluZyAkbnMpOiBTaW1wbGVYTUxFbGVtZW50CiAgICB7CiAgICAgICAgJGNvbnRlbnRzID0gJHRoaXMtPmdldEZyb21aaXBBcmNoaXZlKCR0aGlzLT56aXAsICRmaWxlbmFtZSk7CiAgICAgICAgJHJlbHMgPSBzaW1wbGV4bWxfbG9hZF9zdHJpbmcoCiAgICAgICAgICAgICR0aGlzLT5nZXRTZWN1cml0eVNjYW5uZXJPclRocm93KCktPnNjYW4oJGNvbnRlbnRzKSwKICAgICAgICAgICAgU2ltcGxlWE1MRWxlbWVudDo6Y2xhc3MsCiAgICAgICAgICAgICR0aGlzLT5wYXJzZUh1Z2UgPyBMSUJYTUxfUEFSU0VIVUdFIDogMCwKICAgICAgICAgICAgKCRucyA9PT0gJycgPyAkbnMgOiAnJykKICAgICAgICApOwoKICAgICAgICByZXR1cm4gc2VsZjo6dGVzdFNpbXBsZVhtbCgkcmVscyk7CiAgICB9CgogICAgcHJpdmF0ZSBjb25zdCBSRUxfVE9fTUFJTiA9IFsKICAgICAgICBOYW1lc3BhY2VzOjpQVVJMX09GRklDRV9ET0NVTUVOVCA9PiBOYW1lc3BhY2VzOjpQVVJMX01BSU4sCiAgICAgICAgTmFtZXNwYWNlczo6VEhVTUJOQUlMID0+ICcnLAogICAgXTsKCiAgICBwcml2YXRlIGNvbnN0IFJFTF9UT19EUkFXSU5HID0gWwogICAgICAgIE5hbWVzcGFjZXM6OlBVUkxfUkVMQVRJT05TSElQUyA9PiBOYW1lc3BhY2VzOjpQVVJMX0RSQVdJTkcsCiAgICBdOwoKICAgIHByaXZhdGUgY29uc3QgUkVMX1RPX0NIQVJUID0gWwogICAgICAgIE5hbWVzcGFjZXM6OlBVUkxfUkVMQVRJT05TSElQUyA9PiBOYW1lc3BhY2VzOjpQVVJMX0NIQVJULAogICAgXTsKCiAgICAvKioKICAgICAqIFJlYWRzIG5hbWVzIG9mIHRoZSB3b3Jrc2hlZXRzIGZyb20gYSBmaWxlLCB3aXRob3V0IHBhcnNpbmcgdGhlIHdob2xlIGZpbGUgdG8gYSBTcHJlYWRzaGVldCBvYmplY3QuCiAgICAgKgogICAgICogQHBhcmFtIHN0cmluZyAkZmlsZW5hbWUKICAgICAqCiAgICAgKiBAcmV0dXJuIGFycmF5CiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBsaXN0V29ya3NoZWV0TmFtZXMoJGZpbGVuYW1lKQogICAgewogICAgICAgIEZpbGU6OmFzc2VydEZpbGUoJGZpbGVuYW1lLCBzZWxmOjpJTklUSUFMX0ZJTEUpOwoKICAgICAgICAkd29ya3NoZWV0TmFtZXMgPSBbXTsKCiAgICAgICAgJHRoaXMtPnppcCA9ICR6aXAgPSBuZXcgWmlwQXJjaGl2ZSgpOwogICAgICAgICR6aXAtPm9wZW4oJGZpbGVuYW1lKTsKCiAgICAgICAgLy8gICAgVGhlIGZpbGVzIHdlJ3JlIGxvb2tpbmcgYXQgaGVyZSBhcmUgc21hbGwgZW5vdWdoIHRoYXQgc2ltcGxlWE1MIGlzIG1vcmUgZWZmaWNpZW50IHRoYW4gWE1MUmVhZGVyCiAgICAgICAgJHJlbHMgPSAkdGhpcy0+bG9hZFppcChzZWxmOjpJTklUSUFMX0ZJTEUsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgIGZvcmVhY2ggKCRyZWxzLT5SZWxhdGlvbnNoaXAgYXMgJHJlbHgpIHsKICAgICAgICAgICAgJHJlbCA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHJlbHgpOwogICAgICAgICAgICAkcmVsVHlwZSA9IChzdHJpbmcpICRyZWxbJ1R5cGUnXTsKICAgICAgICAgICAgJG1haW5OUyA9IHNlbGY6OlJFTF9UT19NQUlOWyRyZWxUeXBlXSA/PyBOYW1lc3BhY2VzOjpNQUlOOwogICAgICAgICAgICBpZiAoJG1haW5OUyAhPT0gJycpIHsKICAgICAgICAgICAgICAgICR4bWxXb3JrYm9vayA9ICR0aGlzLT5sb2FkWmlwKChzdHJpbmcpICRyZWxbJ1RhcmdldCddLCAkbWFpbk5TKTsKCiAgICAgICAgICAgICAgICBpZiAoJHhtbFdvcmtib29rLT5zaGVldHMpIHsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkeG1sV29ya2Jvb2stPnNoZWV0cy0+c2hlZXQgYXMgJGVsZVNoZWV0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHNoZWV0IHNob3VsZCBiZSBza2lwcGVkCiAgICAgICAgICAgICAgICAgICAgICAgICR3b3Jrc2hlZXROYW1lc1tdID0gKHN0cmluZykgc2VsZjo6Z2V0QXR0cmlidXRlcygkZWxlU2hlZXQpWyduYW1lJ107CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAkemlwLT5jbG9zZSgpOwoKICAgICAgICByZXR1cm4gJHdvcmtzaGVldE5hbWVzOwogICAgfQoKICAgIC8qKgogICAgICogUmV0dXJuIHdvcmtzaGVldCBpbmZvIChOYW1lLCBMYXN0IENvbHVtbiBMZXR0ZXIsIExhc3QgQ29sdW1uIEluZGV4LCBUb3RhbCBSb3dzLCBUb3RhbCBDb2x1bW5zKS4KICAgICAqCiAgICAgKiBAcGFyYW0gc3RyaW5nICRmaWxlbmFtZQogICAgICoKICAgICAqIEByZXR1cm4gYXJyYXkKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGxpc3RXb3Jrc2hlZXRJbmZvKCRmaWxlbmFtZSkKICAgIHsKICAgICAgICBGaWxlOjphc3NlcnRGaWxlKCRmaWxlbmFtZSwgc2VsZjo6SU5JVElBTF9GSUxFKTsKCiAgICAgICAgJHdvcmtzaGVldEluZm8gPSBbXTsKCiAgICAgICAgJHRoaXMtPnppcCA9ICR6aXAgPSBuZXcgWmlwQXJjaGl2ZSgpOwogICAgICAgICR6aXAtPm9wZW4oJGZpbGVuYW1lKTsKCiAgICAgICAgJHJlbHMgPSAkdGhpcy0+bG9hZFppcChzZWxmOjpJTklUSUFMX0ZJTEUsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgIGZvcmVhY2ggKCRyZWxzLT5SZWxhdGlvbnNoaXAgYXMgJHJlbHgpIHsKICAgICAgICAgICAgJHJlbCA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHJlbHgpOwogICAgICAgICAgICAkcmVsVHlwZSA9IChzdHJpbmcpICRyZWxbJ1R5cGUnXTsKICAgICAgICAgICAgJG1haW5OUyA9IHNlbGY6OlJFTF9UT19NQUlOWyRyZWxUeXBlXSA/PyBOYW1lc3BhY2VzOjpNQUlOOwogICAgICAgICAgICBpZiAoJG1haW5OUyAhPT0gJycpIHsKICAgICAgICAgICAgICAgICRyZWxUYXJnZXQgPSAoc3RyaW5nKSAkcmVsWydUYXJnZXQnXTsKICAgICAgICAgICAgICAgICRkaXIgPSBkaXJuYW1lKCRyZWxUYXJnZXQpOwogICAgICAgICAgICAgICAgJG5hbWVzcGFjZSA9IGRpcm5hbWUoJHJlbFR5cGUpOwogICAgICAgICAgICAgICAgJHJlbHNXb3JrYm9vayA9ICR0aGlzLT5sb2FkWmlwKCIkZGlyL19yZWxzLyIgLiBiYXNlbmFtZSgkcmVsVGFyZ2V0KSAuICcucmVscycsICcnKTsKCiAgICAgICAgICAgICAgICAkd29ya3NoZWV0cyA9IFtdOwogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJlbHNXb3JrYm9vay0+UmVsYXRpb25zaGlwIGFzICRlbGV4KSB7CiAgICAgICAgICAgICAgICAgICAgJGVsZSA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJGVsZXgpOwogICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgKChzdHJpbmcpICRlbGVbJ1R5cGUnXSA9PT0gIiRuYW1lc3BhY2Uvd29ya3NoZWV0IikgfHwKICAgICAgICAgICAgICAgICAgICAgICAgKChzdHJpbmcpICRlbGVbJ1R5cGUnXSA9PT0gIiRuYW1lc3BhY2UvY2hhcnRzaGVldCIpCiAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR3b3Jrc2hlZXRzWyhzdHJpbmcpICRlbGVbJ0lkJ11dID0gJGVsZVsnVGFyZ2V0J107CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICR4bWxXb3JrYm9vayA9ICR0aGlzLT5sb2FkWmlwKCRyZWxUYXJnZXQsICRtYWluTlMpOwogICAgICAgICAgICAgICAgaWYgKCR4bWxXb3JrYm9vay0+c2hlZXRzKSB7CiAgICAgICAgICAgICAgICAgICAgJGRpciA9IGRpcm5hbWUoJHJlbFRhcmdldCk7CgogICAgICAgICAgICAgICAgICAgIC8qKiBAdmFyIFNpbXBsZVhNTEVsZW1lbnQgJGVsZVNoZWV0ICovCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbFdvcmtib29rLT5zaGVldHMtPnNoZWV0IGFzICRlbGVTaGVldCkgewogICAgICAgICAgICAgICAgICAgICAgICAkdG1wSW5mbyA9IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd3b3Jrc2hlZXROYW1lJyA9PiAoc3RyaW5nKSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCRlbGVTaGVldClbJ25hbWUnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYXN0Q29sdW1uTGV0dGVyJyA9PiAnQScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFzdENvbHVtbkluZGV4JyA9PiAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RvdGFsUm93cycgPT4gMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0b3RhbENvbHVtbnMnID0+IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIF07CgogICAgICAgICAgICAgICAgICAgICAgICAkZmlsZVdvcmtzaGVldCA9IChzdHJpbmcpICR3b3Jrc2hlZXRzWyhzdHJpbmcpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRlbGVTaGVldCwgJG5hbWVzcGFjZSksICdpZCcpXTsKICAgICAgICAgICAgICAgICAgICAgICAgJGZpbGVXb3Jrc2hlZXRQYXRoID0gc3RycG9zKCRmaWxlV29ya3NoZWV0LCAnLycpID09PSAwID8gc3Vic3RyKCRmaWxlV29ya3NoZWV0LCAxKSA6ICIkZGlyLyRmaWxlV29ya3NoZWV0IjsKCiAgICAgICAgICAgICAgICAgICAgICAgICR4bWwgPSBuZXcgWE1MUmVhZGVyKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICR4bWwtPnhtbCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5nZXRTZWN1cml0eVNjYW5uZXJPclRocm93KCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtPnNjYW4oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT56aXAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlsZVdvcmtzaGVldFBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudWxsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnBhcnNlSHVnZSA/IExJQlhNTF9QQVJTRUhVR0UgOiAwLAogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgICAgICAkeG1sLT5zZXRQYXJzZXJQcm9wZXJ0eSgyLCB0cnVlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICRjdXJyQ2VsbHMgPSAwOwogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoJHhtbC0+cmVhZCgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbC0+bG9jYWxOYW1lID09ICdyb3cnICYmICR4bWwtPm5vZGVUeXBlID09IFhNTFJlYWRlcjo6RUxFTUVOVCAmJiAkeG1sLT5uYW1lc3BhY2VVUkkgPT09ICRtYWluTlMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcm93ID0gJHhtbC0+Z2V0QXR0cmlidXRlKCdyJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRtcEluZm9bJ3RvdGFsUm93cyddID0gJHJvdzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdG1wSW5mb1sndG90YWxDb2x1bW5zJ10gPSBtYXgoJHRtcEluZm9bJ3RvdGFsQ29sdW1ucyddLCAkY3VyckNlbGxzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY3VyckNlbGxzID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmICgkeG1sLT5sb2NhbE5hbWUgPT0gJ2MnICYmICR4bWwtPm5vZGVUeXBlID09IFhNTFJlYWRlcjo6RUxFTUVOVCAmJiAkeG1sLT5uYW1lc3BhY2VVUkkgPT09ICRtYWluTlMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbCA9ICR4bWwtPmdldEF0dHJpYnV0ZSgncicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjdXJyQ2VsbHMgPSAkY2VsbCA/IG1heCgkY3VyckNlbGxzLCBDb29yZGluYXRlOjppbmRleGVzRnJvbVN0cmluZygkY2VsbClbMF0pIDogKCRjdXJyQ2VsbHMgKyAxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAkdG1wSW5mb1sndG90YWxDb2x1bW5zJ10gPSBtYXgoJHRtcEluZm9bJ3RvdGFsQ29sdW1ucyddLCAkY3VyckNlbGxzKTsKICAgICAgICAgICAgICAgICAgICAgICAgJHhtbC0+Y2xvc2UoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICR0bXBJbmZvWydsYXN0Q29sdW1uSW5kZXgnXSA9ICR0bXBJbmZvWyd0b3RhbENvbHVtbnMnXSAtIDE7CiAgICAgICAgICAgICAgICAgICAgICAgICR0bXBJbmZvWydsYXN0Q29sdW1uTGV0dGVyJ10gPSBDb29yZGluYXRlOjpzdHJpbmdGcm9tQ29sdW1uSW5kZXgoJHRtcEluZm9bJ2xhc3RDb2x1bW5JbmRleCddICsgMSk7CgogICAgICAgICAgICAgICAgICAgICAgICAkd29ya3NoZWV0SW5mb1tdID0gJHRtcEluZm87CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAkemlwLT5jbG9zZSgpOwoKICAgICAgICByZXR1cm4gJHdvcmtzaGVldEluZm87CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gY2FzdFRvQm9vbGVhbihTaW1wbGVYTUxFbGVtZW50ICRjKTogYm9vbAogICAgewogICAgICAgICR2YWx1ZSA9IGlzc2V0KCRjLT52KSA/IChzdHJpbmcpICRjLT52IDogbnVsbDsKICAgICAgICBpZiAoJHZhbHVlID09ICcwJykgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSBlbHNlaWYgKCR2YWx1ZSA9PSAnMScpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gKGJvb2wpICRjLT52OwogICAgfQoKICAgIHByaXZhdGUgc3RhdGljIGZ1bmN0aW9uIGNhc3RUb0Vycm9yKD9TaW1wbGVYTUxFbGVtZW50ICRjKTogP3N0cmluZwogICAgewogICAgICAgIHJldHVybiBpc3NldCgkYywgJGMtPnYpID8gKHN0cmluZykgJGMtPnYgOiBudWxsOwogICAgfQoKICAgIHByaXZhdGUgc3RhdGljIGZ1bmN0aW9uIGNhc3RUb1N0cmluZyg/U2ltcGxlWE1MRWxlbWVudCAkYyk6ID9zdHJpbmcKICAgIHsKICAgICAgICByZXR1cm4gaXNzZXQoJGMsICRjLT52KSA/IChzdHJpbmcpICRjLT52IDogbnVsbDsKICAgIH0KCiAgICAvKioKICAgICAqIEBwYXJhbSBtaXhlZCAkdmFsdWUKICAgICAqIEBwYXJhbSBtaXhlZCAkY2FsY3VsYXRlZFZhbHVlCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gY2FzdFRvRm9ybXVsYSg/U2ltcGxlWE1MRWxlbWVudCAkYywgc3RyaW5nICRyLCBzdHJpbmcgJiRjZWxsRGF0YVR5cGUsICYkdmFsdWUsICYkY2FsY3VsYXRlZFZhbHVlLCBzdHJpbmcgJGNhc3RCYXNlVHlwZSwgYm9vbCAkdXBkYXRlU2hhcmVkQ2VsbHMgPSB0cnVlKTogdm9pZAogICAgewogICAgICAgIGlmICgkYyA9PT0gbnVsbCkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgICRhdHRyID0gJGMtPmYtPmF0dHJpYnV0ZXMoKTsKICAgICAgICAkY2VsbERhdGFUeXBlID0gRGF0YVR5cGU6OlRZUEVfRk9STVVMQTsKICAgICAgICAkdmFsdWUgPSAiPXskYy0+Zn0iOwogICAgICAgICRjYWxjdWxhdGVkVmFsdWUgPSBzZWxmOjokY2FzdEJhc2VUeXBlKCRjKTsKCiAgICAgICAgLy8gU2hhcmVkIGZvcm11bGE/CiAgICAgICAgaWYgKGlzc2V0KCRhdHRyWyd0J10pICYmIHN0cnRvbG93ZXIoKHN0cmluZykgJGF0dHJbJ3QnXSkgPT0gJ3NoYXJlZCcpIHsKICAgICAgICAgICAgJGluc3RhbmNlID0gKHN0cmluZykgJGF0dHJbJ3NpJ107CgogICAgICAgICAgICBpZiAoIWlzc2V0KCR0aGlzLT5zaGFyZWRGb3JtdWxhZVsoc3RyaW5nKSAkYXR0clsnc2knXV0pKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+c2hhcmVkRm9ybXVsYWVbJGluc3RhbmNlXSA9IG5ldyBTaGFyZWRGb3JtdWxhKCRyLCAkdmFsdWUpOwogICAgICAgICAgICB9IGVsc2VpZiAoJHVwZGF0ZVNoYXJlZENlbGxzID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAvLyBJdCdzIG9ubHkgd29ydGggdGhlIG92ZXJoZWFkIG9mIGFkanVzdGluZyB0aGUgc2hhcmVkIGZvcm11bGEgZm9yIHRoaXMgY2VsbCBpZiB3ZSdyZSBhY3R1YWxseSBsb2FkaW5nCiAgICAgICAgICAgICAgICAvLyAgICAgdGhlIGNlbGwsIHdoaWNoIG1heSBub3QgYmUgdGhlIGNhc2UgaWYgd2UncmUgdXNpbmcgYSByZWFkIGZpbHRlci4KICAgICAgICAgICAgICAgICRtYXN0ZXIgPSBDb29yZGluYXRlOjppbmRleGVzRnJvbVN0cmluZygkdGhpcy0+c2hhcmVkRm9ybXVsYWVbJGluc3RhbmNlXS0+bWFzdGVyKCkpOwogICAgICAgICAgICAgICAgJGN1cnJlbnQgPSBDb29yZGluYXRlOjppbmRleGVzRnJvbVN0cmluZygkcik7CgogICAgICAgICAgICAgICAgJGRpZmZlcmVuY2UgPSBbMCwgMF07CiAgICAgICAgICAgICAgICAkZGlmZmVyZW5jZVswXSA9ICRjdXJyZW50WzBdIC0gJG1hc3RlclswXTsKICAgICAgICAgICAgICAgICRkaWZmZXJlbmNlWzFdID0gJGN1cnJlbnRbMV0gLSAkbWFzdGVyWzFdOwoKICAgICAgICAgICAgICAgICR2YWx1ZSA9ICR0aGlzLT5yZWZlcmVuY2VIZWxwZXItPnVwZGF0ZUZvcm11bGFSZWZlcmVuY2VzKCR0aGlzLT5zaGFyZWRGb3JtdWxhZVskaW5zdGFuY2VdLT5mb3JtdWxhKCksICdBMScsICRkaWZmZXJlbmNlWzBdLCAkZGlmZmVyZW5jZVsxXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBAcGFyYW0gc3RyaW5nICRmaWxlTmFtZQogICAgICovCiAgICBwcml2YXRlIGZ1bmN0aW9uIGZpbGVFeGlzdHNJbkFyY2hpdmUoWmlwQXJjaGl2ZSAkYXJjaGl2ZSwgJGZpbGVOYW1lID0gJycpOiBib29sCiAgICB7CiAgICAgICAgLy8gUm9vdC1yZWxhdGl2ZSBwYXRocwogICAgICAgIGlmIChzdHJwb3MoJGZpbGVOYW1lLCAnLy8nKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgJGZpbGVOYW1lID0gc3Vic3RyKCRmaWxlTmFtZSwgc3RycG9zKCRmaWxlTmFtZSwgJy8vJykgKyAxKTsKICAgICAgICB9CiAgICAgICAgJGZpbGVOYW1lID0gRmlsZTo6cmVhbHBhdGgoJGZpbGVOYW1lKTsKCiAgICAgICAgLy8gU2FkbHksIHNvbWUgM3JkIHBhcnR5IHhsc3ggZ2VuZXJhdG9ycyBkb24ndCB1c2UgY29uc2lzdGVudCBjYXNlIGZvciBmaWxlbmFtaW5nCiAgICAgICAgLy8gICAgc28gd2UgbmVlZCB0byBsb2FkIGNhc2UtaW5zZW5zaXRpdmVseSBmcm9tIHRoZSB6aXAgZmlsZQoKICAgICAgICAvLyBBcGFjaGUgUE9JIGZpeGVzCiAgICAgICAgJGNvbnRlbnRzID0gJGFyY2hpdmUtPmxvY2F0ZU5hbWUoJGZpbGVOYW1lLCBaaXBBcmNoaXZlOjpGTF9OT0NBU0UpOwogICAgICAgIGlmICgkY29udGVudHMgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICRjb250ZW50cyA9ICRhcmNoaXZlLT5sb2NhdGVOYW1lKHN1YnN0cigkZmlsZU5hbWUsIDEpLCBaaXBBcmNoaXZlOjpGTF9OT0NBU0UpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRjb250ZW50cyAhPT0gZmFsc2U7CiAgICB9CgogICAgLyoqCiAgICAgKiBAcGFyYW0gc3RyaW5nICRmaWxlTmFtZQogICAgICoKICAgICAqIEByZXR1cm4gc3RyaW5nCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gZ2V0RnJvbVppcEFyY2hpdmUoWmlwQXJjaGl2ZSAkYXJjaGl2ZSwgJGZpbGVOYW1lID0gJycpCiAgICB7CiAgICAgICAgLy8gUm9vdC1yZWxhdGl2ZSBwYXRocwogICAgICAgIGlmIChzdHJwb3MoJGZpbGVOYW1lLCAnLy8nKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgJGZpbGVOYW1lID0gc3Vic3RyKCRmaWxlTmFtZSwgc3RycG9zKCRmaWxlTmFtZSwgJy8vJykgKyAxKTsKICAgICAgICB9CiAgICAgICAgLy8gUmVsYXRpdmUgcGF0aHMgZ2VuZXJhdGVkIGJ5IGRpcm5hbWUoJGZpbGVuYW1lKSB3aGVuICRmaWxlbmFtZQogICAgICAgIC8vIGhhcyBubyBwYXRoIChpLmUuZmlsZXMgaW4gcm9vdCBvZiB0aGUgemlwIGFyY2hpdmUpCiAgICAgICAgJGZpbGVOYW1lID0gKHN0cmluZykgcHJlZ19yZXBsYWNlKCcvXlwuXC8vJywgJycsICRmaWxlTmFtZSk7CiAgICAgICAgJGZpbGVOYW1lID0gRmlsZTo6cmVhbHBhdGgoJGZpbGVOYW1lKTsKCiAgICAgICAgLy8gU2FkbHksIHNvbWUgM3JkIHBhcnR5IHhsc3ggZ2VuZXJhdG9ycyBkb24ndCB1c2UgY29uc2lzdGVudCBjYXNlIGZvciBmaWxlbmFtaW5nCiAgICAgICAgLy8gICAgc28gd2UgbmVlZCB0byBsb2FkIGNhc2UtaW5zZW5zaXRpdmVseSBmcm9tIHRoZSB6aXAgZmlsZQoKICAgICAgICAkY29udGVudHMgPSAkYXJjaGl2ZS0+Z2V0RnJvbU5hbWUoJGZpbGVOYW1lLCAwLCBaaXBBcmNoaXZlOjpGTF9OT0NBU0UpOwoKICAgICAgICAvLyBBcGFjaGUgUE9JIGZpeGVzCiAgICAgICAgaWYgKCRjb250ZW50cyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgJGNvbnRlbnRzID0gJGFyY2hpdmUtPmdldEZyb21OYW1lKHN1YnN0cigkZmlsZU5hbWUsIDEpLCAwLCBaaXBBcmNoaXZlOjpGTF9OT0NBU0UpOwogICAgICAgIH0KCiAgICAgICAgLy8gSGFzIHRoZSBmaWxlIGJlZW4gc2F2ZWQgd2l0aCBXaW5kb3plIGRpcmVjdG9yeSBzZXBhcmF0b3JzIHJhdGhlciB0aGFuIHVuaXg/CiAgICAgICAgaWYgKCRjb250ZW50cyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgJGNvbnRlbnRzID0gJGFyY2hpdmUtPmdldEZyb21OYW1lKHN0cl9yZXBsYWNlKCcvJywgJ1xcJywgJGZpbGVOYW1lKSwgMCwgWmlwQXJjaGl2ZTo6RkxfTk9DQVNFKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAoJGNvbnRlbnRzID09PSBmYWxzZSkgPyAnJyA6ICRjb250ZW50czsKICAgIH0KCiAgICAvKioKICAgICAqIExvYWRzIFNwcmVhZHNoZWV0IGZyb20gZmlsZS4KICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIGxvYWRTcHJlYWRzaGVldEZyb21GaWxlKHN0cmluZyAkZmlsZW5hbWUpOiBTcHJlYWRzaGVldAogICAgewogICAgICAgIEZpbGU6OmFzc2VydEZpbGUoJGZpbGVuYW1lLCBzZWxmOjpJTklUSUFMX0ZJTEUpOwoKICAgICAgICAvLyBJbml0aWFsaXNhdGlvbnMKICAgICAgICAkZXhjZWwgPSBuZXcgU3ByZWFkc2hlZXQoKTsKICAgICAgICAkZXhjZWwtPnJlbW92ZVNoZWV0QnlJbmRleCgwKTsKICAgICAgICAkYWRkaW5nRmlyc3RDZWxsU3R5bGVYZiA9IHRydWU7CiAgICAgICAgJGFkZGluZ0ZpcnN0Q2VsbFhmID0gdHJ1ZTsKCiAgICAgICAgJHVucGFyc2VkTG9hZGVkRGF0YSA9IFtdOwoKICAgICAgICAkdGhpcy0+emlwID0gJHppcCA9IG5ldyBaaXBBcmNoaXZlKCk7CiAgICAgICAgJHppcC0+b3BlbigkZmlsZW5hbWUpOwoKICAgICAgICAvLyAgICBSZWFkIHRoZSB0aGVtZSBmaXJzdCwgYmVjYXVzZSB3ZSBuZWVkIHRoZSBjb2xvdXIgc2NoZW1lIHdoZW4gcmVhZGluZyB0aGUgc3R5bGVzCiAgICAgICAgWyR3b3JrYm9va0Jhc2VuYW1lLCAkeG1sTmFtZXNwYWNlQmFzZV0gPSAkdGhpcy0+Z2V0V29ya2Jvb2tCYXNlTmFtZSgpOwogICAgICAgICRkcmF3aW5nTlMgPSBzZWxmOjpSRUxfVE9fRFJBV0lOR1skeG1sTmFtZXNwYWNlQmFzZV0gPz8gTmFtZXNwYWNlczo6RFJBV0lOR01MOwogICAgICAgICRjaGFydE5TID0gc2VsZjo6UkVMX1RPX0NIQVJUWyR4bWxOYW1lc3BhY2VCYXNlXSA/PyBOYW1lc3BhY2VzOjpDSEFSVDsKICAgICAgICAkd2JSZWxzID0gJHRoaXMtPmxvYWRaaXAoInhsL19yZWxzL3skd29ya2Jvb2tCYXNlbmFtZX0ucmVscyIsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgICR0aGVtZSA9IG51bGw7CiAgICAgICAgJHRoaXMtPnN0eWxlUmVhZGVyID0gbmV3IFN0eWxlcygpOwogICAgICAgIGZvcmVhY2ggKCR3YlJlbHMtPlJlbGF0aW9uc2hpcCBhcyAkcmVseCkgewogICAgICAgICAgICAkcmVsID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkcmVseCk7CiAgICAgICAgICAgICRyZWxUYXJnZXQgPSAoc3RyaW5nKSAkcmVsWydUYXJnZXQnXTsKICAgICAgICAgICAgaWYgKHN1YnN0cigkcmVsVGFyZ2V0LCAwLCA0KSA9PT0gJy94bC8nKSB7CiAgICAgICAgICAgICAgICAkcmVsVGFyZ2V0ID0gc3Vic3RyKCRyZWxUYXJnZXQsIDQpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHN3aXRjaCAoJHJlbFsnVHlwZSddKSB7CiAgICAgICAgICAgICAgICBjYXNlICIkeG1sTmFtZXNwYWNlQmFzZS90aGVtZSI6CiAgICAgICAgICAgICAgICAgICAgJHRoZW1lT3JkZXJBcnJheSA9IFsnbHQxJywgJ2RrMScsICdsdDInLCAnZGsyJ107CiAgICAgICAgICAgICAgICAgICAgJHRoZW1lT3JkZXJBZGRpdGlvbmFsID0gY291bnQoJHRoZW1lT3JkZXJBcnJheSk7CgogICAgICAgICAgICAgICAgICAgICR4bWxUaGVtZSA9ICR0aGlzLT5sb2FkWmlwKCJ4bC97JHJlbFRhcmdldH0iLCAkZHJhd2luZ05TKTsKICAgICAgICAgICAgICAgICAgICAkeG1sVGhlbWVOYW1lID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkeG1sVGhlbWUpOwogICAgICAgICAgICAgICAgICAgICR4bWxUaGVtZSA9ICR4bWxUaGVtZS0+Y2hpbGRyZW4oJGRyYXdpbmdOUyk7CiAgICAgICAgICAgICAgICAgICAgJHRoZW1lTmFtZSA9IChzdHJpbmcpICR4bWxUaGVtZU5hbWVbJ25hbWUnXTsKCiAgICAgICAgICAgICAgICAgICAgJGNvbG91clNjaGVtZSA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhtbFRoZW1lLT50aGVtZUVsZW1lbnRzLT5jbHJTY2hlbWUpOwogICAgICAgICAgICAgICAgICAgICRjb2xvdXJTY2hlbWVOYW1lID0gKHN0cmluZykgJGNvbG91clNjaGVtZVsnbmFtZSddOwogICAgICAgICAgICAgICAgICAgICRleGNlbC0+Z2V0VGhlbWUoKS0+c2V0VGhlbWVDb2xvck5hbWUoJGNvbG91clNjaGVtZU5hbWUpOwogICAgICAgICAgICAgICAgICAgICRjb2xvdXJTY2hlbWUgPSAkeG1sVGhlbWUtPnRoZW1lRWxlbWVudHMtPmNsclNjaGVtZS0+Y2hpbGRyZW4oJGRyYXdpbmdOUyk7CgogICAgICAgICAgICAgICAgICAgICR0aGVtZUNvbG91cnMgPSBbXTsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkY29sb3VyU2NoZW1lIGFzICRrID0+ICR4bWxDb2xvdXIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoZW1lUG9zID0gYXJyYXlfc2VhcmNoKCRrLCAkdGhlbWVPcmRlckFycmF5KTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGVtZVBvcyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGVtZVBvcyA9ICR0aGVtZU9yZGVyQWRkaXRpb25hbCsrOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkeG1sQ29sb3VyLT5zeXNDbHIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeG1sQ29sb3VyRGF0YSA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhtbENvbG91ci0+c3lzQ2xyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGVtZUNvbG91cnNbJHRoZW1lUG9zXSA9IChzdHJpbmcpICR4bWxDb2xvdXJEYXRhWydsYXN0Q2xyJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXhjZWwtPmdldFRoZW1lKCktPnNldFRoZW1lQ29sb3IoJGssIChzdHJpbmcpICR4bWxDb2xvdXJEYXRhWydsYXN0Q2xyJ10pOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoaXNzZXQoJHhtbENvbG91ci0+c3JnYkNscikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR4bWxDb2xvdXJEYXRhID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkeG1sQ29sb3VyLT5zcmdiQ2xyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGVtZUNvbG91cnNbJHRoZW1lUG9zXSA9IChzdHJpbmcpICR4bWxDb2xvdXJEYXRhWyd2YWwnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+Z2V0VGhlbWUoKS0+c2V0VGhlbWVDb2xvcigkaywgKHN0cmluZykgJHhtbENvbG91ckRhdGFbJ3ZhbCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkdGhlbWUgPSBuZXcgVGhlbWUoJHRoZW1lTmFtZSwgJGNvbG91clNjaGVtZU5hbWUsICR0aGVtZUNvbG91cnMpOwogICAgICAgICAgICAgICAgICAgICR0aGlzLT5zdHlsZVJlYWRlci0+c2V0VGhlbWUoJHRoZW1lKTsKCiAgICAgICAgICAgICAgICAgICAgJGZvbnRTY2hlbWUgPSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCR4bWxUaGVtZS0+dGhlbWVFbGVtZW50cy0+Zm9udFNjaGVtZSk7CiAgICAgICAgICAgICAgICAgICAgJGZvbnRTY2hlbWVOYW1lID0gKHN0cmluZykgJGZvbnRTY2hlbWVbJ25hbWUnXTsKICAgICAgICAgICAgICAgICAgICAkZXhjZWwtPmdldFRoZW1lKCktPnNldFRoZW1lRm9udE5hbWUoJGZvbnRTY2hlbWVOYW1lKTsKICAgICAgICAgICAgICAgICAgICAkbWFqb3JGb250cyA9IFtdOwogICAgICAgICAgICAgICAgICAgICRtaW5vckZvbnRzID0gW107CiAgICAgICAgICAgICAgICAgICAgJGZvbnRTY2hlbWUgPSAkeG1sVGhlbWUtPnRoZW1lRWxlbWVudHMtPmZvbnRTY2hlbWUtPmNoaWxkcmVuKCRkcmF3aW5nTlMpOwogICAgICAgICAgICAgICAgICAgICRtYWpvckxhdGluID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZm9udFNjaGVtZS0+bWFqb3JGb250LT5sYXRpbilbJ3R5cGVmYWNlJ10gPz8gJyc7CiAgICAgICAgICAgICAgICAgICAgJG1ham9yRWFzdEFzaWFuID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZm9udFNjaGVtZS0+bWFqb3JGb250LT5lYSlbJ3R5cGVmYWNlJ10gPz8gJyc7CiAgICAgICAgICAgICAgICAgICAgJG1ham9yQ29tcGxleFNjcmlwdCA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJGZvbnRTY2hlbWUtPm1ham9yRm9udC0+Y3MpWyd0eXBlZmFjZSddID8/ICcnOwogICAgICAgICAgICAgICAgICAgICRtaW5vckxhdGluID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZm9udFNjaGVtZS0+bWlub3JGb250LT5sYXRpbilbJ3R5cGVmYWNlJ10gPz8gJyc7CiAgICAgICAgICAgICAgICAgICAgJG1pbm9yRWFzdEFzaWFuID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZm9udFNjaGVtZS0+bWlub3JGb250LT5lYSlbJ3R5cGVmYWNlJ10gPz8gJyc7CiAgICAgICAgICAgICAgICAgICAgJG1pbm9yQ29tcGxleFNjcmlwdCA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJGZvbnRTY2hlbWUtPm1pbm9yRm9udC0+Y3MpWyd0eXBlZmFjZSddID8/ICcnOwoKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkZm9udFNjaGVtZS0+bWFqb3JGb250LT5mb250IGFzICR4bWxGb250KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRmb250QXR0cmlidXRlcyA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhtbEZvbnQpOwogICAgICAgICAgICAgICAgICAgICAgICAkc2NyaXB0ID0gKHN0cmluZykgKCRmb250QXR0cmlidXRlc1snc2NyaXB0J10gPz8gJycpOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRzY3JpcHQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWFqb3JGb250c1skc2NyaXB0XSA9IChzdHJpbmcpICgkZm9udEF0dHJpYnV0ZXNbJ3R5cGVmYWNlJ10gPz8gJycpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRmb250U2NoZW1lLT5taW5vckZvbnQtPmZvbnQgYXMgJHhtbEZvbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGZvbnRBdHRyaWJ1dGVzID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkeG1sRm9udCk7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY3JpcHQgPSAoc3RyaW5nKSAoJGZvbnRBdHRyaWJ1dGVzWydzY3JpcHQnXSA/PyAnJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZW1wdHkoJHNjcmlwdCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRtaW5vckZvbnRzWyRzY3JpcHRdID0gKHN0cmluZykgKCRmb250QXR0cmlidXRlc1sndHlwZWZhY2UnXSA/PyAnJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJGV4Y2VsLT5nZXRUaGVtZSgpLT5zZXRNYWpvckZvbnRWYWx1ZXMoJG1ham9yTGF0aW4sICRtYWpvckVhc3RBc2lhbiwgJG1ham9yQ29tcGxleFNjcmlwdCwgJG1ham9yRm9udHMpOwogICAgICAgICAgICAgICAgICAgICRleGNlbC0+Z2V0VGhlbWUoKS0+c2V0TWlub3JGb250VmFsdWVzKCRtaW5vckxhdGluLCAkbWlub3JFYXN0QXNpYW4sICRtaW5vckNvbXBsZXhTY3JpcHQsICRtaW5vckZvbnRzKTsKCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICRyZWxzID0gJHRoaXMtPmxvYWRaaXAoc2VsZjo6SU5JVElBTF9GSUxFLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKCiAgICAgICAgJHByb3BlcnR5UmVhZGVyID0gbmV3IFByb3BlcnR5UmVhZGVyKCR0aGlzLT5nZXRTZWN1cml0eVNjYW5uZXJPclRocm93KCksICRleGNlbC0+Z2V0UHJvcGVydGllcygpKTsKICAgICAgICAkY2hhcnREZXRhaWxzID0gW107CiAgICAgICAgZm9yZWFjaCAoJHJlbHMtPlJlbGF0aW9uc2hpcCBhcyAkcmVseCkgewogICAgICAgICAgICAkcmVsID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkcmVseCk7CiAgICAgICAgICAgICRyZWxUYXJnZXQgPSAoc3RyaW5nKSAkcmVsWydUYXJnZXQnXTsKICAgICAgICAgICAgLy8gaXNzdWUgMzU1MwogICAgICAgICAgICBpZiAoJHJlbFRhcmdldFswXSA9PT0gJy8nKSB7CiAgICAgICAgICAgICAgICAkcmVsVGFyZ2V0ID0gc3Vic3RyKCRyZWxUYXJnZXQsIDEpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRyZWxUeXBlID0gKHN0cmluZykgJHJlbFsnVHlwZSddOwogICAgICAgICAgICAkbWFpbk5TID0gc2VsZjo6UkVMX1RPX01BSU5bJHJlbFR5cGVdID8/IE5hbWVzcGFjZXM6Ok1BSU47CiAgICAgICAgICAgIHN3aXRjaCAoJHJlbFR5cGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgTmFtZXNwYWNlczo6Q09SRV9QUk9QRVJUSUVTOgogICAgICAgICAgICAgICAgICAgICRwcm9wZXJ0eVJlYWRlci0+cmVhZENvcmVQcm9wZXJ0aWVzKCR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkcmVsVGFyZ2V0KSk7CgogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAiJHhtbE5hbWVzcGFjZUJhc2UvZXh0ZW5kZWQtcHJvcGVydGllcyI6CiAgICAgICAgICAgICAgICAgICAgJHByb3BlcnR5UmVhZGVyLT5yZWFkRXh0ZW5kZWRQcm9wZXJ0aWVzKCR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkcmVsVGFyZ2V0KSk7CgogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAiJHhtbE5hbWVzcGFjZUJhc2UvY3VzdG9tLXByb3BlcnRpZXMiOgogICAgICAgICAgICAgICAgICAgICRwcm9wZXJ0eVJlYWRlci0+cmVhZEN1c3RvbVByb3BlcnRpZXMoJHRoaXMtPmdldEZyb21aaXBBcmNoaXZlKCR6aXAsICRyZWxUYXJnZXQpKTsKCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgLy9SaWJib24KICAgICAgICAgICAgICAgIGNhc2UgTmFtZXNwYWNlczo6RVhURU5TSUJJTElUWToKICAgICAgICAgICAgICAgICAgICAkY3VzdG9tVUkgPSAkcmVsVGFyZ2V0OwogICAgICAgICAgICAgICAgICAgIGlmICgkY3VzdG9tVUkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnJlYWRSaWJib24oJGV4Y2VsLCAkY3VzdG9tVUksICR6aXApOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlICIkeG1sTmFtZXNwYWNlQmFzZS9vZmZpY2VEb2N1bWVudCI6CiAgICAgICAgICAgICAgICAgICAgJGRpciA9IGRpcm5hbWUoJHJlbFRhcmdldCk7CgogICAgICAgICAgICAgICAgICAgIC8vIERvIG5vdCBzcGVjaWZ5IG5hbWVzcGFjZSBpbiBuZXh0IHN0bXQgLSBkbyBpdCBpbiBYcGF0aAogICAgICAgICAgICAgICAgICAgICRyZWxzV29ya2Jvb2sgPSAkdGhpcy0+bG9hZFppcCgiJGRpci9fcmVscy8iIC4gYmFzZW5hbWUoJHJlbFRhcmdldCkgLiAnLnJlbHMnLCAnJyk7CiAgICAgICAgICAgICAgICAgICAgJHJlbHNXb3JrYm9vay0+cmVnaXN0ZXJYUGF0aE5hbWVzcGFjZSgncmVsJywgTmFtZXNwYWNlczo6UkVMQVRJT05TSElQUyk7CgogICAgICAgICAgICAgICAgICAgICR3b3Jrc2hlZXRzID0gW107CiAgICAgICAgICAgICAgICAgICAgJG1hY3JvcyA9ICRjdXN0b21VSSA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJlbHNXb3JrYm9vay0+UmVsYXRpb25zaGlwIGFzICRlbGV4KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRlbGUgPSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCRlbGV4KTsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICgkZWxlWydUeXBlJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgTmFtZXNwYWNlczo6V09SS1NIRUVUOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBOYW1lc3BhY2VzOjpQVVJMX1dPUktTSEVFVDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkd29ya3NoZWV0c1soc3RyaW5nKSAkZWxlWydJZCddXSA9ICRlbGVbJ1RhcmdldCddOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgTmFtZXNwYWNlczo6Q0hBUlRTSEVFVDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHRoaXMtPmluY2x1ZGVDaGFydHMgPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdvcmtzaGVldHNbKHN0cmluZykgJGVsZVsnSWQnXV0gPSAkZWxlWydUYXJnZXQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGEgdmJhUHJvamVjdCA/ICg6IHNvbWUgbWFjcm9zKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBOYW1lc3BhY2VzOjpWQkE6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG1hY3JvcyA9ICRlbGVbJ1RhcmdldCddOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKCRtYWNyb3MgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJG1hY3Jvc0NvZGUgPSAkdGhpcy0+Z2V0RnJvbVppcEFyY2hpdmUoJHppcCwgJ3hsL3ZiYVByb2plY3QuYmluJyk7IC8vdmJhUHJvamVjdC5iaW4gYWx3YXlzIGluICd4bCcgZGlyIGFuZCBhbHdheXMgbmFtZWQgdmJhUHJvamVjdC5iaW4KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRtYWNyb3NDb2RlICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4Y2VsLT5zZXRNYWNyb3NDb2RlKCRtYWNyb3NDb2RlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+c2V0SGFzTWFjcm9zKHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9zaG9ydC1jaXJjdWl0IDogbm90IHJlYWRpbmcgdmJhUHJvamVjdC5iaW4ucmVsIHRvIGdldCBTaWduYXR1cmUgPT5hbGx3YXlzIHZiYVByb2plY3RTaWduYXR1cmUuYmluIGluICd4bCcgZGlyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkQ2VydGlmaWNhdGUgPSAkdGhpcy0+Z2V0RnJvbVppcEFyY2hpdmUoJHppcCwgJ3hsL3ZiYVByb2plY3RTaWduYXR1cmUuYmluJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJENlcnRpZmljYXRlICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+c2V0TWFjcm9zQ2VydGlmaWNhdGUoJENlcnRpZmljYXRlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJHJlbFR5cGUgPSAicmVsOlJlbGF0aW9uc2hpcFtAVHlwZT0nIgogICAgICAgICAgICAgICAgICAgICAgICAuICIkeG1sTmFtZXNwYWNlQmFzZS9zdHlsZXMiCiAgICAgICAgICAgICAgICAgICAgICAgIC4gIiddIjsKICAgICAgICAgICAgICAgICAgICAkeHBhdGggPSBzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6eHBhdGhOb0ZhbHNlKCRyZWxzV29ya2Jvb2ssICRyZWxUeXBlKSk7CgogICAgICAgICAgICAgICAgICAgIGlmICgkeHBhdGggPT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHhtbFN0eWxlcyA9IHNlbGY6OnRlc3RTaW1wbGVYbWwobnVsbCk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHhtbFN0eWxlcyA9ICR0aGlzLT5sb2FkWmlwKCIkZGlyLyR4cGF0aFtUYXJnZXRdIiwgJG1haW5OUyk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAkcGFsZXR0ZSA9IHNlbGY6OmV4dHJhY3RQYWxldHRlKCR4bWxTdHlsZXMpOwogICAgICAgICAgICAgICAgICAgICR0aGlzLT5zdHlsZVJlYWRlci0+c2V0V29ya2Jvb2tQYWxldHRlKCRwYWxldHRlKTsKICAgICAgICAgICAgICAgICAgICAkZmlsbHMgPSBzZWxmOjpleHRyYWN0U3R5bGVzKCR4bWxTdHlsZXMsICdmaWxscycsICdmaWxsJyk7CiAgICAgICAgICAgICAgICAgICAgJGZvbnRzID0gc2VsZjo6ZXh0cmFjdFN0eWxlcygkeG1sU3R5bGVzLCAnZm9udHMnLCAnZm9udCcpOwogICAgICAgICAgICAgICAgICAgICRib3JkZXJzID0gc2VsZjo6ZXh0cmFjdFN0eWxlcygkeG1sU3R5bGVzLCAnYm9yZGVycycsICdib3JkZXInKTsKICAgICAgICAgICAgICAgICAgICAkeGZUYWdzID0gc2VsZjo6ZXh0cmFjdFN0eWxlcygkeG1sU3R5bGVzLCAnY2VsbFhmcycsICd4ZicpOwogICAgICAgICAgICAgICAgICAgICRjZWxsWGZUYWdzID0gc2VsZjo6ZXh0cmFjdFN0eWxlcygkeG1sU3R5bGVzLCAnY2VsbFN0eWxlWGZzJywgJ3hmJyk7CgogICAgICAgICAgICAgICAgICAgICRzdHlsZXMgPSBbXTsKICAgICAgICAgICAgICAgICAgICAkY2VsbFN0eWxlcyA9IFtdOwogICAgICAgICAgICAgICAgICAgICRudW1GbXRzID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICBpZiAoLyokeG1sU3R5bGVzICYmICovICR4bWxTdHlsZXMtPm51bUZtdHNbMF0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgJG51bUZtdHMgPSAkeG1sU3R5bGVzLT5udW1GbXRzWzBdOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJG51bUZtdHMpICYmICgkbnVtRm10cyAhPT0gbnVsbCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJG51bUZtdHMtPnJlZ2lzdGVyWFBhdGhOYW1lc3BhY2UoJ3NtbCcsICRtYWluTlMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c3R5bGVSZWFkZXItPnNldE5hbWVzcGFjZSgkbWFpbk5TKTsKICAgICAgICAgICAgICAgICAgICBpZiAoISR0aGlzLT5yZWFkRGF0YU9ubHkvKiAmJiAkeG1sU3R5bGVzKi8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhmVGFncyBhcyAkeGZUYWcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR4ZiA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhmVGFnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRudW1GbXQgPSBudWxsOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeGZbJ251bUZtdElkJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJG51bUZtdHMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0bXBOdW1GbXQgPSBzZWxmOjpnZXRBcnJheUl0ZW0oJG51bUZtdHMtPnhwYXRoKCJzbWw6bnVtRm10W0BudW1GbXRJZD0keGZbbnVtRm10SWRdXSIpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkdG1wTnVtRm10Wydmb3JtYXRDb2RlJ10pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbnVtRm10ID0gKHN0cmluZykgJHRtcE51bUZtdFsnZm9ybWF0Q29kZSddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXZSBzaG91bGRuJ3Qgb3ZlcnJpZGUgYW55IG9mIHRoZSBidWlsdC1pbiBNUyBFeGNlbCB2YWx1ZXMgKHZhbHVlcyBiZWxvdyBpZCAxNjQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gIEJ1dCB0aGVyZSdzIGEgbG90IG9mIG5hdWdodHkgaG9tZWJyZXcgeGxzeCB3cml0ZXJzIHRoYXQgZG8gdXNlICJyZXNlcnZlZCIgaWQgdmFsdWVzIHRoYXQgYXJlbid0IGFjdHVhbGx5IHVzZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgU28gd2UgbWFrZSBhbGxvd2FuY2UgZm9yIHRoZW0gcmF0aGVyIHRoYW4gbG9zZSBmb3JtYXR0aW5nIG1hc2tzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbnVtRm10ID09PSBudWxsICYmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChpbnQpICR4ZlsnbnVtRm10SWQnXSA8IDE2NCAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOdW1iZXJGb3JtYXQ6OmJ1aWx0SW5Gb3JtYXRDb2RlKChpbnQpICR4ZlsnbnVtRm10SWQnXSkgIT09ICcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRudW1GbXQgPSBOdW1iZXJGb3JtYXQ6OmJ1aWx0SW5Gb3JtYXRDb2RlKChpbnQpICR4ZlsnbnVtRm10SWQnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHF1b3RlUHJlZml4ID0gKGJvb2wpIChzdHJpbmcpICgkeGZbJ3F1b3RlUHJlZml4J10gPz8gJycpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHlsZSA9IChvYmplY3QpIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbnVtRm10JyA9PiAkbnVtRm10ID8/IE51bWJlckZvcm1hdDo6Rk9STUFUX0dFTkVSQUwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZvbnQnID0+ICRmb250c1soaW50KSAoJHhmWydmb250SWQnXSldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmaWxsJyA9PiAkZmlsbHNbKGludCkgKCR4ZlsnZmlsbElkJ10pXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYm9yZGVyJyA9PiAkYm9yZGVyc1soaW50KSAoJHhmWydib3JkZXJJZCddKV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FsaWdubWVudCcgPT4gJHhmVGFnLT5hbGlnbm1lbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Byb3RlY3Rpb24nID0+ICR4ZlRhZy0+cHJvdGVjdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncXVvdGVQcmVmaXgnID0+ICRxdW90ZVByZWZpeCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R5bGVzW10gPSAkc3R5bGU7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWRkIHN0eWxlIHRvIGNlbGxYZiBjb2xsZWN0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqU3R5bGUgPSBuZXcgU3R5bGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5zdHlsZVJlYWRlci0+cmVhZFN0eWxlKCRvYmpTdHlsZSwgJHN0eWxlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkYWRkaW5nRmlyc3RDZWxsWGYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXhjZWwtPnJlbW92ZUNlbGxYZkJ5SW5kZXgoMCk7IC8vIHJlbW92ZSB0aGUgZGVmYXVsdCBzdHlsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhZGRpbmdGaXJzdENlbGxYZiA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4Y2VsLT5hZGRDZWxsWGYoJG9ialN0eWxlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGNlbGxYZlRhZ3MgYXMgJHhmVGFnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeGYgPSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCR4ZlRhZyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbnVtRm10ID0gTnVtYmVyRm9ybWF0OjpGT1JNQVRfR0VORVJBTDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkbnVtRm10cyAmJiAkeGZbJ251bUZtdElkJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdG1wTnVtRm10ID0gc2VsZjo6Z2V0QXJyYXlJdGVtKCRudW1GbXRzLT54cGF0aCgic21sOm51bUZtdFtAbnVtRm10SWQ9JHhmW251bUZtdElkXV0iKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCR0bXBOdW1GbXRbJ2Zvcm1hdENvZGUnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG51bUZtdCA9IChzdHJpbmcpICR0bXBOdW1GbXRbJ2Zvcm1hdENvZGUnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoKGludCkgJHhmWydudW1GbXRJZCddIDwgMTY1KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRudW1GbXQgPSBOdW1iZXJGb3JtYXQ6OmJ1aWx0SW5Gb3JtYXRDb2RlKChpbnQpICR4ZlsnbnVtRm10SWQnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRxdW90ZVByZWZpeCA9IChib29sKSAoc3RyaW5nKSAoJHhmWydxdW90ZVByZWZpeCddID8/ICcnKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbFN0eWxlID0gKG9iamVjdCkgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdudW1GbXQnID0+ICRudW1GbXQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZvbnQnID0+ICRmb250c1soaW50KSAoJHhmWydmb250SWQnXSldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmaWxsJyA9PiAkZmlsbHNbKChpbnQpICR4ZlsnZmlsbElkJ10pXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYm9yZGVyJyA9PiAkYm9yZGVyc1soaW50KSAoJHhmWydib3JkZXJJZCddKV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FsaWdubWVudCcgPT4gJHhmVGFnLT5hbGlnbm1lbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Byb3RlY3Rpb24nID0+ICR4ZlRhZy0+cHJvdGVjdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncXVvdGVQcmVmaXgnID0+ICRxdW90ZVByZWZpeCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbFN0eWxlc1tdID0gJGNlbGxTdHlsZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhZGQgc3R5bGUgdG8gY2VsbFN0eWxlWGYgY29sbGVjdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9ialN0eWxlID0gbmV3IFN0eWxlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c3R5bGVSZWFkZXItPnJlYWRTdHlsZSgkb2JqU3R5bGUsICRjZWxsU3R5bGUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRhZGRpbmdGaXJzdENlbGxTdHlsZVhmKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4Y2VsLT5yZW1vdmVDZWxsU3R5bGVYZkJ5SW5kZXgoMCk7IC8vIHJlbW92ZSB0aGUgZGVmYXVsdCBzdHlsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhZGRpbmdGaXJzdENlbGxTdHlsZVhmID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXhjZWwtPmFkZENlbGxTdHlsZVhmKCRvYmpTdHlsZSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnN0eWxlUmVhZGVyLT5zZXRTdHlsZVhtbCgkeG1sU3R5bGVzKTsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c3R5bGVSZWFkZXItPnNldE5hbWVzcGFjZSgkbWFpbk5TKTsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+c3R5bGVSZWFkZXItPnNldFN0eWxlQmFzZURhdGEoJHRoZW1lLCAkc3R5bGVzLCAkY2VsbFN0eWxlcyk7CiAgICAgICAgICAgICAgICAgICAgJGR4ZnMgPSAkdGhpcy0+c3R5bGVSZWFkZXItPmR4ZnMoJHRoaXMtPnJlYWREYXRhT25seSk7CiAgICAgICAgICAgICAgICAgICAgJHN0eWxlcyA9ICR0aGlzLT5zdHlsZVJlYWRlci0+c3R5bGVzKCk7CgogICAgICAgICAgICAgICAgICAgIC8vIFJlYWQgY29udGVudCBhZnRlciBzZXR0aW5nIHRoZSBzdHlsZXMKICAgICAgICAgICAgICAgICAgICAkc2hhcmVkU3RyaW5ncyA9IFtdOwogICAgICAgICAgICAgICAgICAgICRyZWxUeXBlID0gInJlbDpSZWxhdGlvbnNoaXBbQFR5cGU9JyIKICAgICAgICAgICAgICAgICAgICAgICAgLy8uIE5hbWVzcGFjZXM6OlNIQVJFRF9TVFJJTkdTCiAgICAgICAgICAgICAgICAgICAgICAgIC4gIiR4bWxOYW1lc3BhY2VCYXNlL3NoYXJlZFN0cmluZ3MiCiAgICAgICAgICAgICAgICAgICAgICAgIC4gIiddIjsKICAgICAgICAgICAgICAgICAgICAkeHBhdGggPSBzZWxmOjpnZXRBcnJheUl0ZW0oJHJlbHNXb3JrYm9vay0+eHBhdGgoJHJlbFR5cGUpKTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCR4cGF0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAkeG1sU3RyaW5ncyA9ICR0aGlzLT5sb2FkWmlwKCIkZGlyLyR4cGF0aFtUYXJnZXRdIiwgJG1haW5OUyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkeG1sU3RyaW5ncy0+c2kpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkeG1sU3RyaW5ncy0+c2kgYXMgJHZhbCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkdmFsLT50KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhcmVkU3RyaW5nc1tdID0gU3RyaW5nSGVscGVyOjpjb250cm9sQ2hhcmFjdGVyT09YTUwyUEhQKChzdHJpbmcpICR2YWwtPnQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChpc3NldCgkdmFsLT5yKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhcmVkU3RyaW5nc1tdID0gJHRoaXMtPnBhcnNlUmljaFRleHQoJHZhbCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAkeG1sV29ya2Jvb2sgPSAkdGhpcy0+bG9hZFppcE5vTmFtZXNwYWNlKCRyZWxUYXJnZXQsICRtYWluTlMpOwogICAgICAgICAgICAgICAgICAgICR4bWxXb3JrYm9va05TID0gJHRoaXMtPmxvYWRaaXAoJHJlbFRhcmdldCwgJG1haW5OUyk7CgogICAgICAgICAgICAgICAgICAgIC8vIFNldCBiYXNlIGRhdGUKICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFdvcmtib29rTlMtPndvcmtib29rUHIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgRGF0ZTo6c2V0RXhjZWxDYWxlbmRhcihEYXRlOjpDQUxFTkRBUl9XSU5ET1dTXzE5MDApOwogICAgICAgICAgICAgICAgICAgICAgICAkYXR0cnMxOTA0ID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkeG1sV29ya2Jvb2tOUy0+d29ya2Jvb2tQcik7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkYXR0cnMxOTA0WydkYXRlMTkwNCddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGY6OmJvb2xlYW4oKHN0cmluZykgJGF0dHJzMTkwNFsnZGF0ZTE5MDQnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEYXRlOjpzZXRFeGNlbENhbGVuZGFyKERhdGU6OkNBTEVOREFSX01BQ18xOTA0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHByb3RlY3Rpb24KICAgICAgICAgICAgICAgICAgICAkdGhpcy0+cmVhZFByb3RlY3Rpb24oJGV4Y2VsLCAkeG1sV29ya2Jvb2spOwoKICAgICAgICAgICAgICAgICAgICAkc2hlZXRJZCA9IDA7IC8vIGtlZXAgdHJhY2sgb2YgbmV3IHNoZWV0IGlkIGluIGZpbmFsIHdvcmtib29rCiAgICAgICAgICAgICAgICAgICAgJG9sZFNoZWV0SWQgPSAtMTsgLy8ga2VlcCB0cmFjayBvZiBvbGQgc2hlZXQgaWQgaW4gZmluYWwgd29ya2Jvb2sKICAgICAgICAgICAgICAgICAgICAkY291bnRTa2lwcGVkU2hlZXRzID0gMDsgLy8ga2VlcCB0cmFjayBvZiBudW1iZXIgb2Ygc2tpcHBlZCBzaGVldHMKICAgICAgICAgICAgICAgICAgICAkbWFwU2hlZXRJZCA9IFtdOyAvLyBtYXBwaW5nIG9mIHNoZWV0IGlkcyBmcm9tIG9sZCB0byBuZXcKCiAgICAgICAgICAgICAgICAgICAgJGNoYXJ0cyA9ICRjaGFydERldGFpbHMgPSBbXTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCR4bWxXb3JrYm9va05TLT5zaGVldHMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEB2YXIgU2ltcGxlWE1MRWxlbWVudCAkZWxlU2hlZXQgKi8KICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbFdvcmtib29rTlMtPnNoZWV0cy0+c2hlZXQgYXMgJGVsZVNoZWV0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZWxlU2hlZXRBdHRyID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZWxlU2hlZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgKyskb2xkU2hlZXRJZDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBzaGVldCBzaG91bGQgYmUgc2tpcHBlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2FycmF5KCR0aGlzLT5sb2FkU2hlZXRzT25seSkgJiYgIWluX2FycmF5KChzdHJpbmcpICRlbGVTaGVldEF0dHJbJ25hbWUnXSwgJHRoaXMtPmxvYWRTaGVldHNPbmx5KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrJGNvdW50U2tpcHBlZFNoZWV0czsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWFwU2hlZXRJZFskb2xkU2hlZXRJZF0gPSBudWxsOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hlZXRSZWZlcmVuY2VJZCA9IChzdHJpbmcpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRlbGVTaGVldCwgJHhtbE5hbWVzcGFjZUJhc2UpLCAnaWQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkd29ya3NoZWV0c1skc2hlZXRSZWZlcmVuY2VJZF0pID09PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrJGNvdW50U2tpcHBlZFNoZWV0czsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWFwU2hlZXRJZFskb2xkU2hlZXRJZF0gPSBudWxsOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1hcCBvbGQgc2hlZXQgaWQgaW4gb3JpZ2luYWwgd29ya2Jvb2sgdG8gbmV3IHNoZWV0IGlkLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhleSB3aWxsIGRpZmZlciBpZiBsb2FkU2hlZXRzT25seSgpIGlzIGJlaW5nIHVzZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRtYXBTaGVldElkWyRvbGRTaGVldElkXSA9ICRvbGRTaGVldElkIC0gJGNvdW50U2tpcHBlZFNoZWV0czsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBMb2FkIHNoZWV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZG9jU2hlZXQgPSAkZXhjZWwtPmNyZWF0ZVNoZWV0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICBVc2UgZmFsc2UgZm9yICR1cGRhdGVGb3JtdWxhQ2VsbFJlZmVyZW5jZXMgdG8gcHJldmVudCBhZGp1c3RtZW50IG9mIHdvcmtzaGVldAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgIHJlZmVyZW5jZXMgaW4gZm9ybXVsYSBjZWxscy4uLiBkdXJpbmcgdGhlIGxvYWQsIGFsbCBmb3JtdWxhZSBzaG91bGQgYmUgY29ycmVjdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICBhbmQgd2UncmUgc2ltcGx5IGJyaW5naW5nIHRoZSB3b3Jrc2hlZXQgbmFtZSBpbiBsaW5lIHdpdGggdGhlIGZvcm11bGEsIG5vdCB0aGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAgICByZXZlcnNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZG9jU2hlZXQtPnNldFRpdGxlKChzdHJpbmcpICRlbGVTaGVldEF0dHJbJ25hbWUnXSwgZmFsc2UsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlsZVdvcmtzaGVldCA9IChzdHJpbmcpICR3b3Jrc2hlZXRzWyRzaGVldFJlZmVyZW5jZUlkXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR4bWxTaGVldCA9ICR0aGlzLT5sb2FkWmlwTm9OYW1lc3BhY2UoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiLCAkbWFpbk5TKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR4bWxTaGVldE5TID0gJHRoaXMtPmxvYWRaaXAoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiLCAkbWFpbk5TKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTaGFyZWQgRm9ybXVsYSB0YWJsZSBpcyB1bmlxdWUgdG8gZWFjaCBXb3Jrc2hlZXQsIHNvIHdlIG5lZWQgdG8gcmVzZXQgaXQgaGVyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnNoYXJlZEZvcm11bGFlID0gW107CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRlbGVTaGVldEF0dHJbJ3N0YXRlJ10pICYmIChzdHJpbmcpICRlbGVTaGVldEF0dHJbJ3N0YXRlJ10gIT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZG9jU2hlZXQtPnNldFNoZWV0U3RhdGUoKHN0cmluZykgJGVsZVNoZWV0QXR0clsnc3RhdGUnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFNoZWV0TlMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeG1sU2hlZXRNYWluID0gJHhtbFNoZWV0TlMtPmNoaWxkcmVuKCRtYWluTlMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldHRpbmcgQ29uZGl0aW9uYWwgU3R5bGVzIGFkanVzdHMgc2VsZWN0ZWQgY2VsbHMsIHNvIHdlIG5lZWQgdG8gZXhlY3V0ZSB0aGlzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgYmVmb3JlIHJlYWRpbmcgdGhlIHNoZWV0IHZpZXcgZGF0YSB0byBnZXQgdGhlIGFjdHVhbCBzZWxlY3RlZCBjZWxscwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHRoaXMtPnJlYWREYXRhT25seSAmJiAoJHhtbFNoZWV0LT5jb25kaXRpb25hbEZvcm1hdHRpbmcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChuZXcgQ29uZGl0aW9uYWxTdHlsZXMoJGRvY1NoZWV0LCAkeG1sU2hlZXQsICRkeGZzKSktPmxvYWQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdGhpcy0+cmVhZERhdGFPbmx5ICYmICR4bWxTaGVldC0+ZXh0THN0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChuZXcgQ29uZGl0aW9uYWxTdHlsZXMoJGRvY1NoZWV0LCAkeG1sU2hlZXQsICRkeGZzKSktPmxvYWRGcm9tRXh0KCR0aGlzLT5zdHlsZVJlYWRlcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkeG1sU2hlZXRNYWluLT5zaGVldFZpZXdzLCAkeG1sU2hlZXRNYWluLT5zaGVldFZpZXdzLT5zaGVldFZpZXcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGVldFZpZXdzID0gbmV3IFNoZWV0Vmlld3MoJHhtbFNoZWV0TWFpbi0+c2hlZXRWaWV3cy0+c2hlZXRWaWV3LCAkZG9jU2hlZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hlZXRWaWV3cy0+bG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoZWV0Vmlld09wdGlvbnMgPSBuZXcgU2hlZXRWaWV3T3B0aW9ucygkZG9jU2hlZXQsICR4bWxTaGVldE5TKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hlZXRWaWV3T3B0aW9ucy0+bG9hZCgkdGhpcy0+Z2V0UmVhZERhdGFPbmx5KCksICR0aGlzLT5zdHlsZVJlYWRlcik7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChuZXcgQ29sdW1uQW5kUm93QXR0cmlidXRlcygkZG9jU2hlZXQsICR4bWxTaGVldE5TKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLT5sb2FkKCR0aGlzLT5nZXRSZWFkRmlsdGVyKCksICR0aGlzLT5nZXRSZWFkRGF0YU9ubHkoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR4bWxTaGVldE5TICYmICR4bWxTaGVldE5TLT5zaGVldERhdGEgJiYgJHhtbFNoZWV0TlMtPnNoZWV0RGF0YS0+cm93KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNJbmRleCA9IDE7IC8vIENlbGwgU3RhcnQgZnJvbSAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbFNoZWV0TlMtPnNoZWV0RGF0YS0+cm93IGFzICRyb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJvd0luZGV4ID0gMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJvdy0+YyBhcyAkYykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNBdHRyID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkYyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkciA9IChzdHJpbmcpICRjQXR0clsnciddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRyID09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHIgPSBDb29yZGluYXRlOjpzdHJpbmdGcm9tQ29sdW1uSW5kZXgoJHJvd0luZGV4KSAuICRjSW5kZXg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbERhdGFUeXBlID0gKHN0cmluZykgJGNBdHRyWyd0J107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNhbGN1bGF0ZWRWYWx1ZSA9IG51bGw7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVhZCBjZWxsPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5nZXRSZWFkRmlsdGVyKCkgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29vcmRpbmF0ZXMgPSBDb29yZGluYXRlOjpjb29yZGluYXRlRnJvbVN0cmluZygkcik7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHRoaXMtPmdldFJlYWRGaWx0ZXIoKS0+cmVhZENlbGwoJGNvb3JkaW5hdGVzWzBdLCAoaW50KSAkY29vcmRpbmF0ZXNbMV0sICRkb2NTaGVldC0+Z2V0VGl0bGUoKSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTm9ybWFsbHksIGp1c3QgdGVzdGluZyBmb3IgdGhlIGYgYXR0cmlidXRlIHNob3VsZCBpZGVudGlmeSB0aGlzIGNlbGwgYXMgY29udGFpbmluZyBhIGZvcm11bGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhhdCB3ZSBuZWVkIHRvIHJlYWQsIGV2ZW4gdGhvdWdoIGl0IGlzIG91dHNpZGUgb2YgdGhlIGZpbHRlciByYW5nZSwgaW4gY2FzZSBpdCBpcyBhIHNoYXJlZCBmb3JtdWxhLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBCdXQgaW4gc29tZSBjYXNlcywgdGhpcyBhdHRyaWJ1dGUgaXNuJ3Qgc2V0OyBzbyB3ZSBuZWVkIHRvIGRlbHZlIGEgbGV2ZWwgZGVlcGVyIGFuZCBsb29rIGF0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdoZXRoZXIgb3Igbm90IHRoZSBjZWxsIGhhcyBhIGNoaWxkIGZvcm11bGEgZWxlbWVudCB0aGF0IGlzIHNoYXJlZC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRjQXR0ci0+ZikgfHwgKGlzc2V0KCRjLT5mLCAkYy0+Zi0+YXR0cmlidXRlcygpWyd0J10pICYmIHN0cnRvbG93ZXIoKHN0cmluZykgJGMtPmYtPmF0dHJpYnV0ZXMoKVsndCddKSA9PT0gJ3NoYXJlZCcpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2FzdFRvRm9ybXVsYSgkYywgJHIsICRjZWxsRGF0YVR5cGUsICR2YWx1ZSwgJGNhbGN1bGF0ZWRWYWx1ZSwgJ2Nhc3RUb0Vycm9yJywgZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrJHJvd0luZGV4OwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlYWQgY2VsbCEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1c2VGb3JtdWxhID0gaXNzZXQoJGMtPmYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgKChzdHJpbmcpICRjLT5mICE9PSAnJyB8fCAoaXNzZXQoJGMtPmYtPmF0dHJpYnV0ZXMoKVsndCddKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmIHN0cnRvbG93ZXIoKHN0cmluZykgJGMtPmYtPmF0dHJpYnV0ZXMoKVsndCddKSA9PT0gJ3NoYXJlZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoJGNlbGxEYXRhVHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHN0cmluZykgJGMtPnYgIT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2YWx1ZSA9ICRzaGFyZWRTdHJpbmdzWyhpbnQpICgkYy0+dildOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdmFsdWUgaW5zdGFuY2VvZiBSaWNoVGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2YWx1ZSA9IGNsb25lICR2YWx1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2YWx1ZSA9ICcnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdiJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc3NldCgkYy0+ZikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkYy0+dikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSBzZWxmOjpjYXN0VG9Cb29sZWFuKCRjKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHVlID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbERhdGFUeXBlID0gREFUQVRZUEU6OlRZUEVfTlVMTDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZvcm11bGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5jYXN0VG9Gb3JtdWxhKCRjLCAkciwgJGNlbGxEYXRhVHlwZSwgJHZhbHVlLCAkY2FsY3VsYXRlZFZhbHVlLCAnY2FzdFRvQm9vbGVhbicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZjo6c3RvcmVGb3JtdWxhQXR0cmlidXRlcygkYy0+ZiwgJGRvY1NoZWV0LCAkcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3N0cic6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdXNlRm9ybXVsYSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhc3RUb0Zvcm11bGEoJGMsICRyLCAkY2VsbERhdGFUeXBlLCAkdmFsdWUsICRjYWxjdWxhdGVkVmFsdWUsICdjYXN0VG9TdHJpbmcnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGY6OnN0b3JlRm9ybXVsYUF0dHJpYnV0ZXMoJGMtPmYsICRkb2NTaGVldCwgJHIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHVlID0gc2VsZjo6Y2FzdFRvU3RyaW5nKCRjKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnaW5saW5lU3RyJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRjLT5mKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhc3RUb0Zvcm11bGEoJGMsICRyLCAkY2VsbERhdGFUeXBlLCAkdmFsdWUsICRjYWxjdWxhdGVkVmFsdWUsICdjYXN0VG9FcnJvcicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHVlID0gJHRoaXMtPnBhcnNlUmljaFRleHQoJGMtPmlzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnZSc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGMtPmYpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSBzZWxmOjpjYXN0VG9FcnJvcigkYyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBGb3JtdWxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+Y2FzdFRvRm9ybXVsYSgkYywgJHIsICRjZWxsRGF0YVR5cGUsICR2YWx1ZSwgJGNhbGN1bGF0ZWRWYWx1ZSwgJ2Nhc3RUb0Vycm9yJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGMtPmYpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSBzZWxmOjpjYXN0VG9TdHJpbmcoJGMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9ybXVsYQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPmNhc3RUb0Zvcm11bGEoJGMsICRyLCAkY2VsbERhdGFUeXBlLCAkdmFsdWUsICRjYWxjdWxhdGVkVmFsdWUsICdjYXN0VG9TdHJpbmcnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc19udW1lcmljKCRjYWxjdWxhdGVkVmFsdWUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNhbGN1bGF0ZWRWYWx1ZSArPSAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZjo6c3RvcmVGb3JtdWxhQXR0cmlidXRlcygkYy0+ZiwgJGRvY1NoZWV0LCAkcik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJlYWQgZW1wdHkgY2VsbHMgb3IgdGhlIGNlbGxzIGFyZSBub3QgZW1wdHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+cmVhZEVtcHR5Q2VsbHMgfHwgKCR2YWx1ZSAhPT0gbnVsbCAmJiAkdmFsdWUgIT09ICcnKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJpY2ggdGV4dD8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHZhbHVlIGluc3RhbmNlb2YgUmljaFRleHQgJiYgJHRoaXMtPnJlYWREYXRhT25seSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmFsdWUgPSAkdmFsdWUtPmdldFBsYWluVGV4dCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNlbGwgPSAkZG9jU2hlZXQtPmdldENlbGwoJHIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFzc2lnbiB2YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkY2VsbERhdGFUeXBlICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0IGlzIHBvc3NpYmxlLCB0aGF0IGRhdGF0eXBlIGlzIG51bWVyaWMgYnV0IHdpdGggYW4gZW1wdHkgc3RyaW5nLCB3aGljaCByZXN1bHQgaW4gYW4gZXJyb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRjZWxsRGF0YVR5cGUgPT09IERhdGFUeXBlOjpUWVBFX05VTUVSSUMgJiYgKCR2YWx1ZSA9PT0gJycgfHwgJHZhbHVlID09PSBudWxsKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNlbGxEYXRhVHlwZSA9IERhdGFUeXBlOjpUWVBFX05VTEw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRjZWxsRGF0YVR5cGUgIT09IERhdGFUeXBlOjpUWVBFX05VTEwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjZWxsLT5zZXRWYWx1ZUV4cGxpY2l0KCR2YWx1ZSwgJGNlbGxEYXRhVHlwZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbC0+c2V0VmFsdWUoJHZhbHVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRjYWxjdWxhdGVkVmFsdWUgIT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNlbGwtPnNldENhbGN1bGF0ZWRWYWx1ZSgkY2FsY3VsYXRlZFZhbHVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFN0eWxlIGluZm9ybWF0aW9uPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkY0F0dHJbJ3MnXSAmJiAhJHRoaXMtPnJlYWREYXRhT25seSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBubyBzdHlsZSBpbmRleCBtZWFucyAwLCBpdCBzZWVtcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbC0+c2V0WGZJbmRleChpc3NldCgkc3R5bGVzWyhpbnQpICgkY0F0dHJbJ3MnXSldKSA/CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaW50KSAoJGNBdHRyWydzJ10pIDogMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlzc3VlIDM0OTUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRjZWxsLT5nZXREYXRhVHlwZSgpID09PSBEYXRhVHlwZTo6VFlQRV9GT1JNVUxBKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2VsbC0+Z2V0U3R5bGUoKS0+c2V0UXVvdGVQcmVmaXgoZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyskcm93SW5kZXg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKyskY0luZGV4OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXROUyAmJiAkeG1sU2hlZXROUy0+aWdub3JlZEVycm9ycykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxTaGVldE5TLT5pZ25vcmVkRXJyb3JzLT5pZ25vcmVkRXJyb3IgYXMgJGlnbm9yZWRFcnJvcngpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGlnbm9yZWRFcnJvciA9IHNlbGY6OnRlc3RTaW1wbGVYbWwoJGlnbm9yZWRFcnJvcngpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+cHJvY2Vzc0lnbm9yZWRFcnJvcnMoJGlnbm9yZWRFcnJvciwgJGRvY1NoZWV0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdGhpcy0+cmVhZERhdGFPbmx5ICYmICR4bWxTaGVldE5TICYmICR4bWxTaGVldE5TLT5zaGVldFByb3RlY3Rpb24pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcHJvdEF0dHIgPSAkeG1sU2hlZXROUy0+c2hlZXRQcm90ZWN0aW9uLT5hdHRyaWJ1dGVzKCkgPz8gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHByb3RBdHRyIGFzICRrZXkgPT4gJHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRtZXRob2QgPSAnc2V0JyAuIHVjZmlyc3QoJGtleSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkb2NTaGVldC0+Z2V0UHJvdGVjdGlvbigpLT4kbWV0aG9kKHNlbGY6OmJvb2xlYW4oKHN0cmluZykgJHZhbHVlKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+cmVhZFNoZWV0UHJvdGVjdGlvbigkZG9jU2hlZXQsICR4bWxTaGVldCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGlzLT5yZWFkRGF0YU9ubHkgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnJlYWRBdXRvRmlsdGVyKCR4bWxTaGVldCwgJGRvY1NoZWV0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+cmVhZFRhYmxlcygkeG1sU2hlZXQsICRkb2NTaGVldCwgJGRpciwgJGZpbGVXb3Jrc2hlZXQsICR6aXApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXROUyAmJiAkeG1sU2hlZXROUy0+bWVyZ2VDZWxscyAmJiAkeG1sU2hlZXROUy0+bWVyZ2VDZWxscy0+bWVyZ2VDZWxsICYmICEkdGhpcy0+cmVhZERhdGFPbmx5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbFNoZWV0TlMtPm1lcmdlQ2VsbHMtPm1lcmdlQ2VsbCBhcyAkbWVyZ2VDZWxseCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHNjcnV0aW5pemVyIGlnbm9yZS1jYWxsICovCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRtZXJnZUNlbGwgPSAkbWVyZ2VDZWxseC0+YXR0cmlidXRlcygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWVyZ2VSZWYgPSAoc3RyaW5nKSAoJG1lcmdlQ2VsbFsncmVmJ10gPz8gJycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RycG9zKCRtZXJnZVJlZiwgJzonKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkb2NTaGVldC0+bWVyZ2VDZWxscygkbWVyZ2VSZWYsIFdvcmtzaGVldDo6TUVSR0VfQ0VMTF9DT05URU5UX0hJREUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXQgJiYgISR0aGlzLT5yZWFkRGF0YU9ubHkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRMb2FkZWREYXRhID0gKG5ldyBQYWdlU2V0dXAoJGRvY1NoZWV0LCAkeG1sU2hlZXQpKS0+bG9hZCgkdW5wYXJzZWRMb2FkZWREYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFNoZWV0ICE9PSBmYWxzZSAmJiBpc3NldCgkeG1sU2hlZXQtPmV4dExzdCwgJHhtbFNoZWV0LT5leHRMc3QtPmV4dCwgJHhtbFNoZWV0LT5leHRMc3QtPmV4dFsndXJpJ10pICYmICgkeG1sU2hlZXQtPmV4dExzdC0+ZXh0Wyd1cmknXSA9PSAne0NDRTZBNTU3LTk3QkMtNGI4OS1BREI2LUQ5QzkzQ0FBQjNERn0nKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBkYXRhVmFsaWRhdGlvbnMgbm9kZSBpZiBkb2VzIG5vdCBleGlzdHMsIG1heWJlIGlzIGJldHRlciBpbnNpZGUgdGhlIGZvcmVhY2ggPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHhtbFNoZWV0LT5kYXRhVmFsaWRhdGlvbnMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHhtbFNoZWV0LT5hZGRDaGlsZCgnZGF0YVZhbGlkYXRpb25zJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkeG1sU2hlZXQtPmV4dExzdC0+ZXh0LT5jaGlsZHJlbihOYW1lc3BhY2VzOjpEQVRBX1ZBTElEQVRJT05TMSktPmRhdGFWYWxpZGF0aW9ucy0+ZGF0YVZhbGlkYXRpb24gYXMgJGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW0gPSBzZWxmOjp0ZXN0U2ltcGxlWG1sKCRpdGVtKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5vZGUgPSBzZWxmOjp0ZXN0U2ltcGxlWG1sKCR4bWxTaGVldC0+ZGF0YVZhbGlkYXRpb25zKS0+YWRkQ2hpbGQoJ2RhdGFWYWxpZGF0aW9uJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRpdGVtLT5hdHRyaWJ1dGVzKCkgPz8gW10gYXMgJGF0dHIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRub2RlLT5hZGRBdHRyaWJ1dGUoJGF0dHItPmdldE5hbWUoKSwgJGF0dHIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRub2RlLT5hZGRBdHRyaWJ1dGUoJ3NxcmVmJywgJGl0ZW0tPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRBVEFfVkFMSURBVElPTlMyKS0+c3FyZWYpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGl0ZW0tPmZvcm11bGExKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoaWxkTm9kZSA9ICRub2RlLT5hZGRDaGlsZCgnZm9ybXVsYTEnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkY2hpbGROb2RlICE9PSBudWxsKSB7IC8vIG51bGwgc2hvdWxkIG5ldmVyIGhhcHBlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjaGlsZE5vZGVbMF0gPSAoc3RyaW5nKSAkaXRlbS0+Zm9ybXVsYTEtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRBVEFfVkFMSURBVElPTlMyKS0+ZjsgLy8gQHBocHN0YW4taWdub3JlLWxpbmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFNoZWV0ICYmICR4bWxTaGVldC0+ZGF0YVZhbGlkYXRpb25zICYmICEkdGhpcy0+cmVhZERhdGFPbmx5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5ldyBEYXRhVmFsaWRhdGlvbnMoJGRvY1NoZWV0LCAkeG1sU2hlZXQpKS0+bG9hZCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVucGFyc2VkIHNoZWV0IEFsdGVybmF0ZUNvbnRlbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXQgJiYgISR0aGlzLT5yZWFkRGF0YU9ubHkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWMgPSAkeG1sU2hlZXQtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkNPTVBBVElCSUxJVFkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkbWMtPkFsdGVybmF0ZUNvbnRlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJG1jLT5BbHRlcm5hdGVDb250ZW50IGFzICRhbHRlcm5hdGVDb250ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWx0ZXJuYXRlQ29udGVudCA9IHNlbGY6OnRlc3RTaW1wbGVYbWwoJGFsdGVybmF0ZUNvbnRlbnQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHVucGFyc2VkTG9hZGVkRGF0YVsnc2hlZXRzJ11bJGRvY1NoZWV0LT5nZXRDb2RlTmFtZSgpXVsnQWx0ZXJuYXRlQ29udGVudHMnXVtdID0gJGFsdGVybmF0ZUNvbnRlbnQtPmFzWE1MKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGh5cGVybGlua3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJHRoaXMtPnJlYWREYXRhT25seSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoeXBlcmxpbmtSZWFkZXIgPSBuZXcgSHlwZXJsaW5rcygkZG9jU2hlZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvY2F0ZSBoeXBlcmxpbmsgcmVsYXRpb25zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlbGF0aW9uc0ZpbGVOYW1lID0gZGlybmFtZSgiJGRpci8kZmlsZVdvcmtzaGVldCIpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJGZpbGVXb3Jrc2hlZXQpIC4gJy5yZWxzJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHppcC0+bG9jYXRlTmFtZSgkcmVsYXRpb25zRmlsZU5hbWUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWxzV29ya3NoZWV0ID0gJHRoaXMtPmxvYWRaaXAoJHJlbGF0aW9uc0ZpbGVOYW1lLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGh5cGVybGlua1JlYWRlci0+cmVhZEh5cGVybGlua3MoJHJlbHNXb3Jrc2hlZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGh5cGVybGlua3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFNoZWV0TlMgJiYgJHhtbFNoZWV0TlMtPmNoaWxkcmVuKCRtYWluTlMpLT5oeXBlcmxpbmtzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoeXBlcmxpbmtSZWFkZXItPnNldEh5cGVybGlua3MoJHhtbFNoZWV0TlMtPmNoaWxkcmVuKCRtYWluTlMpLT5oeXBlcmxpbmtzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGNvbW1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudHMgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2bWxDb21tZW50cyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdGhpcy0+cmVhZERhdGFPbmx5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9jYXRlIGNvbW1lbnQgcmVsYXRpb25zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbW1lbnRSZWxhdGlvbnMgPSBkaXJuYW1lKCIkZGlyLyRmaWxlV29ya3NoZWV0IikgLiAnL19yZWxzLycgLiBiYXNlbmFtZSgkZmlsZVdvcmtzaGVldCkgLiAnLnJlbHMnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkemlwLT5sb2NhdGVOYW1lKCRjb21tZW50UmVsYXRpb25zKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVsc1dvcmtzaGVldCA9ICR0aGlzLT5sb2FkWmlwKCRjb21tZW50UmVsYXRpb25zLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJlbHNXb3Jrc2hlZXQtPlJlbGF0aW9uc2hpcCBhcyAkZWxleCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsZSA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJGVsZXgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRlbGVbJ1R5cGUnXSA9PSBOYW1lc3BhY2VzOjpDT01NRU5UUykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21tZW50c1soc3RyaW5nKSAkZWxlWydJZCddXSA9IChzdHJpbmcpICRlbGVbJ1RhcmdldCddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRlbGVbJ1R5cGUnXSA9PSBOYW1lc3BhY2VzOjpWTUwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdm1sQ29tbWVudHNbKHN0cmluZykgJGVsZVsnSWQnXV0gPSAoc3RyaW5nKSAkZWxlWydUYXJnZXQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGNvbW1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGNvbW1lbnRzIGFzICRyZWxOYW1lID0+ICRyZWxQYXRoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvYWQgY29tbWVudHMgZmlsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVsUGF0aCA9IEZpbGU6OnJlYWxwYXRoKGRpcm5hbWUoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiKSAuICcvJyAuICRyZWxQYXRoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb2theSB0byBpZ25vcmUgbmFtZXNwYWNlIC0gdXNpbmcgeHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbW1lbnRzRmlsZSA9ICR0aGlzLT5sb2FkWmlwKCRyZWxQYXRoLCAnJyk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBVdGlsaXR5IHZhcmlhYmxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXV0aG9ycyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudHNGaWxlLT5yZWdpc3RlclhwYXRoTmFtZXNwYWNlKCdjb20nLCAkbWFpbk5TKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF1dGhvclBhdGggPSBzZWxmOjp4cGF0aE5vRmFsc2UoJGNvbW1lbnRzRmlsZSwgJ2NvbTphdXRob3JzL2NvbTphdXRob3InKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGF1dGhvclBhdGggYXMgJGF1dGhvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF1dGhvcnNbXSA9IChzdHJpbmcpICRhdXRob3I7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBjb250ZW50cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29udGVudFBhdGggPSBzZWxmOjp4cGF0aE5vRmFsc2UoJGNvbW1lbnRzRmlsZSwgJ2NvbTpjb21tZW50TGlzdC9jb206Y29tbWVudCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkY29udGVudFBhdGggYXMgJGNvbW1lbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21tZW50eCA9ICRjb21tZW50LT5hdHRyaWJ1dGVzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudE1vZGVsID0gJGRvY1NoZWV0LT5nZXRDb21tZW50KChzdHJpbmcpICRjb21tZW50eFsncmVmJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRjb21tZW50eFsnYXV0aG9ySWQnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudE1vZGVsLT5zZXRBdXRob3IoJGF1dGhvcnNbKGludCkgJGNvbW1lbnR4WydhdXRob3JJZCddXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudE1vZGVsLT5zZXRUZXh0KCR0aGlzLT5wYXJzZVJpY2hUZXh0KCRjb21tZW50LT5jaGlsZHJlbigkbWFpbk5TKS0+dGV4dCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBsYXRlciB3ZSB3aWxsIHJlbW92ZSBmcm9tIGl0IHJlYWwgdm1sQ29tbWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRWbWxEcmF3aW5ncyA9ICR2bWxDb21tZW50czsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdm1sRHJhd2luZ0NvbnRlbnRzID0gW107CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBWTUwgY29tbWVudHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkdm1sQ29tbWVudHMgYXMgJHJlbE5hbWUgPT4gJHJlbFBhdGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9hZCBWTUwgY29tbWVudHMgZmlsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVsUGF0aCA9IEZpbGU6OnJlYWxwYXRoKGRpcm5hbWUoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiKSAuICcvJyAuICRyZWxQYXRoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBubyBuYW1lc3BhY2Ugb2theSAtIHByb2Nlc3NlZCB3aXRoIFhwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdm1sQ29tbWVudHNGaWxlID0gJHRoaXMtPmxvYWRaaXAoJHJlbFBhdGgsICcnLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2bWxDb21tZW50c0ZpbGUtPnJlZ2lzdGVyWFBhdGhOYW1lc3BhY2UoJ3YnLCBOYW1lc3BhY2VzOjpVUk5fVk1MKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoVGhyb3dhYmxlICRleCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9JZ25vcmUgdW5wYXJzYWJsZSB2bWxEcmF3aW5ncy4gTGF0ZXIgdGhleSB3aWxsIGJlIG1vdmVkIGZyb20gJHVucGFyc2VkVm1sRHJhd2luZ3MgdG8gJHVucGFyc2VkTG9hZGVkRGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvY2F0ZSBWTUwgZHJhd2luZ3MgaW1hZ2UgcmVsYXRpb25zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkcm93aW5nSW1hZ2VzID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRWTUxEcmF3aW5nc1JlbGF0aW9ucyA9IGRpcm5hbWUoJHJlbFBhdGgpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJHJlbFBhdGgpIC4gJy5yZWxzJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZtbERyYXdpbmdDb250ZW50c1skcmVsTmFtZV0gPSAkdGhpcy0+Z2V0U2VjdXJpdHlTY2FubmVyT3JUaHJvdygpLT5zY2FuKCR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkcmVsUGF0aCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHppcC0+bG9jYXRlTmFtZSgkVk1MRHJhd2luZ3NSZWxhdGlvbnMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVsc1ZNTERyYXdpbmcgPSAkdGhpcy0+bG9hZFppcCgkVk1MRHJhd2luZ3NSZWxhdGlvbnMsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJlbHNWTUxEcmF3aW5nLT5SZWxhdGlvbnNoaXAgYXMgJGVsZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZWxlID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkZWxleCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRlbGVbJ1R5cGUnXSA9PSBOYW1lc3BhY2VzOjpJTUFHRSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJvd2luZ0ltYWdlc1soc3RyaW5nKSAkZWxlWydJZCddXSA9IChzdHJpbmcpICRlbGVbJ1RhcmdldCddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYXBlcyA9IHNlbGY6OnhwYXRoTm9GYWxzZSgkdm1sQ29tbWVudHNGaWxlLCAnLy92OnNoYXBlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRzaGFwZXMgYXMgJHNoYXBlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhcGUtPnJlZ2lzdGVyWFBhdGhOYW1lc3BhY2UoJ3YnLCBOYW1lc3BhY2VzOjpVUk5fVk1MKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHNoYXBlWydzdHlsZSddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHlsZSA9IChzdHJpbmcpICRzaGFwZVsnc3R5bGUnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlsbENvbG9yID0gc3RydG91cHBlcihzdWJzdHIoKHN0cmluZykgJHNoYXBlWydmaWxsY29sb3InXSwgMSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb2x1bW4gPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyb3cgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmaWxsSW1hZ2VSZWxJZCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGZpbGxJbWFnZVRpdGxlID0gJyc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjbGllbnREYXRhID0gJHNoYXBlLT54cGF0aCgnLi8veDpDbGllbnREYXRhJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2FycmF5KCRjbGllbnREYXRhKSAmJiAhZW1wdHkoJGNsaWVudERhdGEpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjbGllbnREYXRhID0gJGNsaWVudERhdGFbMF07CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGNsaWVudERhdGFbJ09iamVjdFR5cGUnXSkgJiYgKHN0cmluZykgJGNsaWVudERhdGFbJ09iamVjdFR5cGUnXSA9PSAnTm90ZScpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ZW1wID0gJGNsaWVudERhdGEtPnhwYXRoKCcuLy94OlJvdycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2FycmF5KCR0ZW1wKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyb3cgPSAkdGVtcFswXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGVtcCA9ICRjbGllbnREYXRhLT54cGF0aCgnLi8veDpDb2x1bW4nKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc19hcnJheSgkdGVtcCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29sdW1uID0gJHRlbXBbMF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmaWxsSW1hZ2VSZWxOb2RlID0gJHNoYXBlLT54cGF0aCgnLi8vdjpmaWxsL0BvOnJlbGlkJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2FycmF5KCRmaWxsSW1hZ2VSZWxOb2RlKSAmJiAhZW1wdHkoJGZpbGxJbWFnZVJlbE5vZGUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmaWxsSW1hZ2VSZWxOb2RlID0gJGZpbGxJbWFnZVJlbE5vZGVbMF07CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGZpbGxJbWFnZVJlbE5vZGVbJ3JlbGlkJ10pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlsbEltYWdlUmVsSWQgPSAoc3RyaW5nKSAkZmlsbEltYWdlUmVsTm9kZVsncmVsaWQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGZpbGxJbWFnZVRpdGxlTm9kZSA9ICRzaGFwZS0+eHBhdGgoJy4vL3Y6ZmlsbC9Abzp0aXRsZScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc19hcnJheSgkZmlsbEltYWdlVGl0bGVOb2RlKSAmJiAhZW1wdHkoJGZpbGxJbWFnZVRpdGxlTm9kZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGZpbGxJbWFnZVRpdGxlTm9kZSA9ICRmaWxsSW1hZ2VUaXRsZU5vZGVbMF07CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGZpbGxJbWFnZVRpdGxlTm9kZVsndGl0bGUnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmaWxsSW1hZ2VUaXRsZSA9IChzdHJpbmcpICRmaWxsSW1hZ2VUaXRsZU5vZGVbJ3RpdGxlJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoJGNvbHVtbiAhPT0gbnVsbCkgJiYgKCRyb3cgIT09IG51bGwpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNldCBjb21tZW50IHByb3BlcnRpZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbW1lbnQgPSAkZG9jU2hlZXQtPmdldENvbW1lbnQoWyRjb2x1bW4gKyAxLCAkcm93ICsgMV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudC0+Z2V0RmlsbENvbG9yKCktPnNldFJHQigkZmlsbENvbG9yKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRkcm93aW5nSW1hZ2VzWyRmaWxsSW1hZ2VSZWxJZF0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZyA9IG5ldyBcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFdvcmtzaGVldFxEcmF3aW5nKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0TmFtZSgkZmlsbEltYWdlVGl0bGUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGltYWdlUGF0aCA9IHN0cl9yZXBsYWNlKCcuLi8nLCAneGwvJywgJGRyb3dpbmdJbWFnZXNbJGZpbGxJbWFnZVJlbElkXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0UGF0aCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnemlwOi8vJyAuIEZpbGU6OnJlYWxwYXRoKCRmaWxlbmFtZSkgLiAnIycgLiAkaW1hZ2VQYXRoLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHppcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21tZW50LT5zZXRCYWNrZ3JvdW5kSW1hZ2UoJG9iakRyYXdpbmcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQYXJzZSBzdHlsZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R5bGVBcnJheSA9IGV4cGxvZGUoJzsnLCBzdHJfcmVwbGFjZSgnICcsICcnLCAkc3R5bGUpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHN0eWxlQXJyYXkgYXMgJHN0eWxlUGFpcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0eWxlUGFpciA9IGV4cGxvZGUoJzonLCAkc3R5bGVQYWlyKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHN0eWxlUGFpclswXSA9PSAnbWFyZ2luLWxlZnQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbW1lbnQtPnNldE1hcmdpbkxlZnQoJHN0eWxlUGFpclsxXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHN0eWxlUGFpclswXSA9PSAnbWFyZ2luLXRvcCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29tbWVudC0+c2V0TWFyZ2luVG9wKCRzdHlsZVBhaXJbMV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRzdHlsZVBhaXJbMF0gPT0gJ3dpZHRoJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21tZW50LT5zZXRXaWR0aCgkc3R5bGVQYWlyWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkc3R5bGVQYWlyWzBdID09ICdoZWlnaHQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbW1lbnQtPnNldEhlaWdodCgkc3R5bGVQYWlyWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkc3R5bGVQYWlyWzBdID09ICd2aXNpYmlsaXR5JykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21tZW50LT5zZXRWaXNpYmxlKCRzdHlsZVBhaXJbMV0gPT0gJ3Zpc2libGUnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHVucGFyc2VkVm1sRHJhd2luZ3NbJHJlbE5hbWVdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVucGFyc2VkIHZtbERyYXdpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHVucGFyc2VkVm1sRHJhd2luZ3MpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHVucGFyc2VkVm1sRHJhd2luZ3MgYXMgJHJJZCA9PiAkcmVsUGF0aCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJJZCA9IHN1YnN0cigkcklkLCAzKTsgLy8gcklkWFhYCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRWbWxEcmF3aW5nID0gJiR1bnBhcnNlZExvYWRlZERhdGFbJ3NoZWV0cyddWyRkb2NTaGVldC0+Z2V0Q29kZU5hbWUoKV1bJ3ZtbERyYXdpbmdzJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRWbWxEcmF3aW5nWyRySWRdID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRWbWxEcmF3aW5nWyRySWRdWydmaWxlUGF0aCddID0gc2VsZjo6ZGlyQWRkKCIkZGlyLyRmaWxlV29ya3NoZWV0IiwgJHJlbFBhdGgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHVucGFyc2VkVm1sRHJhd2luZ1skcklkXVsncmVsRmlsZVBhdGgnXSA9ICRyZWxQYXRoOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHVucGFyc2VkVm1sRHJhd2luZ1skcklkXVsnY29udGVudCddID0gJHRoaXMtPmdldFNlY3VyaXR5U2Nhbm5lck9yVGhyb3coKS0+c2NhbigkdGhpcy0+Z2V0RnJvbVppcEFyY2hpdmUoJHppcCwgJHVucGFyc2VkVm1sRHJhd2luZ1skcklkXVsnZmlsZVBhdGgnXSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHVucGFyc2VkVm1sRHJhd2luZyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEhlYWRlci9mb290ZXIgaW1hZ2VzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR4bWxTaGVldE5TICYmICR4bWxTaGVldE5TLT5sZWdhY3lEcmF3aW5nSEYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZtbEhmUmlkID0gJyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2bWxIZlJpZEF0dHIgPSAkeG1sU2hlZXROUy0+bGVnYWN5RHJhd2luZ0hGLT5hdHRyaWJ1dGVzKE5hbWVzcGFjZXM6OlNDSEVNQV9PRkZJQ0VfRE9DVU1FTlQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHZtbEhmUmlkQXR0ciAhPT0gbnVsbCAmJiBpc3NldCgkdm1sSGZSaWRBdHRyWydpZCddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZtbEhmUmlkID0gKHN0cmluZykgJHZtbEhmUmlkQXR0clsnaWQnXVswXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHppcC0+bG9jYXRlTmFtZShkaXJuYW1lKCIkZGlyLyRmaWxlV29ya3NoZWV0IikgLiAnL19yZWxzLycgLiBiYXNlbmFtZSgkZmlsZVdvcmtzaGVldCkgLiAnLnJlbHMnKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlbHNXb3Jrc2hlZXQgPSAkdGhpcy0+bG9hZFppcE5vTmFtZXNwYWNlKGRpcm5hbWUoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiKSAuICcvX3JlbHMvJyAuIGJhc2VuYW1lKCRmaWxlV29ya3NoZWV0KSAuICcucmVscycsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHZtbFJlbGF0aW9uc2hpcCA9ICcnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRyZWxzV29ya3NoZWV0LT5SZWxhdGlvbnNoaXAgYXMgJGVsZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoc3RyaW5nKSAkZWxlWydUeXBlJ10gPT0gTmFtZXNwYWNlczo6Vk1MICYmIChzdHJpbmcpICRlbGVbJ0lkJ10gPT09ICR2bWxIZlJpZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdm1sUmVsYXRpb25zaGlwID0gc2VsZjo6ZGlyQWRkKCIkZGlyLyRmaWxlV29ya3NoZWV0IiwgJGVsZVsnVGFyZ2V0J10pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdm1sUmVsYXRpb25zaGlwICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gRmV0Y2ggbGlua2VkIGltYWdlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWxzVk1MID0gJHRoaXMtPmxvYWRaaXBOb05hbWVzcGFjZShkaXJuYW1lKCR2bWxSZWxhdGlvbnNoaXApIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJHZtbFJlbGF0aW9uc2hpcCkgLiAnLnJlbHMnLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ3MgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHJlbHNWTUwtPlJlbGF0aW9uc2hpcCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJlbHNWTUwtPlJlbGF0aW9uc2hpcCBhcyAkZWxlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGVsZVsnVHlwZSddID09IE5hbWVzcGFjZXM6OklNQUdFKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRyYXdpbmdzWyhzdHJpbmcpICRlbGVbJ0lkJ11dID0gc2VsZjo6ZGlyQWRkKCR2bWxSZWxhdGlvbnNoaXAsICRlbGVbJ1RhcmdldCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBGZXRjaCBWTUwgZG9jdW1lbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdm1sRHJhd2luZyA9ICR0aGlzLT5sb2FkWmlwTm9OYW1lc3BhY2UoJHZtbFJlbGF0aW9uc2hpcCwgJycpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2bWxEcmF3aW5nLT5yZWdpc3RlclhQYXRoTmFtZXNwYWNlKCd2JywgTmFtZXNwYWNlczo6VVJOX1ZNTCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoZkltYWdlcyA9IFtdOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhcGVzID0gc2VsZjo6eHBhdGhOb0ZhbHNlKCR2bWxEcmF3aW5nLCAnLy92OnNoYXBlJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHNoYXBlcyBhcyAkaWR4ID0+ICRzaGFwZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhcGUtPnJlZ2lzdGVyWFBhdGhOYW1lc3BhY2UoJ3YnLCBOYW1lc3BhY2VzOjpVUk5fVk1MKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGltYWdlRGF0YSA9ICRzaGFwZS0+eHBhdGgoJy8vdjppbWFnZWRhdGEnKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbXB0eSgkaW1hZ2VEYXRhKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbWFnZURhdGEgPSAkaW1hZ2VEYXRhWyRpZHhdOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGltYWdlRGF0YSA9IHNlbGY6OmdldEF0dHJpYnV0ZXMoJGltYWdlRGF0YSwgTmFtZXNwYWNlczo6VVJOX01TT0ZGSUNFKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0eWxlID0gc2VsZjo6dG9DU1NBcnJheSgoc3RyaW5nKSAkc2hhcGVbJ3N0eWxlJ10pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFycmF5X2tleV9leGlzdHMoKHN0cmluZykgJGltYWdlRGF0YVsncmVsaWQnXSwgJGRyYXdpbmdzKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYXBlSWQgPSAoc3RyaW5nKSAkc2hhcGVbJ2lkJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaGZJbWFnZXNbJHNoYXBlSWRdID0gbmV3IEhlYWRlckZvb3RlckRyYXdpbmcoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkaW1hZ2VEYXRhWyd0aXRsZSddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoZkltYWdlc1skc2hhcGVJZF0tPnNldE5hbWUoKHN0cmluZykgJGltYWdlRGF0YVsndGl0bGUnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhmSW1hZ2VzWyRzaGFwZUlkXS0+c2V0UGF0aCgnemlwOi8vJyAuIEZpbGU6OnJlYWxwYXRoKCRmaWxlbmFtZSkgLiAnIycgLiAkZHJhd2luZ3NbKHN0cmluZykgJGltYWdlRGF0YVsncmVsaWQnXV0sIGZhbHNlLCAkemlwKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoZkltYWdlc1skc2hhcGVJZF0tPnNldFJlc2l6ZVByb3BvcnRpb25hbChmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaGZJbWFnZXNbJHNoYXBlSWRdLT5zZXRXaWR0aCgkc3R5bGVbJ3dpZHRoJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhmSW1hZ2VzWyRzaGFwZUlkXS0+c2V0SGVpZ2h0KCRzdHlsZVsnaGVpZ2h0J10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRzdHlsZVsnbWFyZ2luLWxlZnQnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaGZJbWFnZXNbJHNoYXBlSWRdLT5zZXRPZmZzZXRYKCRzdHlsZVsnbWFyZ2luLWxlZnQnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaGZJbWFnZXNbJHNoYXBlSWRdLT5zZXRPZmZzZXRZKCRzdHlsZVsnbWFyZ2luLXRvcCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoZkltYWdlc1skc2hhcGVJZF0tPnNldFJlc2l6ZVByb3BvcnRpb25hbCh0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRvY1NoZWV0LT5nZXRIZWFkZXJGb290ZXIoKS0+c2V0SW1hZ2VzKCRoZkltYWdlcyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogQXV0b3NoYXBlcyBmcm9tIHR3b0NlbGxBbmNob3JzIQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRyYXdpbmdGaWxlbmFtZSA9IGRpcm5hbWUoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4gJy9fcmVscy8nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLiBiYXNlbmFtZSgkZmlsZVdvcmtzaGVldCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuICcucmVscyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3Vic3RyKCRkcmF3aW5nRmlsZW5hbWUsIDAsIDcpID09PSAneGwvL3hsLycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ0ZpbGVuYW1lID0gc3Vic3RyKCRkcmF3aW5nRmlsZW5hbWUsIDQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN1YnN0cigkZHJhd2luZ0ZpbGVuYW1lLCAwLCA4KSA9PT0gJy94bC8veGwvJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkcmF3aW5nRmlsZW5hbWUgPSBzdWJzdHIoJGRyYXdpbmdGaWxlbmFtZSwgNSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHppcC0+bG9jYXRlTmFtZSgkZHJhd2luZ0ZpbGVuYW1lKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWxzV29ya3NoZWV0ID0gJHRoaXMtPmxvYWRaaXBOb05hbWVzcGFjZSgkZHJhd2luZ0ZpbGVuYW1lLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ3MgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkcmVsc1dvcmtzaGVldC0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChzdHJpbmcpICRlbGVbJ1R5cGUnXSA9PT0gIiR4bWxOYW1lc3BhY2VCYXNlL2RyYXdpbmciKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZWxlVGFyZ2V0ID0gKHN0cmluZykgJGVsZVsnVGFyZ2V0J107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3Vic3RyKCRlbGVUYXJnZXQsIDAsIDQpID09PSAnL3hsLycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ3NbKHN0cmluZykgJGVsZVsnSWQnXV0gPSBzdWJzdHIoJGVsZVRhcmdldCwgMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkcmF3aW5nc1soc3RyaW5nKSAkZWxlWydJZCddXSA9IHNlbGY6OmRpckFkZCgiJGRpci8kZmlsZVdvcmtzaGVldCIsICRlbGVbJ1RhcmdldCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR4bWxTaGVldE5TLT5kcmF3aW5nICYmICEkdGhpcy0+cmVhZERhdGFPbmx5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1bnBhcnNlZERyYXdpbmdzID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmaWxlRHJhd2luZyA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxTaGVldE5TLT5kcmF3aW5nIGFzICRkcmF3aW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ1JlbElkID0gKHN0cmluZykgc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJGRyYXdpbmcsICR4bWxOYW1lc3BhY2VCYXNlKSwgJ2lkJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZmlsZURyYXdpbmcgPSAkZHJhd2luZ3NbJGRyYXdpbmdSZWxJZF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZHJhd2luZ0ZpbGVuYW1lID0gZGlybmFtZSgkZmlsZURyYXdpbmcpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJGZpbGVEcmF3aW5nKSAuICcucmVscyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVsc0RyYXdpbmcgPSAkdGhpcy0+bG9hZFppcE5vTmFtZXNwYWNlKCRkcmF3aW5nRmlsZW5hbWUsICR4bWxOYW1lc3BhY2VCYXNlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW1hZ2VzID0gW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaHlwZXJsaW5rcyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRyZWxzRHJhd2luZyAmJiAkcmVsc0RyYXdpbmctPlJlbGF0aW9uc2hpcCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRyZWxzRHJhd2luZy0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsZVR5cGUgPSAoc3RyaW5nKSAkZWxlWydUeXBlJ107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZWxlVHlwZSA9PT0gTmFtZXNwYWNlczo6SFlQRVJMSU5LKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaHlwZXJsaW5rc1soc3RyaW5nKSAkZWxlWydJZCddXSA9IChzdHJpbmcpICRlbGVbJ1RhcmdldCddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZWxlVHlwZSA9PT0gIiR4bWxOYW1lc3BhY2VCYXNlL2ltYWdlIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsZVRhcmdldCA9IChzdHJpbmcpICRlbGVbJ1RhcmdldCddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN1YnN0cigkZWxlVGFyZ2V0LCAwLCA0KSA9PT0gJy94bC8nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsZVRhcmdldCA9IHN1YnN0cigkZWxlVGFyZ2V0LCAxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaW1hZ2VzWyhzdHJpbmcpICRlbGVbJ0lkJ11dID0gJGVsZVRhcmdldDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGltYWdlc1soc3RyaW5nKSAkZWxlWydJZCddXSA9IHNlbGY6OmRpckFkZCgkZmlsZURyYXdpbmcsICRlbGVUYXJnZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJGVsZVR5cGUgPT09ICIkeG1sTmFtZXNwYWNlQmFzZS9jaGFydCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+aW5jbHVkZUNoYXJ0cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlbGVUYXJnZXQgPSAoc3RyaW5nKSAkZWxlWydUYXJnZXQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3Vic3RyKCRlbGVUYXJnZXQsIDAsIDQpID09PSAnL3hsLycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGluZGV4ID0gc3Vic3RyKCRlbGVUYXJnZXQsIDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbmRleCA9IHNlbGY6OmRpckFkZCgkZmlsZURyYXdpbmcsICRlbGVUYXJnZXQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2hhcnRzWyRpbmRleF0gPSBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCcgPT4gKHN0cmluZykgJGVsZVsnSWQnXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NoZWV0JyA9PiAkZG9jU2hlZXQtPmdldFRpdGxlKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeG1sRHJhd2luZyA9ICR0aGlzLT5sb2FkWmlwTm9OYW1lc3BhY2UoJGZpbGVEcmF3aW5nLCAnJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeG1sRHJhd2luZ0NoaWxkcmVuID0gJHhtbERyYXdpbmctPmNoaWxkcmVuKE5hbWVzcGFjZXM6OlNQUkVBRFNIRUVUX0RSQVdJTkcpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sRHJhd2luZ0NoaWxkcmVuLT5vbmVDZWxsQW5jaG9yKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbERyYXdpbmdDaGlsZHJlbi0+b25lQ2VsbEFuY2hvciBhcyAkb25lQ2VsbEFuY2hvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb25lQ2VsbEFuY2hvciA9IHNlbGY6OnRlc3RTaW1wbGVYbWwoJG9uZUNlbGxBbmNob3IpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJG9uZUNlbGxBbmNob3ItPnBpYy0+YmxpcEZpbGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdmFyIFNpbXBsZVhNTEVsZW1lbnQgJGJsaXAgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRibGlwID0gJG9uZUNlbGxBbmNob3ItPnBpYy0+YmxpcEZpbGwtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRSQVdJTkdNTCktPmJsaXA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHZhciBTaW1wbGVYTUxFbGVtZW50ICR4ZnJtICovCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeGZybSA9ICRvbmVDZWxsQW5jaG9yLT5waWMtPnNwUHItPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRSQVdJTkdNTCktPnhmcm07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHZhciBTaW1wbGVYTUxFbGVtZW50ICRvdXRlclNoZHcgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvdXRlclNoZHcgPSAkb25lQ2VsbEFuY2hvci0+cGljLT5zcFByLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpEUkFXSU5HTUwpLT5lZmZlY3RMc3QtPm91dGVyU2hkdzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZyA9IG5ldyBcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFdvcmtzaGVldFxEcmF3aW5nKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0TmFtZSgoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkb25lQ2VsbEFuY2hvci0+cGljLT5udlBpY1ByLT5jTnZQciksICduYW1lJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldERlc2NyaXB0aW9uKChzdHJpbmcpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvbmVDZWxsQW5jaG9yLT5waWMtPm52UGljUHItPmNOdlByKSwgJ2Rlc2NyJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVtYmVkSW1hZ2VLZXkgPSAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZjo6Z2V0QXR0cmlidXRlcygkYmxpcCwgJHhtbE5hbWVzcGFjZUJhc2UpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlbWJlZCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGltYWdlc1skZW1iZWRJbWFnZUtleV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldFBhdGgoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd6aXA6Ly8nIC4gRmlsZTo6cmVhbHBhdGgoJGZpbGVuYW1lKSAuICcjJyAuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbWFnZXNbJGVtYmVkSW1hZ2VLZXldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHppcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsaW5rSW1hZ2VLZXkgPSAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRibGlwLT5hdHRyaWJ1dGVzKCdodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvb2ZmaWNlRG9jdW1lbnQvMjAwNi9yZWxhdGlvbnNoaXBzJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsaW5rJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRpbWFnZXNbJGxpbmtJbWFnZUtleV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1cmwgPSBzdHJfcmVwbGFjZSgneGwvZHJhd2luZ3MvJywgJycsICRpbWFnZXNbJGxpbmtJbWFnZUtleV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0UGF0aCgkdXJsLCBmYWxzZSwgbnVsbCwgJHRoaXMtPmFsbG93RXh0ZXJuYWxJbWFnZXMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJG9iakRyYXdpbmctPmdldFBhdGgoKSA9PT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldENvb3JkaW5hdGVzKENvb3JkaW5hdGU6OnN0cmluZ0Zyb21Db2x1bW5JbmRleCgoKGludCkgJG9uZUNlbGxBbmNob3ItPmZyb20tPmNvbCkgKyAxKSAuICgkb25lQ2VsbEFuY2hvci0+ZnJvbS0+cm93ICsgMSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRPZmZzZXRYKChpbnQpIERyYXdpbmc6OkVNVVRvUGl4ZWxzKCRvbmVDZWxsQW5jaG9yLT5mcm9tLT5jb2xPZmYpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRPZmZzZXRZKERyYXdpbmc6OkVNVVRvUGl4ZWxzKCRvbmVDZWxsQW5jaG9yLT5mcm9tLT5yb3dPZmYpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRSZXNpemVQcm9wb3J0aW9uYWwoZmFsc2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldFdpZHRoKERyYXdpbmc6OkVNVVRvUGl4ZWxzKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvbmVDZWxsQW5jaG9yLT5leHQpLCAnY3gnKSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldEhlaWdodChEcmF3aW5nOjpFTVVUb1BpeGVscyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkb25lQ2VsbEFuY2hvci0+ZXh0KSwgJ2N5JykpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeGZybSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRSb3RhdGlvbigoaW50KSBEcmF3aW5nOjphbmdsZVRvRGVncmVlcyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkeGZybSksICdyb3QnKSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRvdXRlclNoZHcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhZG93ID0gJG9iakRyYXdpbmctPmdldFNoYWRvdygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPnNldFZpc2libGUodHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYWRvdy0+c2V0Qmx1clJhZGl1cyhEcmF3aW5nOjpFTVVUb1BpeGVscyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkb3V0ZXJTaGR3KSwgJ2JsdXJSYWQnKSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPnNldERpc3RhbmNlKERyYXdpbmc6OkVNVVRvUGl4ZWxzKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvdXRlclNoZHcpLCAnZGlzdCcpKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYWRvdy0+c2V0RGlyZWN0aW9uKERyYXdpbmc6OmFuZ2xlVG9EZWdyZWVzKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvdXRlclNoZHcpLCAnZGlyJykpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhZG93LT5zZXRBbGlnbm1lbnQoKHN0cmluZykgc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJG91dGVyU2hkdyksICdhbGduJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjbHIgPSAkb3V0ZXJTaGR3LT5zcmdiQ2xyID8/ICRvdXRlclNoZHctPnByc3RDbHI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYWRvdy0+Z2V0Q29sb3IoKS0+c2V0UkdCKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRjbHIpLCAndmFsJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPnNldEFscGhhKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRjbHItPmFscGhhKSwgJ3ZhbCcpIC8gMTAwMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnJlYWRIeXBlckxpbmtEcmF3aW5nKCRvYmpEcmF3aW5nLCAkb25lQ2VsbEFuY2hvciwgJGh5cGVybGlua3MpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRXb3Jrc2hlZXQoJGRvY1NoZWV0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlaWYgKCR0aGlzLT5pbmNsdWRlQ2hhcnRzICYmICRvbmVDZWxsQW5jaG9yLT5ncmFwaGljRnJhbWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEV4cG9ydGVkIFhMU1ggZnJvbSBHb29nbGUgU2hlZXRzIHBvc2l0aW9ucyBjaGFydHMgd2l0aCBhIG9uZUNlbGxBbmNob3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb29yZGluYXRlcyA9IENvb3JkaW5hdGU6OnN0cmluZ0Zyb21Db2x1bW5JbmRleCgoKGludCkgJG9uZUNlbGxBbmNob3ItPmZyb20tPmNvbCkgKyAxKSAuICgkb25lQ2VsbEFuY2hvci0+ZnJvbS0+cm93ICsgMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2Zmc2V0WCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKCRvbmVDZWxsQW5jaG9yLT5mcm9tLT5jb2xPZmYpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9mZnNldFkgPSBEcmF3aW5nOjpFTVVUb1BpeGVscygkb25lQ2VsbEFuY2hvci0+ZnJvbS0+cm93T2ZmKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR3aWR0aCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvbmVDZWxsQW5jaG9yLT5leHQpLCAnY3gnKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaGVpZ2h0ID0gRHJhd2luZzo6RU1VVG9QaXhlbHMoc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJG9uZUNlbGxBbmNob3ItPmV4dCksICdjeScpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JhcGhpYyA9ICRvbmVDZWxsQW5jaG9yLT5ncmFwaGljRnJhbWUtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRSQVdJTkdNTCktPmdyYXBoaWM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHZhciBTaW1wbGVYTUxFbGVtZW50ICRjaGFydFJlZiAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoYXJ0UmVmID0gJGdyYXBoaWMtPmdyYXBoaWNEYXRhLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpDSEFSVCktPmNoYXJ0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXNDaGFydCA9IChzdHJpbmcpIHNlbGY6OmdldEF0dHJpYnV0ZXMoJGNoYXJ0UmVmLCAkeG1sTmFtZXNwYWNlQmFzZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoYXJ0RGV0YWlsc1skZG9jU2hlZXQtPmdldFRpdGxlKCkgLiAnIScgLiAkdGhpc0NoYXJ0XSA9IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbUNvb3JkaW5hdGUnID0+ICRjb29yZGluYXRlcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbU9mZnNldFgnID0+ICRvZmZzZXRYLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmcm9tT2Zmc2V0WScgPT4gJG9mZnNldFksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJyA9PiAkd2lkdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCcgPT4gJGhlaWdodCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnd29ya3NoZWV0VGl0bGUnID0+ICRkb2NTaGVldC0+Z2V0VGl0bGUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnb25lQ2VsbEFuY2hvcicgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbERyYXdpbmdDaGlsZHJlbi0+dHdvQ2VsbEFuY2hvcikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxEcmF3aW5nQ2hpbGRyZW4tPnR3b0NlbGxBbmNob3IgYXMgJHR3b0NlbGxBbmNob3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHR3b0NlbGxBbmNob3IgPSBzZWxmOjp0ZXN0U2ltcGxlWG1sKCR0d29DZWxsQW5jaG9yKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR0d29DZWxsQW5jaG9yLT5waWMtPmJsaXBGaWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYmxpcCA9ICR0d29DZWxsQW5jaG9yLT5waWMtPmJsaXBGaWxsLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpEUkFXSU5HTUwpLT5ibGlwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHhmcm0gPSAkdHdvQ2VsbEFuY2hvci0+cGljLT5zcFByLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpEUkFXSU5HTUwpLT54ZnJtOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG91dGVyU2hkdyA9ICR0d29DZWxsQW5jaG9yLT5waWMtPnNwUHItPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRSQVdJTkdNTCktPmVmZmVjdExzdC0+b3V0ZXJTaGR3OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmcgPSBuZXcgXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxXb3Jrc2hlZXRcRHJhd2luZygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyoqIEBzY3J1dGluaXplciBpZ25vcmUtY2FsbCAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVkaXRBcyA9ICR0d29DZWxsQW5jaG9yLT5hdHRyaWJ1dGVzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGVkaXRBcywgJGVkaXRBc1snZWRpdEFzJ10pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldEVkaXRBcygkZWRpdEFzWydlZGl0QXMnXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0TmFtZSgoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkdHdvQ2VsbEFuY2hvci0+cGljLT5udlBpY1ByLT5jTnZQciksICduYW1lJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldERlc2NyaXB0aW9uKChzdHJpbmcpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCR0d29DZWxsQW5jaG9yLT5waWMtPm52UGljUHItPmNOdlByKSwgJ2Rlc2NyJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVtYmVkSW1hZ2VLZXkgPSAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZjo6Z2V0QXR0cmlidXRlcygkYmxpcCwgJHhtbE5hbWVzcGFjZUJhc2UpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlbWJlZCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGltYWdlc1skZW1iZWRJbWFnZUtleV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldFBhdGgoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd6aXA6Ly8nIC4gRmlsZTo6cmVhbHBhdGgoJGZpbGVuYW1lKSAuICcjJyAuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbWFnZXNbJGVtYmVkSW1hZ2VLZXldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHppcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsaW5rSW1hZ2VLZXkgPSAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRibGlwLT5hdHRyaWJ1dGVzKCdodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvb2ZmaWNlRG9jdW1lbnQvMjAwNi9yZWxhdGlvbnNoaXBzJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsaW5rJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRpbWFnZXNbJGxpbmtJbWFnZUtleV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1cmwgPSBzdHJfcmVwbGFjZSgneGwvZHJhd2luZ3MvJywgJycsICRpbWFnZXNbJGxpbmtJbWFnZUtleV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0UGF0aCgkdXJsLCBmYWxzZSwgbnVsbCwgJHRoaXMtPmFsbG93RXh0ZXJuYWxJbWFnZXMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJG9iakRyYXdpbmctPmdldFBhdGgoKSA9PT0gJycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldENvb3JkaW5hdGVzKENvb3JkaW5hdGU6OnN0cmluZ0Zyb21Db2x1bW5JbmRleCgoKGludCkgJHR3b0NlbGxBbmNob3ItPmZyb20tPmNvbCkgKyAxKSAuICgkdHdvQ2VsbEFuY2hvci0+ZnJvbS0+cm93ICsgMSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRPZmZzZXRYKERyYXdpbmc6OkVNVVRvUGl4ZWxzKCR0d29DZWxsQW5jaG9yLT5mcm9tLT5jb2xPZmYpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpEcmF3aW5nLT5zZXRPZmZzZXRZKERyYXdpbmc6OkVNVVRvUGl4ZWxzKCR0d29DZWxsQW5jaG9yLT5mcm9tLT5yb3dPZmYpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0Q29vcmRpbmF0ZXMyKENvb3JkaW5hdGU6OnN0cmluZ0Zyb21Db2x1bW5JbmRleCgoKGludCkgJHR3b0NlbGxBbmNob3ItPnRvLT5jb2wpICsgMSkgLiAoJHR3b0NlbGxBbmNob3ItPnRvLT5yb3cgKyAxKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldE9mZnNldFgyKERyYXdpbmc6OkVNVVRvUGl4ZWxzKCR0d29DZWxsQW5jaG9yLT50by0+Y29sT2ZmKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0T2Zmc2V0WTIoRHJhd2luZzo6RU1VVG9QaXhlbHMoJHR3b0NlbGxBbmNob3ItPnRvLT5yb3dPZmYpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0UmVzaXplUHJvcG9ydGlvbmFsKGZhbHNlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhmcm0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0V2lkdGgoRHJhd2luZzo6RU1VVG9QaXhlbHMoc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhmcm0tPmV4dCksICdjeCcpKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakRyYXdpbmctPnNldEhlaWdodChEcmF3aW5nOjpFTVVUb1BpeGVscyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkeGZybS0+ZXh0KSwgJ2N5JykpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0Um90YXRpb24oRHJhd2luZzo6YW5nbGVUb0RlZ3JlZXMoc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJHhmcm0pLCAncm90JykpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkb3V0ZXJTaGR3KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYWRvdyA9ICRvYmpEcmF3aW5nLT5nZXRTaGFkb3coKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhZG93LT5zZXRWaXNpYmxlKHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPnNldEJsdXJSYWRpdXMoRHJhd2luZzo6RU1VVG9QaXhlbHMoc2VsZjo6Z2V0QXJyYXlJdGVtKHNlbGY6OmdldEF0dHJpYnV0ZXMoJG91dGVyU2hkdyksICdibHVyUmFkJykpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhZG93LT5zZXREaXN0YW5jZShEcmF3aW5nOjpFTVVUb1BpeGVscyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkb3V0ZXJTaGR3KSwgJ2Rpc3QnKSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPnNldERpcmVjdGlvbihEcmF3aW5nOjphbmdsZVRvRGVncmVlcyhzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkb3V0ZXJTaGR3KSwgJ2RpcicpKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoYWRvdy0+c2V0QWxpZ25tZW50KChzdHJpbmcpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRvdXRlclNoZHcpLCAnYWxnbicpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2xyID0gJG91dGVyU2hkdy0+c3JnYkNsciA/PyAkb3V0ZXJTaGR3LT5wcnN0Q2xyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGFkb3ctPmdldENvbG9yKCktPnNldFJHQihzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkY2xyKSwgJ3ZhbCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2hhZG93LT5zZXRBbHBoYShzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkY2xyLT5hbHBoYSksICd2YWwnKSAvIDEwMDApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5yZWFkSHlwZXJMaW5rRHJhd2luZygkb2JqRHJhd2luZywgJHR3b0NlbGxBbmNob3IsICRoeXBlcmxpbmtzKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRHJhd2luZy0+c2V0V29ya3NoZWV0KCRkb2NTaGVldCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmICgoJHRoaXMtPmluY2x1ZGVDaGFydHMpICYmICgkdHdvQ2VsbEFuY2hvci0+Z3JhcGhpY0ZyYW1lKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGZyb21Db29yZGluYXRlID0gQ29vcmRpbmF0ZTo6c3RyaW5nRnJvbUNvbHVtbkluZGV4KCgoaW50KSAkdHdvQ2VsbEFuY2hvci0+ZnJvbS0+Y29sKSArIDEpIC4gKCR0d29DZWxsQW5jaG9yLT5mcm9tLT5yb3cgKyAxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmcm9tT2Zmc2V0WCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKCR0d29DZWxsQW5jaG9yLT5mcm9tLT5jb2xPZmYpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGZyb21PZmZzZXRZID0gRHJhd2luZzo6RU1VVG9QaXhlbHMoJHR3b0NlbGxBbmNob3ItPmZyb20tPnJvd09mZik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdG9Db29yZGluYXRlID0gQ29vcmRpbmF0ZTo6c3RyaW5nRnJvbUNvbHVtbkluZGV4KCgoaW50KSAkdHdvQ2VsbEFuY2hvci0+dG8tPmNvbCkgKyAxKSAuICgkdHdvQ2VsbEFuY2hvci0+dG8tPnJvdyArIDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRvT2Zmc2V0WCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKCR0d29DZWxsQW5jaG9yLT50by0+Y29sT2ZmKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0b09mZnNldFkgPSBEcmF3aW5nOjpFTVVUb1BpeGVscygkdHdvQ2VsbEFuY2hvci0+dG8tPnJvd09mZik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JhcGhpYyA9ICR0d29DZWxsQW5jaG9yLT5ncmFwaGljRnJhbWUtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkRSQVdJTkdNTCktPmdyYXBoaWM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiogQHZhciBTaW1wbGVYTUxFbGVtZW50ICRjaGFydFJlZiAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoYXJ0UmVmID0gJGdyYXBoaWMtPmdyYXBoaWNEYXRhLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpDSEFSVCktPmNoYXJ0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXNDaGFydCA9IChzdHJpbmcpIHNlbGY6OmdldEF0dHJpYnV0ZXMoJGNoYXJ0UmVmLCAkeG1sTmFtZXNwYWNlQmFzZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoYXJ0RGV0YWlsc1skZG9jU2hlZXQtPmdldFRpdGxlKCkgLiAnIScgLiAkdGhpc0NoYXJ0XSA9IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbUNvb3JkaW5hdGUnID0+ICRmcm9tQ29vcmRpbmF0ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbU9mZnNldFgnID0+ICRmcm9tT2Zmc2V0WCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbU9mZnNldFknID0+ICRmcm9tT2Zmc2V0WSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndG9Db29yZGluYXRlJyA9PiAkdG9Db29yZGluYXRlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0b09mZnNldFgnID0+ICR0b09mZnNldFgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RvT2Zmc2V0WScgPT4gJHRvT2Zmc2V0WSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnd29ya3NoZWV0VGl0bGUnID0+ICRkb2NTaGVldC0+Z2V0VGl0bGUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbERyYXdpbmdDaGlsZHJlbi0+YWJzb2x1dGVBbmNob3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkeG1sRHJhd2luZ0NoaWxkcmVuLT5hYnNvbHV0ZUFuY2hvciBhcyAkYWJzb2x1dGVBbmNob3IpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCgkdGhpcy0+aW5jbHVkZUNoYXJ0cykgJiYgKCRhYnNvbHV0ZUFuY2hvci0+Z3JhcGhpY0ZyYW1lKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXBoaWMgPSAkYWJzb2x1dGVBbmNob3ItPmdyYXBoaWNGcmFtZS0+Y2hpbGRyZW4oTmFtZXNwYWNlczo6RFJBV0lOR01MKS0+Z3JhcGhpYzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qKiBAdmFyIFNpbXBsZVhNTEVsZW1lbnQgJGNoYXJ0UmVmICovCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2hhcnRSZWYgPSAkZ3JhcGhpYy0+Z3JhcGhpY0RhdGEtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OkNIQVJUKS0+Y2hhcnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpc0NoYXJ0ID0gKHN0cmluZykgc2VsZjo6Z2V0QXR0cmlidXRlcygkY2hhcnRSZWYsICR4bWxOYW1lc3BhY2VCYXNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR3aWR0aCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKChpbnQpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRhYnNvbHV0ZUFuY2hvci0+ZXh0KSwgJ2N4JylbMF0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhlaWdodCA9IERyYXdpbmc6OkVNVVRvUGl4ZWxzKChpbnQpIHNlbGY6OmdldEFycmF5SXRlbShzZWxmOjpnZXRBdHRyaWJ1dGVzKCRhYnNvbHV0ZUFuY2hvci0+ZXh0KSwgJ2N5JylbMF0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjaGFydERldGFpbHNbJGRvY1NoZWV0LT5nZXRUaXRsZSgpIC4gJyEnIC4gJHRoaXNDaGFydF0gPSBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Zyb21Db29yZGluYXRlJyA9PiAnQTEnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmcm9tT2Zmc2V0WCcgPT4gMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZnJvbU9mZnNldFknID0+IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3dpZHRoJyA9PiAkd2lkdGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCcgPT4gJGhlaWdodCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnd29ya3NoZWV0VGl0bGUnID0+ICRkb2NTaGVldC0+Z2V0VGl0bGUoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW1wdHkoJHJlbHNEcmF3aW5nKSAmJiAkeG1sRHJhd2luZy0+Y291bnQoKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2F2ZSBEcmF3aW5nIHdpdGhvdXQgcmVscyBhbmQgY2hpbGRyZW4gYXMgdW5wYXJzZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWREcmF3aW5nc1skZHJhd2luZ1JlbElkXSA9ICR4bWxEcmF3aW5nLT5hc1hNTCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzdG9yZSBvcmlnaW5hbCBySWQgb2YgZHJhd2luZyBmaWxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRMb2FkZWREYXRhWydzaGVldHMnXVskZG9jU2hlZXQtPmdldENvZGVOYW1lKCldWydkcmF3aW5nT3JpZ2luYWxJZHMnXSA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkcmVsc1dvcmtzaGVldC0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoc3RyaW5nKSAkZWxlWydUeXBlJ10gPT09ICIkeG1sTmFtZXNwYWNlQmFzZS9kcmF3aW5nIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkcmF3aW5nUmVsSWQgPSAoc3RyaW5nKSAkZWxlWydJZCddOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR1bnBhcnNlZExvYWRlZERhdGFbJ3NoZWV0cyddWyRkb2NTaGVldC0+Z2V0Q29kZU5hbWUoKV1bJ2RyYXdpbmdPcmlnaW5hbElkcyddWyhzdHJpbmcpICRlbGVbJ1RhcmdldCddXSA9ICRkcmF3aW5nUmVsSWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCR1bnBhcnNlZERyYXdpbmdzWyRkcmF3aW5nUmVsSWRdKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRMb2FkZWREYXRhWydzaGVldHMnXVskZG9jU2hlZXQtPmdldENvZGVOYW1lKCldWydEcmF3aW5ncyddWyRkcmF3aW5nUmVsSWRdID0gJHVucGFyc2VkRHJhd2luZ3NbJGRyYXdpbmdSZWxJZF07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkeG1sU2hlZXQtPmxlZ2FjeURyYXdpbmcgJiYgISR0aGlzLT5yZWFkRGF0YU9ubHkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxTaGVldC0+bGVnYWN5RHJhd2luZyBhcyAkZHJhd2luZykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkcmF3aW5nUmVsSWQgPSAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkZHJhd2luZywgJHhtbE5hbWVzcGFjZUJhc2UpLCAnaWQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHZtbERyYXdpbmdDb250ZW50c1skZHJhd2luZ1JlbElkXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHVucGFyc2VkTG9hZGVkRGF0YVsnc2hlZXRzJ11bJGRvY1NoZWV0LT5nZXRDb2RlTmFtZSgpXVsnbGVnYWN5RHJhd2luZyddID0gJHZtbERyYXdpbmdDb250ZW50c1skZHJhd2luZ1JlbElkXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVucGFyc2VkIGRyYXdpbmcgQWx0ZXJuYXRlQ29udGVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkeG1sQWx0RHJhd2luZyA9ICR0aGlzLT5sb2FkWmlwKChzdHJpbmcpICRmaWxlRHJhd2luZywgTmFtZXNwYWNlczo6Q09NUEFUSUJJTElUWSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbEFsdERyYXdpbmctPkFsdGVybmF0ZUNvbnRlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxBbHREcmF3aW5nLT5BbHRlcm5hdGVDb250ZW50IGFzICRhbHRlcm5hdGVDb250ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGFsdGVybmF0ZUNvbnRlbnQgPSBzZWxmOjp0ZXN0U2ltcGxlWG1sKCRhbHRlcm5hdGVDb250ZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRMb2FkZWREYXRhWydzaGVldHMnXVskZG9jU2hlZXQtPmdldENvZGVOYW1lKCldWydkcmF3aW5nQWx0ZXJuYXRlQ29udGVudHMnXVtdID0gJGFsdGVybmF0ZUNvbnRlbnQtPmFzWE1MKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMtPnJlYWRGb3JtQ29udHJvbFByb3BlcnRpZXMoJGV4Y2VsLCAkZGlyLCAkZmlsZVdvcmtzaGVldCwgJGRvY1NoZWV0LCAkdW5wYXJzZWRMb2FkZWREYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLT5yZWFkUHJpbnRlclNldHRpbmdzKCRleGNlbCwgJGRpciwgJGZpbGVXb3Jrc2hlZXQsICRkb2NTaGVldCwgJHVucGFyc2VkTG9hZGVkRGF0YSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGRlZmluZWROYW1lcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR4bWxXb3JrYm9vay0+ZGVmaW5lZE5hbWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHhtbFdvcmtib29rLT5kZWZpbmVkTmFtZXMtPmRlZmluZWROYW1lIGFzICRkZWZpbmVkTmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IHJhbmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleHRyYWN0ZWRSYW5nZSA9IChzdHJpbmcpICRkZWZpbmVkTmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCgkc3BvcyA9IHN0cnBvcygkZXh0cmFjdGVkUmFuZ2UsICchJykpICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4dHJhY3RlZFJhbmdlID0gc3Vic3RyKCRleHRyYWN0ZWRSYW5nZSwgMCwgJHNwb3MpIC4gc3RyX3JlcGxhY2UoJyQnLCAnJywgc3Vic3RyKCRleHRyYWN0ZWRSYW5nZSwgJHNwb3MpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleHRyYWN0ZWRSYW5nZSA9IHN0cl9yZXBsYWNlKCckJywgJycsICRleHRyYWN0ZWRSYW5nZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZhbGlkIHJhbmdlPwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV4dHJhY3RlZFJhbmdlID09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU29tZSBkZWZpbmVkTmFtZXMgYXJlIG9ubHkgYXBwbGljYWJsZSBpZiB3ZSBhcmUgb24gdGhlIHNhbWUgc2hlZXQuLi4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChzdHJpbmcpICRkZWZpbmVkTmFtZVsnbG9jYWxTaGVldElkJ10gIT0gJycgJiYgKHN0cmluZykgJGRlZmluZWROYW1lWydsb2NhbFNoZWV0SWQnXSA9PSAkb2xkU2hlZXRJZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3dpdGNoIG9uIHR5cGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoKHN0cmluZykgJGRlZmluZWROYW1lWyduYW1lJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdfeGxubS5fRmlsdGVyRGF0YWJhc2UnOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHN0cmluZykgJGRlZmluZWROYW1lWydoaWRkZW4nXSAhPT0gJzEnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXh0cmFjdGVkUmFuZ2UgPSBleHBsb2RlKCcsJywgJGV4dHJhY3RlZFJhbmdlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRleHRyYWN0ZWRSYW5nZSBhcyAkcmFuZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXV0b0ZpbHRlclJhbmdlID0gJHJhbmdlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJwb3MoJGF1dG9GaWx0ZXJSYW5nZSwgJzonKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRvY1NoZWV0LT5nZXRBdXRvRmlsdGVyKCktPnNldFJhbmdlKCRhdXRvRmlsdGVyUmFuZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnX3hsbm0uUHJpbnRfVGl0bGVzJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3BsaXQgJGV4dHJhY3RlZFJhbmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleHRyYWN0ZWRSYW5nZSA9IGV4cGxvZGUoJywnLCAkZXh0cmFjdGVkUmFuZ2UpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHByaW50IHRpdGxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkZXh0cmFjdGVkUmFuZ2UgYXMgJHJhbmdlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbWF0Y2hlcyA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlID0gc3RyX3JlcGxhY2UoJyQnLCAnJywgJHJhbmdlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjaGVjayBmb3IgcmVwZWF0aW5nIGNvbHVtbnMsIGUgZy4gJ0E6QScgb3IgJ0E6RCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcmVnX21hdGNoKCcvIT8oW0EtWl0rKVw6KFtBLVpdKykkLycsICRyYW5nZSwgJG1hdGNoZXMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRvY1NoZWV0LT5nZXRQYWdlU2V0dXAoKS0+c2V0Q29sdW1uc1RvUmVwZWF0QXRMZWZ0KFskbWF0Y2hlc1sxXSwgJG1hdGNoZXNbMl1dKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChwcmVnX21hdGNoKCcvIT8oXGQrKVw6KFxkKykkLycsICRyYW5nZSwgJG1hdGNoZXMpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgZm9yIHJlcGVhdGluZyByb3dzLCBlLmcuICcxOjEnIG9yICcxOjUnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRvY1NoZWV0LT5nZXRQYWdlU2V0dXAoKS0+c2V0Um93c1RvUmVwZWF0QXRUb3AoWyRtYXRjaGVzWzFdLCAkbWF0Y2hlc1syXV0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdfeGxubS5QcmludF9BcmVhJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlU2V0cyA9IHByZWdfc3BsaXQoIi8oJz8oPzouKj8pJz8oPzohW0EtWjAtOV0rOltBLVowLTldKykpLD8vIiwgJGV4dHJhY3RlZFJhbmdlLCAtMSwgUFJFR19TUExJVF9OT19FTVBUWSB8IFBSRUdfU1BMSVRfREVMSU1fQ0FQVFVSRSkgPzogW107CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRuZXdSYW5nZVNldHMgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHJhbmdlU2V0cyBhcyAkcmFuZ2VTZXQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFssICRyYW5nZVNldF0gPSBXb3Jrc2hlZXQ6OmV4dHJhY3RTaGVldFRpdGxlKCRyYW5nZVNldCwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW1wdHkoJHJhbmdlU2V0KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cnBvcygkcmFuZ2VTZXQsICc6JykgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlU2V0ID0gJHJhbmdlU2V0IC4gJzonIC4gJHJhbmdlU2V0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5ld1JhbmdlU2V0c1tdID0gc3RyX3JlcGxhY2UoJyQnLCAnJywgJHJhbmdlU2V0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY291bnQoJG5ld1JhbmdlU2V0cykgPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZG9jU2hlZXQtPmdldFBhZ2VTZXR1cCgpLT5zZXRQcmludEFyZWEoaW1wbG9kZSgnLCcsICRuZXdSYW5nZVNldHMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTmV4dCBzaGVldCBpZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgKyskc2hlZXRJZDsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gTG9vcCB0aHJvdWdoIGRlZmluZWROYW1lcwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHhtbFdvcmtib29rLT5kZWZpbmVkTmFtZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCR4bWxXb3JrYm9vay0+ZGVmaW5lZE5hbWVzLT5kZWZpbmVkTmFtZSBhcyAkZGVmaW5lZE5hbWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IHJhbmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4dHJhY3RlZFJhbmdlID0gKHN0cmluZykgJGRlZmluZWROYW1lOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBWYWxpZCByYW5nZT8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV4dHJhY3RlZFJhbmdlID09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU29tZSBkZWZpbmVkTmFtZXMgYXJlIG9ubHkgYXBwbGljYWJsZSBpZiB3ZSBhcmUgb24gdGhlIHNhbWUgc2hlZXQuLi4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHN0cmluZykgJGRlZmluZWROYW1lWydsb2NhbFNoZWV0SWQnXSAhPSAnJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBMb2NhbCBkZWZpbmVkIG5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU3dpdGNoIG9uIHR5cGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICgoc3RyaW5nKSAkZGVmaW5lZE5hbWVbJ25hbWUnXSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnX3hsbm0uX0ZpbHRlckRhdGFiYXNlJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ194bG5tLlByaW50X1RpdGxlcyc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdfeGxubS5QcmludF9BcmVhJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRtYXBTaGVldElkWyhpbnQpICRkZWZpbmVkTmFtZVsnbG9jYWxTaGVldElkJ11dICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyYW5nZSA9IFdvcmtzaGVldDo6ZXh0cmFjdFNoZWV0VGl0bGUoKHN0cmluZykgJGRlZmluZWROYW1lLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlID0gJGV4Y2VsLT5nZXRTaGVldCgkbWFwU2hlZXRJZFsoaW50KSAkZGVmaW5lZE5hbWVbJ2xvY2FsU2hlZXRJZCddXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdHJwb3MoKHN0cmluZykgJGRlZmluZWROYW1lLCAnIScpICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlWzBdID0gc3RyX3JlcGxhY2UoIicnIiwgIiciLCAkcmFuZ2VbMF0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlWzBdID0gc3RyX3JlcGxhY2UoIiciLCAnJywgJHJhbmdlWzBdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkd29ya3NoZWV0ID0gJGV4Y2VsLT5nZXRTaGVldEJ5TmFtZSgkcmFuZ2VbMF0pKSB7IC8vIEBwaHBzdGFuLWlnbm9yZS1saW5lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4Y2VsLT5hZGREZWZpbmVkTmFtZShEZWZpbmVkTmFtZTo6Y3JlYXRlSW5zdGFuY2UoKHN0cmluZykgJGRlZmluZWROYW1lWyduYW1lJ10sICR3b3Jrc2hlZXQsICRleHRyYWN0ZWRSYW5nZSwgdHJ1ZSwgJHNjb3BlKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+YWRkRGVmaW5lZE5hbWUoRGVmaW5lZE5hbWU6OmNyZWF0ZUluc3RhbmNlKChzdHJpbmcpICRkZWZpbmVkTmFtZVsnbmFtZSddLCAkc2NvcGUsICRleHRyYWN0ZWRSYW5nZSwgdHJ1ZSwgJHNjb3BlKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXhjZWwtPmFkZERlZmluZWROYW1lKERlZmluZWROYW1lOjpjcmVhdGVJbnN0YW5jZSgoc3RyaW5nKSAkZGVmaW5lZE5hbWVbJ25hbWUnXSwgJHNjb3BlLCAkZXh0cmFjdGVkUmFuZ2UsIHRydWUpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoIWlzc2V0KCRkZWZpbmVkTmFtZVsnbG9jYWxTaGVldElkJ10pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkZWZpbmVkUmFuZ2UgPSAoc3RyaW5nKSAkZGVmaW5lZE5hbWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICJHbG9iYWwiIGRlZmluZWROYW1lcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbG9jYXRlZFNoZWV0ID0gbnVsbDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cnBvcygoc3RyaW5nKSAkZGVmaW5lZE5hbWUsICchJykgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBNb2RpZnkgcmFuZ2UsIGFuZCBleHRyYWN0IHRoZSBmaXJzdCB3b3Jrc2hlZXQgcmVmZXJlbmNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBOZWVkIHRvIHNwbGl0IG9uIGEgY29tbWEgb3IgYSBzcGFjZSBpZiBub3QgaW4gcXVvdGVzLCBhbmQgZXh0cmFjdCB0aGUgZmlyc3QgcGFydC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkZWZpbmVkTmFtZVZhbHVlUGFydHMgPSBwcmVnX3NwbGl0KCIvWyAsXSg/PShbXiddKidbXiddKicpKlteJ10qJCkvbWl1VSIsICRkZWZpbmVkUmFuZ2UpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBzaGVldCBuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbJGV4dHJhY3RlZFNoZWV0TmFtZV0gPSBXb3Jrc2hlZXQ6OmV4dHJhY3RTaGVldFRpdGxlKChzdHJpbmcpICRkZWZpbmVkTmFtZVZhbHVlUGFydHNbMF0sIHRydWUpOyAvLyBAcGhwc3Rhbi1pZ25vcmUtbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV4dHJhY3RlZFNoZWV0TmFtZSA9IHRyaW0oJGV4dHJhY3RlZFNoZWV0TmFtZSwgIiciKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBMb2NhdGUgc2hlZXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsb2NhdGVkU2hlZXQgPSAkZXhjZWwtPmdldFNoZWV0QnlOYW1lKCRleHRyYWN0ZWRTaGVldE5hbWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGxvY2F0ZWRTaGVldCA9PT0gbnVsbCAmJiAhRGVmaW5lZE5hbWU6OnRlc3RJZkZvcm11bGEoJGRlZmluZWRSYW5nZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRkZWZpbmVkUmFuZ2UgPSAnI1JFRiEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+YWRkRGVmaW5lZE5hbWUoRGVmaW5lZE5hbWU6OmNyZWF0ZUluc3RhbmNlKChzdHJpbmcpICRkZWZpbmVkTmFtZVsnbmFtZSddLCAkbG9jYXRlZFNoZWV0LCAkZGVmaW5lZFJhbmdlLCBmYWxzZSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgKG5ldyBXb3JrYm9va1ZpZXcoJGV4Y2VsKSktPnZpZXdTZXR0aW5ncygkeG1sV29ya2Jvb2ssICRtYWluTlMsICRtYXBTaGVldElkLCAkdGhpcy0+cmVhZERhdGFPbmx5KTsKCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICghJHRoaXMtPnJlYWREYXRhT25seSkgewogICAgICAgICAgICAkY29udGVudFR5cGVzID0gJHRoaXMtPmxvYWRaaXAoJ1tDb250ZW50X1R5cGVzXS54bWwnKTsKCiAgICAgICAgICAgIC8vIERlZmF1bHQgY29udGVudCB0eXBlcwogICAgICAgICAgICBmb3JlYWNoICgkY29udGVudFR5cGVzLT5EZWZhdWx0IGFzICRjb250ZW50VHlwZSkgewogICAgICAgICAgICAgICAgc3dpdGNoICgkY29udGVudFR5cGVbJ0NvbnRlbnRUeXBlJ10pIHsKICAgICAgICAgICAgICAgICAgICBjYXNlICdhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5wcmludGVyU2V0dGluZ3MnOgogICAgICAgICAgICAgICAgICAgICAgICAkdW5wYXJzZWRMb2FkZWREYXRhWydkZWZhdWx0X2NvbnRlbnRfdHlwZXMnXVsoc3RyaW5nKSAkY29udGVudFR5cGVbJ0V4dGVuc2lvbiddXSA9IChzdHJpbmcpICRjb250ZW50VHlwZVsnQ29udGVudFR5cGUnXTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBPdmVycmlkZSBjb250ZW50IHR5cGVzCiAgICAgICAgICAgIGZvcmVhY2ggKCRjb250ZW50VHlwZXMtPk92ZXJyaWRlIGFzICRjb250ZW50VHlwZSkgewogICAgICAgICAgICAgICAgc3dpdGNoICgkY29udGVudFR5cGVbJ0NvbnRlbnRUeXBlJ10pIHsKICAgICAgICAgICAgICAgICAgICBjYXNlICdhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuZHJhd2luZ21sLmNoYXJ0K3htbCc6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+aW5jbHVkZUNoYXJ0cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNoYXJ0RW50cnlSZWYgPSBsdHJpbSgoc3RyaW5nKSAkY29udGVudFR5cGVbJ1BhcnROYW1lJ10sICcvJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY2hhcnRFbGVtZW50cyA9ICR0aGlzLT5sb2FkWmlwKCRjaGFydEVudHJ5UmVmKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjaGFydFJlYWRlciA9IG5ldyBDaGFydCgkY2hhcnROUywgJGRyYXdpbmdOUyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqQ2hhcnQgPSAkY2hhcnRSZWFkZXItPnJlYWRDaGFydCgkY2hhcnRFbGVtZW50cywgYmFzZW5hbWUoJGNoYXJ0RW50cnlSZWYsICcueG1sJykpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRjaGFydHNbJGNoYXJ0RW50cnlSZWZdKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjaGFydFBvc2l0aW9uUmVmID0gJGNoYXJ0c1skY2hhcnRFbnRyeVJlZl1bJ3NoZWV0J10gLiAnIScgLiAkY2hhcnRzWyRjaGFydEVudHJ5UmVmXVsnaWQnXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRleGNlbC0+Z2V0U2hlZXRCeU5hbWUoJGNoYXJ0c1skY2hhcnRFbnRyeVJlZl1bJ3NoZWV0J10pLT5hZGRDaGFydCgkb2JqQ2hhcnQpOyAvLyBAcGhwc3Rhbi1pZ25vcmUtbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqQ2hhcnQtPnNldFdvcmtzaGVldCgkZXhjZWwtPmdldFNoZWV0QnlOYW1lKCRjaGFydHNbJGNoYXJ0RW50cnlSZWZdWydzaGVldCddKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEZvciBvbmVDZWxsQW5jaG9yIG9yIGFic29sdXRlQW5jaG9yIHBvc2l0aW9uZWQgY2hhcnRzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgdG9Db29yZGluYXRlIGlzIG5vdCBpbiB0aGUgZGF0YS4gRG9lcyBpdCBuZWVkIHRvIGJlIGNhbGN1bGF0ZWQ/CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcnJheV9rZXlfZXhpc3RzKCd0b0Nvb3JkaW5hdGUnLCAkY2hhcnREZXRhaWxzWyRjaGFydFBvc2l0aW9uUmVmXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHR3b0NlbGxBbmNob3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpDaGFydC0+c2V0VG9wTGVmdFBvc2l0aW9uKCRjaGFydERldGFpbHNbJGNoYXJ0UG9zaXRpb25SZWZdWydmcm9tQ29vcmRpbmF0ZSddLCAkY2hhcnREZXRhaWxzWyRjaGFydFBvc2l0aW9uUmVmXVsnZnJvbU9mZnNldFgnXSwgJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl1bJ2Zyb21PZmZzZXRZJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakNoYXJ0LT5zZXRCb3R0b21SaWdodFBvc2l0aW9uKCRjaGFydERldGFpbHNbJGNoYXJ0UG9zaXRpb25SZWZdWyd0b0Nvb3JkaW5hdGUnXSwgJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl1bJ3RvT2Zmc2V0WCddLCAkY2hhcnREZXRhaWxzWyRjaGFydFBvc2l0aW9uUmVmXVsndG9PZmZzZXRZJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb25lQ2VsbEFuY2hvciBvciBhYnNvbHV0ZUFuY2hvciAoZS5nLiBDaGFydCBzaGVldCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpDaGFydC0+c2V0VG9wTGVmdFBvc2l0aW9uKCRjaGFydERldGFpbHNbJGNoYXJ0UG9zaXRpb25SZWZdWydmcm9tQ29vcmRpbmF0ZSddLCAkY2hhcnREZXRhaWxzWyRjaGFydFBvc2l0aW9uUmVmXVsnZnJvbU9mZnNldFgnXSwgJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl1bJ2Zyb21PZmZzZXRZJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakNoYXJ0LT5zZXRCb3R0b21SaWdodFBvc2l0aW9uKCcnLCAkY2hhcnREZXRhaWxzWyRjaGFydFBvc2l0aW9uUmVmXVsnd2lkdGgnXSwgJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl1bJ2hlaWdodCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcnJheV9rZXlfZXhpc3RzKCdvbmVDZWxsQW5jaG9yJywgJGNoYXJ0RGV0YWlsc1skY2hhcnRQb3NpdGlvblJlZl0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakNoYXJ0LT5zZXRPbmVDZWxsQW5jaG9yKCRjaGFydERldGFpbHNbJGNoYXJ0UG9zaXRpb25SZWZdWydvbmVDZWxsQW5jaG9yJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVucGFyc2VkCiAgICAgICAgICAgICAgICAgICAgY2FzZSAnYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLmNvbnRyb2xwcm9wZXJ0aWVzK3htbCc6CiAgICAgICAgICAgICAgICAgICAgICAgICR1bnBhcnNlZExvYWRlZERhdGFbJ292ZXJyaWRlX2NvbnRlbnRfdHlwZXMnXVsoc3RyaW5nKSAkY29udGVudFR5cGVbJ1BhcnROYW1lJ11dID0gKHN0cmluZykgJGNvbnRlbnRUeXBlWydDb250ZW50VHlwZSddOwoKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgICRleGNlbC0+c2V0VW5wYXJzZWRMb2FkZWREYXRhKCR1bnBhcnNlZExvYWRlZERhdGEpOwoKICAgICAgICAkemlwLT5jbG9zZSgpOwoKICAgICAgICByZXR1cm4gJGV4Y2VsOwogICAgfQoKICAgIC8qKgogICAgICogQHJldHVybiBSaWNoVGV4dAogICAgICovCiAgICBwcml2YXRlIGZ1bmN0aW9uIHBhcnNlUmljaFRleHQoP1NpbXBsZVhNTEVsZW1lbnQgJGlzKQogICAgewogICAgICAgICR2YWx1ZSA9IG5ldyBSaWNoVGV4dCgpOwoKICAgICAgICBpZiAoaXNzZXQoJGlzLT50KSkgewogICAgICAgICAgICAkdmFsdWUtPmNyZWF0ZVRleHQoU3RyaW5nSGVscGVyOjpjb250cm9sQ2hhcmFjdGVyT09YTUwyUEhQKChzdHJpbmcpICRpcy0+dCkpOwogICAgICAgIH0gZWxzZWlmICgkaXMgIT09IG51bGwpIHsKICAgICAgICAgICAgaWYgKGlzX29iamVjdCgkaXMtPnIpKSB7CiAgICAgICAgICAgICAgICAvKiogQHZhciBTaW1wbGVYTUxFbGVtZW50ICRydW4gKi8KICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRpcy0+ciBhcyAkcnVuKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc3NldCgkcnVuLT5yUHIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR2YWx1ZS0+Y3JlYXRlVGV4dChTdHJpbmdIZWxwZXI6OmNvbnRyb2xDaGFyYWN0ZXJPT1hNTDJQSFAoKHN0cmluZykgJHJ1bi0+dCkpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRvYmpUZXh0ID0gJHZhbHVlLT5jcmVhdGVUZXh0UnVuKFN0cmluZ0hlbHBlcjo6Y29udHJvbENoYXJhY3Rlck9PWE1MMlBIUCgoc3RyaW5nKSAkcnVuLT50KSk7CiAgICAgICAgICAgICAgICAgICAgICAgICRvYmpGb250ID0gJG9ialRleHQtPmdldEZvbnQoKSA/PyBuZXcgU3R5bGVGb250KCk7CgogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHJ1bi0+clByLT5yRm9udCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhdHRyID0gJHJ1bi0+clByLT5yRm9udC0+YXR0cmlidXRlcygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRhdHRyWyd2YWwnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRm9udC0+c2V0TmFtZSgoc3RyaW5nKSAkYXR0clsndmFsJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkcnVuLT5yUHItPnN6KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF0dHIgPSAkcnVuLT5yUHItPnN6LT5hdHRyaWJ1dGVzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGF0dHJbJ3ZhbCddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpGb250LT5zZXRTaXplKChmbG9hdCkgJGF0dHJbJ3ZhbCddKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHJ1bi0+clByLT5jb2xvcikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpGb250LT5zZXRDb2xvcihuZXcgQ29sb3IoJHRoaXMtPnN0eWxlUmVhZGVyLT5yZWFkQ29sb3IoJHJ1bi0+clByLT5jb2xvcikpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHJ1bi0+clByLT5iKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF0dHIgPSAkcnVuLT5yUHItPmItPmF0dHJpYnV0ZXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaXNzZXQoJGF0dHJbJ3ZhbCddKSAmJiBzZWxmOjpib29sZWFuKChzdHJpbmcpICRhdHRyWyd2YWwnXSkpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCFpc3NldCgkYXR0clsndmFsJ10pKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakZvbnQtPnNldEJvbGQodHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRydW4tPnJQci0+aSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhdHRyID0gJHJ1bi0+clByLT5pLT5hdHRyaWJ1dGVzKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGlzc2V0KCRhdHRyWyd2YWwnXSkgJiYgc2VsZjo6Ym9vbGVhbigoc3RyaW5nKSAkYXR0clsndmFsJ10pKSB8fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICghaXNzZXQoJGF0dHJbJ3ZhbCddKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpGb250LT5zZXRJdGFsaWModHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRydW4tPnJQci0+dmVydEFsaWduKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF0dHIgPSAkcnVuLT5yUHItPnZlcnRBbGlnbi0+YXR0cmlidXRlcygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRhdHRyWyd2YWwnXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdmVydEFsaWduID0gc3RydG9sb3dlcigoc3RyaW5nKSAkYXR0clsndmFsJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdmVydEFsaWduID09ICdzdXBlcnNjcmlwdCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakZvbnQtPnNldFN1cGVyc2NyaXB0KHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHZlcnRBbGlnbiA9PSAnc3Vic2NyaXB0JykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb2JqRm9udC0+c2V0U3Vic2NyaXB0KHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJHJ1bi0+clByLT51KSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGF0dHIgPSAkcnVuLT5yUHItPnUtPmF0dHJpYnV0ZXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNzZXQoJGF0dHJbJ3ZhbCddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRvYmpGb250LT5zZXRVbmRlcmxpbmUoXFBocE9mZmljZVxQaHBTcHJlYWRzaGVldFxTdHlsZVxGb250OjpVTkRFUkxJTkVfU0lOR0xFKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakZvbnQtPnNldFVuZGVybGluZSgoc3RyaW5nKSAkYXR0clsndmFsJ10pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc3NldCgkcnVuLT5yUHItPnN0cmlrZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhdHRyID0gJHJ1bi0+clByLT5zdHJpa2UtPmF0dHJpYnV0ZXMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaXNzZXQoJGF0dHJbJ3ZhbCddKSAmJiBzZWxmOjpib29sZWFuKChzdHJpbmcpICRhdHRyWyd2YWwnXSkpIHx8CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCFpc3NldCgkYXR0clsndmFsJ10pKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iakZvbnQtPnNldFN0cmlrZXRocm91Z2godHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAkdmFsdWU7CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiByZWFkUmliYm9uKFNwcmVhZHNoZWV0ICRleGNlbCwgc3RyaW5nICRjdXN0b21VSVRhcmdldCwgWmlwQXJjaGl2ZSAkemlwKTogdm9pZAogICAgewogICAgICAgICRiYXNlRGlyID0gZGlybmFtZSgkY3VzdG9tVUlUYXJnZXQpOwogICAgICAgICRuYW1lQ3VzdG9tVUkgPSBiYXNlbmFtZSgkY3VzdG9tVUlUYXJnZXQpOwogICAgICAgIC8vIGdldCB0aGUgeG1sIGZpbGUgKHJpYmJvbikKICAgICAgICAkbG9jYWxSaWJib24gPSAkdGhpcy0+Z2V0RnJvbVppcEFyY2hpdmUoJHppcCwgJGN1c3RvbVVJVGFyZ2V0KTsKICAgICAgICAkY3VzdG9tVUlJbWFnZXNOYW1lcyA9IFtdOwogICAgICAgICRjdXN0b21VSUltYWdlc0JpbmFyaWVzID0gW107CiAgICAgICAgLy8gc29tZXRoaW5nIGxpa2UgY3VzdG9tVUkvX3JlbHMvY3VzdG9tVUkueG1sLnJlbHMKICAgICAgICAkcGF0aFJlbHMgPSAkYmFzZURpciAuICcvX3JlbHMvJyAuICRuYW1lQ3VzdG9tVUkgLiAnLnJlbHMnOwogICAgICAgICRkYXRhUmVscyA9ICR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkcGF0aFJlbHMpOwogICAgICAgIGlmICgkZGF0YVJlbHMpIHsKICAgICAgICAgICAgLy8gZXhpc3RzIGFuZCBub3QgZW1wdHkgaWYgdGhlIHJpYmJvbiBoYXZlIHNvbWUgcGljdHVyZXMgKG90aGVyIHRoYW4gaW50ZXJuYWwgTVNPKQogICAgICAgICAgICAkVUlSZWxzID0gc2ltcGxleG1sX2xvYWRfc3RyaW5nKAogICAgICAgICAgICAgICAgJHRoaXMtPmdldFNlY3VyaXR5U2Nhbm5lck9yVGhyb3coKQogICAgICAgICAgICAgICAgICAgIC0+c2NhbigkZGF0YVJlbHMpLAogICAgICAgICAgICAgICAgU2ltcGxlWE1MRWxlbWVudDo6Y2xhc3MsCiAgICAgICAgICAgICAgICAkdGhpcy0+cGFyc2VIdWdlID8gTElCWE1MX1BBUlNFSFVHRSA6IDAKICAgICAgICAgICAgKTsKICAgICAgICAgICAgaWYgKGZhbHNlICE9PSAkVUlSZWxzKSB7CiAgICAgICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIHNhdmUgaWQgYW5kIHRhcmdldCB0byBhdm9pZCBwYXJzaW5nIGN1c3RvbVVJLnhtbCBhbmQgImd1ZXNzIiBpZiBpdCdzIGEgcHNldWRvIGNhbGxiYWNrIHdobyBsb2FkIHRoZSBpbWFnZQogICAgICAgICAgICAgICAgZm9yZWFjaCAoJFVJUmVscy0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoKHN0cmluZykgJGVsZVsnVHlwZSddID09PSBOYW1lc3BhY2VzOjpTQ0hFTUFfT0ZGSUNFX0RPQ1VNRU5UIC4gJy9pbWFnZScpIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gYW4gaW1hZ2UgPwogICAgICAgICAgICAgICAgICAgICAgICAkY3VzdG9tVUlJbWFnZXNOYW1lc1soc3RyaW5nKSAkZWxlWydJZCddXSA9IChzdHJpbmcpICRlbGVbJ1RhcmdldCddOwogICAgICAgICAgICAgICAgICAgICAgICAkY3VzdG9tVUlJbWFnZXNCaW5hcmllc1soc3RyaW5nKSAkZWxlWydUYXJnZXQnXV0gPSAkdGhpcy0+Z2V0RnJvbVppcEFyY2hpdmUoJHppcCwgJGJhc2VEaXIgLiAnLycgLiAoc3RyaW5nKSAkZWxlWydUYXJnZXQnXSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICgkbG9jYWxSaWJib24pIHsKICAgICAgICAgICAgJGV4Y2VsLT5zZXRSaWJib25YTUxEYXRhKCRjdXN0b21VSVRhcmdldCwgJGxvY2FsUmliYm9uKTsKICAgICAgICAgICAgaWYgKGNvdW50KCRjdXN0b21VSUltYWdlc05hbWVzKSA+IDAgJiYgY291bnQoJGN1c3RvbVVJSW1hZ2VzQmluYXJpZXMpID4gMCkgewogICAgICAgICAgICAgICAgJGV4Y2VsLT5zZXRSaWJib25CaW5PYmplY3RzKCRjdXN0b21VSUltYWdlc05hbWVzLCAkY3VzdG9tVUlJbWFnZXNCaW5hcmllcyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkZXhjZWwtPnNldFJpYmJvbkJpbk9iamVjdHMobnVsbCwgbnVsbCk7CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkZXhjZWwtPnNldFJpYmJvblhNTERhdGEobnVsbCwgbnVsbCk7CiAgICAgICAgICAgICRleGNlbC0+c2V0UmliYm9uQmluT2JqZWN0cyhudWxsLCBudWxsKTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBAcGFyYW0gbnVsbHxhcnJheXxib29sfFNpbXBsZVhNTEVsZW1lbnQgJGFycmF5CiAgICAgKiBAcGFyYW0gaW50fHN0cmluZyAka2V5CiAgICAgKgogICAgICogQHJldHVybiBtaXhlZAogICAgICovCiAgICBwcml2YXRlIHN0YXRpYyBmdW5jdGlvbiBnZXRBcnJheUl0ZW0oJGFycmF5LCAka2V5ID0gMCkKICAgIHsKICAgICAgICByZXR1cm4gKCRhcnJheSA9PT0gbnVsbCB8fCBpc19ib29sKCRhcnJheSkpID8gbnVsbCA6ICgkYXJyYXlbJGtleV0gPz8gbnVsbCk7CiAgICB9CgogICAgLyoqCiAgICAgKiBAcGFyYW0gbnVsbHxTaW1wbGVYTUxFbGVtZW50fHN0cmluZyAkYmFzZQogICAgICogQHBhcmFtIG51bGx8U2ltcGxlWE1MRWxlbWVudHxzdHJpbmcgJGFkZAogICAgICovCiAgICBwcml2YXRlIHN0YXRpYyBmdW5jdGlvbiBkaXJBZGQoJGJhc2UsICRhZGQpOiBzdHJpbmcKICAgIHsKICAgICAgICAkYmFzZSA9IChzdHJpbmcpICRiYXNlOwogICAgICAgICRhZGQgPSAoc3RyaW5nKSAkYWRkOwoKICAgICAgICByZXR1cm4gKHN0cmluZykgcHJlZ19yZXBsYWNlKCd+W14vXSsvXC5cLi9+JywgJycsIGRpcm5hbWUoJGJhc2UpIC4gIi8kYWRkIik7CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gdG9DU1NBcnJheShzdHJpbmcgJHN0eWxlKTogYXJyYXkKICAgIHsKICAgICAgICAkc3R5bGUgPSBzZWxmOjpzdHJpcFdoaXRlU3BhY2VGcm9tU3R5bGVTdHJpbmcoJHN0eWxlKTsKCiAgICAgICAgJHRlbXAgPSBleHBsb2RlKCc7JywgJHN0eWxlKTsKICAgICAgICAkc3R5bGUgPSBbXTsKICAgICAgICBmb3JlYWNoICgkdGVtcCBhcyAkaXRlbSkgewogICAgICAgICAgICAkaXRlbSA9IGV4cGxvZGUoJzonLCAkaXRlbSk7CgogICAgICAgICAgICBpZiAoc3RycG9zKCRpdGVtWzFdLCAncHgnKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICRpdGVtWzFdID0gc3RyX3JlcGxhY2UoJ3B4JywgJycsICRpdGVtWzFdKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoc3RycG9zKCRpdGVtWzFdLCAncHQnKSAhPT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgICRpdGVtWzFdID0gc3RyX3JlcGxhY2UoJ3B0JywgJycsICRpdGVtWzFdKTsKICAgICAgICAgICAgICAgICRpdGVtWzFdID0gKHN0cmluZykgRm9udDo6Zm9udFNpemVUb1BpeGVscygoaW50KSAkaXRlbVsxXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHN0cnBvcygkaXRlbVsxXSwgJ2luJykgIT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAkaXRlbVsxXSA9IHN0cl9yZXBsYWNlKCdpbicsICcnLCAkaXRlbVsxXSk7CiAgICAgICAgICAgICAgICAkaXRlbVsxXSA9IChzdHJpbmcpIEZvbnQ6OmluY2hTaXplVG9QaXhlbHMoKGludCkgJGl0ZW1bMV0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChzdHJwb3MoJGl0ZW1bMV0sICdjbScpICE9PSBmYWxzZSkgewogICAgICAgICAgICAgICAgJGl0ZW1bMV0gPSBzdHJfcmVwbGFjZSgnY20nLCAnJywgJGl0ZW1bMV0pOwogICAgICAgICAgICAgICAgJGl0ZW1bMV0gPSAoc3RyaW5nKSBGb250OjpjZW50aW1ldGVyU2l6ZVRvUGl4ZWxzKChpbnQpICRpdGVtWzFdKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJHN0eWxlWyRpdGVtWzBdXSA9ICRpdGVtWzFdOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRzdHlsZTsKICAgIH0KCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHN0cmlwV2hpdGVTcGFjZUZyb21TdHlsZVN0cmluZyhzdHJpbmcgJHN0cmluZyk6IHN0cmluZwogICAgewogICAgICAgIHJldHVybiB0cmltKHN0cl9yZXBsYWNlKFsiXHIiLCAiXG4iLCAnICddLCAnJywgJHN0cmluZyksICc7Jyk7CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gYm9vbGVhbihzdHJpbmcgJHZhbHVlKTogYm9vbAogICAgewogICAgICAgIGlmIChpc19udW1lcmljKCR2YWx1ZSkpIHsKICAgICAgICAgICAgcmV0dXJuIChib29sKSAkdmFsdWU7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHZhbHVlID09PSAndHJ1ZScgfHwgJHZhbHVlID09PSAnVFJVRSc7CiAgICB9CgogICAgLyoqCiAgICAgKiBAcGFyYW0gYXJyYXkgJGh5cGVybGlua3MKICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiByZWFkSHlwZXJMaW5rRHJhd2luZyhcUGhwT2ZmaWNlXFBocFNwcmVhZHNoZWV0XFdvcmtzaGVldFxEcmF3aW5nICRvYmpEcmF3aW5nLCBTaW1wbGVYTUxFbGVtZW50ICRjZWxsQW5jaG9yLCAkaHlwZXJsaW5rcyk6IHZvaWQKICAgIHsKICAgICAgICAkaGxpbmtDbGljayA9ICRjZWxsQW5jaG9yLT5waWMtPm52UGljUHItPmNOdlByLT5jaGlsZHJlbihOYW1lc3BhY2VzOjpEUkFXSU5HTUwpLT5obGlua0NsaWNrOwoKICAgICAgICBpZiAoJGhsaW5rQ2xpY2stPmNvdW50KCkgPT09IDApIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgJGhsaW5rSWQgPSAoc3RyaW5nKSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCRobGlua0NsaWNrLCBOYW1lc3BhY2VzOjpTQ0hFTUFfT0ZGSUNFX0RPQ1VNRU5UKVsnaWQnXTsKICAgICAgICAkaHlwZXJsaW5rID0gbmV3IEh5cGVybGluaygKICAgICAgICAgICAgJGh5cGVybGlua3NbJGhsaW5rSWRdLAogICAgICAgICAgICAoc3RyaW5nKSBzZWxmOjpnZXRBcnJheUl0ZW0oc2VsZjo6Z2V0QXR0cmlidXRlcygkY2VsbEFuY2hvci0+cGljLT5udlBpY1ByLT5jTnZQciksICduYW1lJykKICAgICAgICApOwogICAgICAgICRvYmpEcmF3aW5nLT5zZXRIeXBlcmxpbmsoJGh5cGVybGluayk7CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiByZWFkUHJvdGVjdGlvbihTcHJlYWRzaGVldCAkZXhjZWwsIFNpbXBsZVhNTEVsZW1lbnQgJHhtbFdvcmtib29rKTogdm9pZAogICAgewogICAgICAgIGlmICghJHhtbFdvcmtib29rLT53b3JrYm9va1Byb3RlY3Rpb24pIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgJGV4Y2VsLT5nZXRTZWN1cml0eSgpLT5zZXRMb2NrUmV2aXNpb24oc2VsZjo6Z2V0TG9ja1ZhbHVlKCR4bWxXb3JrYm9vay0+d29ya2Jvb2tQcm90ZWN0aW9uLCAnbG9ja1JldmlzaW9uJykpOwogICAgICAgICRleGNlbC0+Z2V0U2VjdXJpdHkoKS0+c2V0TG9ja1N0cnVjdHVyZShzZWxmOjpnZXRMb2NrVmFsdWUoJHhtbFdvcmtib29rLT53b3JrYm9va1Byb3RlY3Rpb24sICdsb2NrU3RydWN0dXJlJykpOwogICAgICAgICRleGNlbC0+Z2V0U2VjdXJpdHkoKS0+c2V0TG9ja1dpbmRvd3Moc2VsZjo6Z2V0TG9ja1ZhbHVlKCR4bWxXb3JrYm9vay0+d29ya2Jvb2tQcm90ZWN0aW9uLCAnbG9ja1dpbmRvd3MnKSk7CgogICAgICAgIGlmICgkeG1sV29ya2Jvb2stPndvcmtib29rUHJvdGVjdGlvblsncmV2aXNpb25zUGFzc3dvcmQnXSkgewogICAgICAgICAgICAkZXhjZWwtPmdldFNlY3VyaXR5KCktPnNldFJldmlzaW9uc1Bhc3N3b3JkKAogICAgICAgICAgICAgICAgKHN0cmluZykgJHhtbFdvcmtib29rLT53b3JrYm9va1Byb3RlY3Rpb25bJ3JldmlzaW9uc1Bhc3N3b3JkJ10sCiAgICAgICAgICAgICAgICB0cnVlCiAgICAgICAgICAgICk7CiAgICAgICAgfQoKICAgICAgICBpZiAoJHhtbFdvcmtib29rLT53b3JrYm9va1Byb3RlY3Rpb25bJ3dvcmtib29rUGFzc3dvcmQnXSkgewogICAgICAgICAgICAkZXhjZWwtPmdldFNlY3VyaXR5KCktPnNldFdvcmtib29rUGFzc3dvcmQoCiAgICAgICAgICAgICAgICAoc3RyaW5nKSAkeG1sV29ya2Jvb2stPndvcmtib29rUHJvdGVjdGlvblsnd29ya2Jvb2tQYXNzd29yZCddLAogICAgICAgICAgICAgICAgdHJ1ZQogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KCiAgICBwcml2YXRlIHN0YXRpYyBmdW5jdGlvbiBnZXRMb2NrVmFsdWUoU2ltcGxlWG1sRWxlbWVudCAkcHJvdGVjdGlvbiwgc3RyaW5nICRrZXkpOiA/Ym9vbAogICAgewogICAgICAgICRyZXR1cm5WYWx1ZSA9IG51bGw7CiAgICAgICAgJHByb3RlY3RLZXkgPSAkcHJvdGVjdGlvblska2V5XTsKICAgICAgICBpZiAoIWVtcHR5KCRwcm90ZWN0S2V5KSkgewogICAgICAgICAgICAkcHJvdGVjdEtleSA9IChzdHJpbmcpICRwcm90ZWN0S2V5OwogICAgICAgICAgICAkcmV0dXJuVmFsdWUgPSAkcHJvdGVjdEtleSAhPT0gJ2ZhbHNlJyAmJiAoYm9vbCkgJHByb3RlY3RLZXk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHJldHVyblZhbHVlOwogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gcmVhZEZvcm1Db250cm9sUHJvcGVydGllcyhTcHJlYWRzaGVldCAkZXhjZWwsIHN0cmluZyAkZGlyLCBzdHJpbmcgJGZpbGVXb3Jrc2hlZXQsIFdvcmtzaGVldCAkZG9jU2hlZXQsIGFycmF5ICYkdW5wYXJzZWRMb2FkZWREYXRhKTogdm9pZAogICAgewogICAgICAgICR6aXAgPSAkdGhpcy0+emlwOwogICAgICAgIGlmICghJHppcC0+bG9jYXRlTmFtZShkaXJuYW1lKCIkZGlyLyRmaWxlV29ya3NoZWV0IikgLiAnL19yZWxzLycgLiBiYXNlbmFtZSgkZmlsZVdvcmtzaGVldCkgLiAnLnJlbHMnKSkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICAkZmlsZW5hbWUgPSBkaXJuYW1lKCIkZGlyLyRmaWxlV29ya3NoZWV0IikgLiAnL19yZWxzLycgLiBiYXNlbmFtZSgkZmlsZVdvcmtzaGVldCkgLiAnLnJlbHMnOwogICAgICAgICRyZWxzV29ya3NoZWV0ID0gJHRoaXMtPmxvYWRaaXBOb05hbWVzcGFjZSgkZmlsZW5hbWUsIE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpOwogICAgICAgICRjdHJsUHJvcHMgPSBbXTsKICAgICAgICBmb3JlYWNoICgkcmVsc1dvcmtzaGVldC0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgaWYgKChzdHJpbmcpICRlbGVbJ1R5cGUnXSA9PT0gTmFtZXNwYWNlczo6U0NIRU1BX09GRklDRV9ET0NVTUVOVCAuICcvY3RybFByb3AnKSB7CiAgICAgICAgICAgICAgICAkY3RybFByb3BzWyhzdHJpbmcpICRlbGVbJ0lkJ11dID0gJGVsZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgJHVucGFyc2VkQ3RybFByb3BzID0gJiR1bnBhcnNlZExvYWRlZERhdGFbJ3NoZWV0cyddWyRkb2NTaGVldC0+Z2V0Q29kZU5hbWUoKV1bJ2N0cmxQcm9wcyddOwogICAgICAgIGZvcmVhY2ggKCRjdHJsUHJvcHMgYXMgJHJJZCA9PiAkY3RybFByb3ApIHsKICAgICAgICAgICAgJHJJZCA9IHN1YnN0cigkcklkLCAzKTsgLy8gcklkWFhYCiAgICAgICAgICAgICR1bnBhcnNlZEN0cmxQcm9wc1skcklkXSA9IFtdOwogICAgICAgICAgICAkdW5wYXJzZWRDdHJsUHJvcHNbJHJJZF1bJ2ZpbGVQYXRoJ10gPSBzZWxmOjpkaXJBZGQoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiLCAkY3RybFByb3BbJ1RhcmdldCddKTsKICAgICAgICAgICAgJHVucGFyc2VkQ3RybFByb3BzWyRySWRdWydyZWxGaWxlUGF0aCddID0gKHN0cmluZykgJGN0cmxQcm9wWydUYXJnZXQnXTsKICAgICAgICAgICAgJHVucGFyc2VkQ3RybFByb3BzWyRySWRdWydjb250ZW50J10gPSAkdGhpcy0+Z2V0U2VjdXJpdHlTY2FubmVyT3JUaHJvdygpLT5zY2FuKCR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkdW5wYXJzZWRDdHJsUHJvcHNbJHJJZF1bJ2ZpbGVQYXRoJ10pKTsKICAgICAgICB9CiAgICAgICAgdW5zZXQoJHVucGFyc2VkQ3RybFByb3BzKTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIHJlYWRQcmludGVyU2V0dGluZ3MoU3ByZWFkc2hlZXQgJGV4Y2VsLCBzdHJpbmcgJGRpciwgc3RyaW5nICRmaWxlV29ya3NoZWV0LCBXb3Jrc2hlZXQgJGRvY1NoZWV0LCBhcnJheSAmJHVucGFyc2VkTG9hZGVkRGF0YSk6IHZvaWQKICAgIHsKICAgICAgICAkemlwID0gJHRoaXMtPnppcDsKICAgICAgICBpZiAoISR6aXAtPmxvY2F0ZU5hbWUoZGlybmFtZSgiJGRpci8kZmlsZVdvcmtzaGVldCIpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJGZpbGVXb3Jrc2hlZXQpIC4gJy5yZWxzJykpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgJGZpbGVuYW1lID0gZGlybmFtZSgiJGRpci8kZmlsZVdvcmtzaGVldCIpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJGZpbGVXb3Jrc2hlZXQpIC4gJy5yZWxzJzsKICAgICAgICAkcmVsc1dvcmtzaGVldCA9ICR0aGlzLT5sb2FkWmlwTm9OYW1lc3BhY2UoJGZpbGVuYW1lLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAkc2hlZXRQcmludGVyU2V0dGluZ3MgPSBbXTsKICAgICAgICBmb3JlYWNoICgkcmVsc1dvcmtzaGVldC0+UmVsYXRpb25zaGlwIGFzICRlbGUpIHsKICAgICAgICAgICAgaWYgKChzdHJpbmcpICRlbGVbJ1R5cGUnXSA9PT0gTmFtZXNwYWNlczo6U0NIRU1BX09GRklDRV9ET0NVTUVOVCAuICcvcHJpbnRlclNldHRpbmdzJykgewogICAgICAgICAgICAgICAgJHNoZWV0UHJpbnRlclNldHRpbmdzWyhzdHJpbmcpICRlbGVbJ0lkJ11dID0gJGVsZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgJHVucGFyc2VkUHJpbnRlclNldHRpbmdzID0gJiR1bnBhcnNlZExvYWRlZERhdGFbJ3NoZWV0cyddWyRkb2NTaGVldC0+Z2V0Q29kZU5hbWUoKV1bJ3ByaW50ZXJTZXR0aW5ncyddOwogICAgICAgIGZvcmVhY2ggKCRzaGVldFByaW50ZXJTZXR0aW5ncyBhcyAkcklkID0+ICRwcmludGVyU2V0dGluZ3MpIHsKICAgICAgICAgICAgJHJJZCA9IHN1YnN0cigkcklkLCAzKTsgLy8gcklkWFhYCiAgICAgICAgICAgIGlmIChzdWJzdHIoJHJJZCwgLTIpICE9PSAncHMnKSB7CiAgICAgICAgICAgICAgICAkcklkID0gJHJJZCAuICdwcyc7IC8vIHJJZFhYWCwgYWRkICdwcycgc3VmZml4IHRvIGF2b2lkIGlkZW50aWNhbCByZXNvdXJjZSBpZGVudGlmaWVyIGNvbGxpc2lvbiB3aXRoIHVucGFyc2VkIHZtbERyYXdpbmcKICAgICAgICAgICAgfQogICAgICAgICAgICAkdW5wYXJzZWRQcmludGVyU2V0dGluZ3NbJHJJZF0gPSBbXTsKICAgICAgICAgICAgJHVucGFyc2VkUHJpbnRlclNldHRpbmdzWyRySWRdWydmaWxlUGF0aCddID0gc2VsZjo6ZGlyQWRkKCIkZGlyLyRmaWxlV29ya3NoZWV0IiwgJHByaW50ZXJTZXR0aW5nc1snVGFyZ2V0J10pOwogICAgICAgICAgICAkdW5wYXJzZWRQcmludGVyU2V0dGluZ3NbJHJJZF1bJ3JlbEZpbGVQYXRoJ10gPSAoc3RyaW5nKSAkcHJpbnRlclNldHRpbmdzWydUYXJnZXQnXTsKICAgICAgICAgICAgJHVucGFyc2VkUHJpbnRlclNldHRpbmdzWyRySWRdWydjb250ZW50J10gPSAkdGhpcy0+Z2V0U2VjdXJpdHlTY2FubmVyT3JUaHJvdygpLT5zY2FuKCR0aGlzLT5nZXRGcm9tWmlwQXJjaGl2ZSgkemlwLCAkdW5wYXJzZWRQcmludGVyU2V0dGluZ3NbJHJJZF1bJ2ZpbGVQYXRoJ10pKTsKICAgICAgICB9CiAgICAgICAgdW5zZXQoJHVucGFyc2VkUHJpbnRlclNldHRpbmdzKTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIGdldFdvcmtib29rQmFzZU5hbWUoKTogYXJyYXkKICAgIHsKICAgICAgICAkd29ya2Jvb2tCYXNlbmFtZSA9ICcnOwogICAgICAgICR4bWxOYW1lc3BhY2VCYXNlID0gJyc7CgogICAgICAgIC8vIGNoZWNrIGlmIGl0IGlzIGFuIE9PWE1MIGFyY2hpdmUKICAgICAgICAkcmVscyA9ICR0aGlzLT5sb2FkWmlwKHNlbGY6OklOSVRJQUxfRklMRSk7CiAgICAgICAgZm9yZWFjaCAoJHJlbHMtPmNoaWxkcmVuKE5hbWVzcGFjZXM6OlJFTEFUSU9OU0hJUFMpLT5SZWxhdGlvbnNoaXAgYXMgJHJlbCkgewogICAgICAgICAgICAkcmVsID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkcmVsKTsKICAgICAgICAgICAgJHR5cGUgPSAoc3RyaW5nKSAkcmVsWydUeXBlJ107CiAgICAgICAgICAgIHN3aXRjaCAoJHR5cGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgTmFtZXNwYWNlczo6T0ZGSUNFX0RPQ1VNRU5UOgogICAgICAgICAgICAgICAgY2FzZSBOYW1lc3BhY2VzOjpQVVJMX09GRklDRV9ET0NVTUVOVDoKICAgICAgICAgICAgICAgICAgICAkYmFzZW5hbWUgPSBiYXNlbmFtZSgoc3RyaW5nKSAkcmVsWydUYXJnZXQnXSk7CiAgICAgICAgICAgICAgICAgICAgJHhtbE5hbWVzcGFjZUJhc2UgPSBkaXJuYW1lKCR0eXBlKTsKICAgICAgICAgICAgICAgICAgICBpZiAocHJlZ19tYXRjaCgnL3dvcmtib29rLipcLnhtbC8nLCAkYmFzZW5hbWUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICR3b3JrYm9va0Jhc2VuYW1lID0gJGJhc2VuYW1lOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBbJHdvcmtib29rQmFzZW5hbWUsICR4bWxOYW1lc3BhY2VCYXNlXTsKICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIHJlYWRTaGVldFByb3RlY3Rpb24oV29ya3NoZWV0ICRkb2NTaGVldCwgU2ltcGxlWE1MRWxlbWVudCAkeG1sU2hlZXQpOiB2b2lkCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5yZWFkRGF0YU9ubHkgfHwgISR4bWxTaGVldC0+c2hlZXRQcm90ZWN0aW9uKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgICRhbGdvcml0aG1OYW1lID0gKHN0cmluZykgJHhtbFNoZWV0LT5zaGVldFByb3RlY3Rpb25bJ2FsZ29yaXRobU5hbWUnXTsKICAgICAgICAkcHJvdGVjdGlvbiA9ICRkb2NTaGVldC0+Z2V0UHJvdGVjdGlvbigpOwogICAgICAgICRwcm90ZWN0aW9uLT5zZXRBbGdvcml0aG0oJGFsZ29yaXRobU5hbWUpOwoKICAgICAgICBpZiAoJGFsZ29yaXRobU5hbWUpIHsKICAgICAgICAgICAgJHByb3RlY3Rpb24tPnNldFBhc3N3b3JkKChzdHJpbmcpICR4bWxTaGVldC0+c2hlZXRQcm90ZWN0aW9uWydoYXNoVmFsdWUnXSwgdHJ1ZSk7CiAgICAgICAgICAgICRwcm90ZWN0aW9uLT5zZXRTYWx0KChzdHJpbmcpICR4bWxTaGVldC0+c2hlZXRQcm90ZWN0aW9uWydzYWx0VmFsdWUnXSk7CiAgICAgICAgICAgICRwcm90ZWN0aW9uLT5zZXRTcGluQ291bnQoKGludCkgJHhtbFNoZWV0LT5zaGVldFByb3RlY3Rpb25bJ3NwaW5Db3VudCddKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAkcHJvdGVjdGlvbi0+c2V0UGFzc3dvcmQoKHN0cmluZykgJHhtbFNoZWV0LT5zaGVldFByb3RlY3Rpb25bJ3Bhc3N3b3JkJ10sIHRydWUpOwogICAgICAgIH0KCiAgICAgICAgaWYgKCR4bWxTaGVldC0+cHJvdGVjdGVkUmFuZ2VzLT5wcm90ZWN0ZWRSYW5nZSkgewogICAgICAgICAgICBmb3JlYWNoICgkeG1sU2hlZXQtPnByb3RlY3RlZFJhbmdlcy0+cHJvdGVjdGVkUmFuZ2UgYXMgJHByb3RlY3RlZFJhbmdlKSB7CiAgICAgICAgICAgICAgICAkZG9jU2hlZXQtPnByb3RlY3RDZWxscygoc3RyaW5nKSAkcHJvdGVjdGVkUmFuZ2VbJ3NxcmVmJ10sIChzdHJpbmcpICRwcm90ZWN0ZWRSYW5nZVsncGFzc3dvcmQnXSwgdHJ1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiByZWFkQXV0b0ZpbHRlcigKICAgICAgICBTaW1wbGVYTUxFbGVtZW50ICR4bWxTaGVldCwKICAgICAgICBXb3Jrc2hlZXQgJGRvY1NoZWV0CiAgICApOiB2b2lkIHsKICAgICAgICBpZiAoJHhtbFNoZWV0ICYmICR4bWxTaGVldC0+YXV0b0ZpbHRlcikgewogICAgICAgICAgICAobmV3IEF1dG9GaWx0ZXIoJGRvY1NoZWV0LCAkeG1sU2hlZXQpKS0+bG9hZCgpOwogICAgICAgIH0KICAgIH0KCiAgICBwcml2YXRlIGZ1bmN0aW9uIHJlYWRUYWJsZXMoCiAgICAgICAgU2ltcGxlWE1MRWxlbWVudCAkeG1sU2hlZXQsCiAgICAgICAgV29ya3NoZWV0ICRkb2NTaGVldCwKICAgICAgICBzdHJpbmcgJGRpciwKICAgICAgICBzdHJpbmcgJGZpbGVXb3Jrc2hlZXQsCiAgICAgICAgWmlwQXJjaGl2ZSAkemlwCiAgICApOiB2b2lkIHsKICAgICAgICBpZiAoJHhtbFNoZWV0ICYmICR4bWxTaGVldC0+dGFibGVQYXJ0cyAmJiAoaW50KSAkeG1sU2hlZXQtPnRhYmxlUGFydHNbJ2NvdW50J10gPiAwKSB7CiAgICAgICAgICAgICR0aGlzLT5yZWFkVGFibGVzSW5UYWJsZXNGaWxlKCR4bWxTaGVldCwgJGRpciwgJGZpbGVXb3Jrc2hlZXQsICR6aXAsICRkb2NTaGVldCk7CiAgICAgICAgfQogICAgfQoKICAgIHByaXZhdGUgZnVuY3Rpb24gcmVhZFRhYmxlc0luVGFibGVzRmlsZSgKICAgICAgICBTaW1wbGVYTUxFbGVtZW50ICR4bWxTaGVldCwKICAgICAgICBzdHJpbmcgJGRpciwKICAgICAgICBzdHJpbmcgJGZpbGVXb3Jrc2hlZXQsCiAgICAgICAgWmlwQXJjaGl2ZSAkemlwLAogICAgICAgIFdvcmtzaGVldCAkZG9jU2hlZXQKICAgICk6IHZvaWQgewogICAgICAgIGZvcmVhY2ggKCR4bWxTaGVldC0+dGFibGVQYXJ0cy0+dGFibGVQYXJ0IGFzICR0YWJsZVBhcnQpIHsKICAgICAgICAgICAgJHJlbGF0aW9uID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkdGFibGVQYXJ0LCBOYW1lc3BhY2VzOjpTQ0hFTUFfT0ZGSUNFX0RPQ1VNRU5UKTsKICAgICAgICAgICAgJHRhYmxlUGFydFJlbCA9IChzdHJpbmcpICRyZWxhdGlvblsnaWQnXTsKICAgICAgICAgICAgJHJlbGF0aW9uc0ZpbGVOYW1lID0gZGlybmFtZSgiJGRpci8kZmlsZVdvcmtzaGVldCIpIC4gJy9fcmVscy8nIC4gYmFzZW5hbWUoJGZpbGVXb3Jrc2hlZXQpIC4gJy5yZWxzJzsKCiAgICAgICAgICAgIGlmICgkemlwLT5sb2NhdGVOYW1lKCRyZWxhdGlvbnNGaWxlTmFtZSkpIHsKICAgICAgICAgICAgICAgICRyZWxzVGFibGVSZWZlcmVuY2VzID0gJHRoaXMtPmxvYWRaaXAoJHJlbGF0aW9uc0ZpbGVOYW1lLCBOYW1lc3BhY2VzOjpSRUxBVElPTlNISVBTKTsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRyZWxzVGFibGVSZWZlcmVuY2VzLT5SZWxhdGlvbnNoaXAgYXMgJHJlbGF0aW9uc2hpcCkgewogICAgICAgICAgICAgICAgICAgICRyZWxhdGlvbnNoaXBBdHRyaWJ1dGVzID0gc2VsZjo6Z2V0QXR0cmlidXRlcygkcmVsYXRpb25zaGlwLCAnJyk7CgogICAgICAgICAgICAgICAgICAgIGlmICgoc3RyaW5nKSAkcmVsYXRpb25zaGlwQXR0cmlidXRlc1snSWQnXSA9PT0gJHRhYmxlUGFydFJlbCkgewogICAgICAgICAgICAgICAgICAgICAgICAkcmVsYXRpb25zaGlwRmlsZU5hbWUgPSAoc3RyaW5nKSAkcmVsYXRpb25zaGlwQXR0cmlidXRlc1snVGFyZ2V0J107CiAgICAgICAgICAgICAgICAgICAgICAgICRyZWxhdGlvbnNoaXBGaWxlUGF0aCA9IGRpcm5hbWUoIiRkaXIvJGZpbGVXb3Jrc2hlZXQiKSAuICcvJyAuICRyZWxhdGlvbnNoaXBGaWxlTmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgJHJlbGF0aW9uc2hpcEZpbGVQYXRoID0gRmlsZTo6cmVhbHBhdGgoJHJlbGF0aW9uc2hpcEZpbGVQYXRoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkdGhpcy0+ZmlsZUV4aXN0c0luQXJjaGl2ZSgkdGhpcy0+emlwLCAkcmVsYXRpb25zaGlwRmlsZVBhdGgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGFibGVYbWwgPSAkdGhpcy0+bG9hZFppcCgkcmVsYXRpb25zaGlwRmlsZVBhdGgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgKG5ldyBUYWJsZVJlYWRlcigkZG9jU2hlZXQsICR0YWJsZVhtbCkpLT5sb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gZXh0cmFjdFN0eWxlcyg/U2ltcGxlWE1MRWxlbWVudCAkc3htbCwgc3RyaW5nICRub2RlMSwgc3RyaW5nICRub2RlMik6IGFycmF5CiAgICB7CiAgICAgICAgJGFycmF5ID0gW107CiAgICAgICAgaWYgKCRzeG1sICYmICRzeG1sLT57JG5vZGUxfS0+eyRub2RlMn0pIHsKICAgICAgICAgICAgZm9yZWFjaCAoJHN4bWwtPnskbm9kZTF9LT57JG5vZGUyfSBhcyAkbm9kZSkgewogICAgICAgICAgICAgICAgJGFycmF5W10gPSAkbm9kZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRhcnJheTsKICAgIH0KCiAgICBwcml2YXRlIHN0YXRpYyBmdW5jdGlvbiBleHRyYWN0UGFsZXR0ZSg/U2ltcGxlWE1MRWxlbWVudCAkc3htbCk6IGFycmF5CiAgICB7CiAgICAgICAgJGFycmF5ID0gW107CiAgICAgICAgaWYgKCRzeG1sICYmICRzeG1sLT5jb2xvcnMtPmluZGV4ZWRDb2xvcnMpIHsKICAgICAgICAgICAgZm9yZWFjaCAoJHN4bWwtPmNvbG9ycy0+aW5kZXhlZENvbG9ycy0+cmdiQ29sb3IgYXMgJG5vZGUpIHsKICAgICAgICAgICAgICAgIGlmICgkbm9kZSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICRhdHRyID0gJG5vZGUtPmF0dHJpYnV0ZXMoKTsKICAgICAgICAgICAgICAgICAgICBpZiAoaXNzZXQoJGF0dHJbJ3JnYiddKSkgewogICAgICAgICAgICAgICAgICAgICAgICAkYXJyYXlbXSA9IChzdHJpbmcpICRhdHRyWydyZ2InXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAkYXJyYXk7CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiBwcm9jZXNzSWdub3JlZEVycm9ycyhTaW1wbGVYTUxFbGVtZW50ICR4bWwsIFdvcmtzaGVldCAkc2hlZXQpOiB2b2lkCiAgICB7CiAgICAgICAgJGF0dHJpYnV0ZXMgPSBzZWxmOjpnZXRBdHRyaWJ1dGVzKCR4bWwpOwogICAgICAgICRzcXJlZiA9IChzdHJpbmcpICgkYXR0cmlidXRlc1snc3FyZWYnXSA/PyAnJyk7CiAgICAgICAgJG51bWJlclN0b3JlZEFzVGV4dCA9IChzdHJpbmcpICgkYXR0cmlidXRlc1snbnVtYmVyU3RvcmVkQXNUZXh0J10gPz8gJycpOwogICAgICAgICRmb3JtdWxhID0gKHN0cmluZykgKCRhdHRyaWJ1dGVzWydmb3JtdWxhJ10gPz8gJycpOwogICAgICAgICR0d29EaWdpdFRleHRZZWFyID0gKHN0cmluZykgKCRhdHRyaWJ1dGVzWyd0d29EaWdpdFRleHRZZWFyJ10gPz8gJycpOwogICAgICAgICRldmFsRXJyb3IgPSAoc3RyaW5nKSAoJGF0dHJpYnV0ZXNbJ2V2YWxFcnJvciddID8/ICcnKTsKICAgICAgICBpZiAoIWVtcHR5KCRzcXJlZikpIHsKICAgICAgICAgICAgJGV4cGxvZGVkU3FyZWYgPSBleHBsb2RlKCcgJywgJHNxcmVmKTsKICAgICAgICAgICAgJHBhdHRlcm4xID0gJy9eKFtBLVpdezEsM30pKFswLTldezEsN30pKDooW0EtWl17MSwzfSkoWzAtOV17MSw3fSkpPyQvJzsKICAgICAgICAgICAgZm9yZWFjaCAoJGV4cGxvZGVkU3FyZWYgYXMgJHNxcmVmMSkgewogICAgICAgICAgICAgICAgaWYgKHByZWdfbWF0Y2goJHBhdHRlcm4xLCAkc3FyZWYxLCAkbWF0Y2hlcykgPT09IDEpIHsKICAgICAgICAgICAgICAgICAgICAkZmlyc3RSb3cgPSAkbWF0Y2hlc1syXTsKICAgICAgICAgICAgICAgICAgICAkZmlyc3RDb2wgPSAkbWF0Y2hlc1sxXTsKICAgICAgICAgICAgICAgICAgICBpZiAoYXJyYXlfa2V5X2V4aXN0cygzLCAkbWF0Y2hlcykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RDb2wgPSAkbWF0Y2hlc1s0XTsKICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSb3cgPSAkbWF0Y2hlc1s1XTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAkbGFzdENvbCA9ICRmaXJzdENvbDsKICAgICAgICAgICAgICAgICAgICAgICAgJGxhc3RSb3cgPSAkZmlyc3RSb3c7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICsrJGxhc3RDb2w7CiAgICAgICAgICAgICAgICAgICAgZm9yICgkcm93ID0gJGZpcnN0Um93OyAkcm93IDw9ICRsYXN0Um93OyArKyRyb3cpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICgkY29sID0gJGZpcnN0Q29sOyAkY29sICE9PSAkbGFzdENvbDsgKyskY29sKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJG51bWJlclN0b3JlZEFzVGV4dCA9PT0gJzEnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoZWV0LT5nZXRDZWxsKCIkY29sJHJvdyIpLT5nZXRJZ25vcmVkRXJyb3JzKCktPnNldE51bWJlclN0b3JlZEFzVGV4dCh0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZm9ybXVsYSA9PT0gJzEnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNoZWV0LT5nZXRDZWxsKCIkY29sJHJvdyIpLT5nZXRJZ25vcmVkRXJyb3JzKCktPnNldEZvcm11bGEodHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHR3b0RpZ2l0VGV4dFllYXIgPT09ICcxJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGVldC0+Z2V0Q2VsbCgiJGNvbCRyb3ciKS0+Z2V0SWdub3JlZEVycm9ycygpLT5zZXRUd29EaWdpdFRleHRZZWFyKHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmFsRXJyb3IgPT09ICcxJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzaGVldC0+Z2V0Q2VsbCgiJGNvbCRyb3ciKS0+Z2V0SWdub3JlZEVycm9ycygpLT5zZXRFdmFsRXJyb3IodHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gc3RvcmVGb3JtdWxhQXR0cmlidXRlcyhTaW1wbGVYTUxFbGVtZW50ICRmLCBXb3Jrc2hlZXQgJGRvY1NoZWV0LCBzdHJpbmcgJHIpOiB2b2lkCiAgICB7CiAgICAgICAgJGZvcm11bGFBdHRyaWJ1dGVzID0gW107CiAgICAgICAgJGF0dHJpYnV0ZXMgPSAkZi0+YXR0cmlidXRlcygpOwogICAgICAgIGlmIChpc3NldCgkYXR0cmlidXRlc1sndCddKSkgewogICAgICAgICAgICAkZm9ybXVsYUF0dHJpYnV0ZXNbJ3QnXSA9IChzdHJpbmcpICRhdHRyaWJ1dGVzWyd0J107CiAgICAgICAgfQogICAgICAgIGlmIChpc3NldCgkYXR0cmlidXRlc1sncmVmJ10pKSB7CiAgICAgICAgICAgICRmb3JtdWxhQXR0cmlidXRlc1sncmVmJ10gPSAoc3RyaW5nKSAkYXR0cmlidXRlc1sncmVmJ107CiAgICAgICAgfQogICAgICAgIGlmICghZW1wdHkoJGZvcm11bGFBdHRyaWJ1dGVzKSkgewogICAgICAgICAgICAkZG9jU2hlZXQtPmdldENlbGwoJHIpLT5zZXRGb3JtdWxhQXR0cmlidXRlcygkZm9ybXVsYUF0dHJpYnV0ZXMpOwogICAgICAgIH0KICAgIH0KfQoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";