1758919867
3d99647a2a2fc2912c8002152881da16-phpdoc%3A0788a4b9701f4794543750e0b479bc51-07bdc0efe70b2778e78e06964b941b5c
s:122268:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:7:"Ods.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:32:"\PhpOffice\PhpSpreadsheet\Reader";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:32:"\PhpOffice\PhpSpreadsheet\Reader";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"Reader";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:36:"\PhpOffice\PhpSpreadsheet\Reader\Ods";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:1:{s:50:"\PhpOffice\PhpSpreadsheet\Reader\Ods::INITIAL_FILE";O:37:"phpDocumentor\Reflection\Php\Constant":9:{s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Constant endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\PhpOffice\PhpSpreadsheet\Reader\Ods::INITIAL_FILE";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"INITIAL_FILE";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";N;s:44:" phpDocumentor\Reflection\Php\Constant value";s:13:"'content.xml'";s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}s:49:" phpDocumentor\Reflection\Php\Constant attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:15:{s:51:"\PhpOffice\PhpSpreadsheet\Reader\Ods::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:35;s:47:" phpDocumentor\Reflection\Location columnNumber";i:1069;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:39;s:47:" phpDocumentor\Reflection\Location columnNumber";i:1205;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\PhpOffice\PhpSpreadsheet\Reader\Ods::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:33:"Create a new Ods Reader instance.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:31:"PhpOffice\PhpSpreadsheet\Reader";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:22:{s:7:"DOMAttr";s:7:"DOMAttr";s:11:"DOMDocument";s:11:"DOMDocument";s:10:"DOMElement";s:10:"DOMElement";s:7:"DOMNode";s:7:"DOMNode";s:10:"Coordinate";s:40:"PhpOffice\PhpSpreadsheet\Cell\Coordinate";s:8:"DataType";s:38:"PhpOffice\PhpSpreadsheet\Cell\DataType";s:15:"HelperDimension";s:41:"PhpOffice\PhpSpreadsheet\Helper\Dimension";s:10:"AutoFilter";s:46:"PhpOffice\PhpSpreadsheet\Reader\Ods\AutoFilter";s:12:"DefinedNames";s:48:"PhpOffice\PhpSpreadsheet\Reader\Ods\DefinedNames";s:17:"FormulaTranslator";s:53:"PhpOffice\PhpSpreadsheet\Reader\Ods\FormulaTranslator";s:12:"PageSettings";s:48:"PhpOffice\PhpSpreadsheet\Reader\Ods\PageSettings";s:18:"DocumentProperties";s:46:"PhpOffice\PhpSpreadsheet\Reader\Ods\Properties";s:10:"XmlScanner";s:51:"PhpOffice\PhpSpreadsheet\Reader\Security\XmlScanner";s:8:"RichText";s:42:"PhpOffice\PhpSpreadsheet\RichText\RichText";s:4:"Date";s:36:"PhpOffice\PhpSpreadsheet\Shared\Date";s:4:"File";s:36:"PhpOffice\PhpSpreadsheet\Shared\File";s:11:"Spreadsheet";s:36:"PhpOffice\PhpSpreadsheet\Spreadsheet";s:12:"NumberFormat";s:43:"PhpOffice\PhpSpreadsheet\Style\NumberFormat";s:9:"Worksheet";s:44:"PhpOffice\PhpSpreadsheet\Worksheet\Worksheet";s:9:"Throwable";s:9:"Throwable";s:9:"XMLReader";s:9:"XMLReader";s:10:"ZipArchive";s:10:"ZipArchive";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:47:"\PhpOffice\PhpSpreadsheet\Reader\Ods::canRead()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filename";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:44;s:47:" phpDocumentor\Reflection\Location columnNumber";i:1274;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:88;s:47:" phpDocumentor\Reflection\Location columnNumber";i:3198;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\PhpOffice\PhpSpreadsheet\Reader\Ods::canRead()";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"canRead";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:38:"Can the current IReader read the file?";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::listWorksheetNames()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filename";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:97;s:47:" phpDocumentor\Reflection\Location columnNumber";i:3399;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:138;s:47:" phpDocumentor\Reflection\Location columnNumber";i:5019;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::listWorksheetNames()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"listWorksheetNames";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:101:"Reads names of the worksheets from a file, without parsing the whole file to a PhpSpreadsheet object.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:8:"filename";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:57:"\PhpOffice\PhpSpreadsheet\Reader\Ods::listWorksheetInfo()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filename";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:147;s:47:" phpDocumentor\Reflection\Location columnNumber";i:5211;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:224;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8900;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:57:"\PhpOffice\PhpSpreadsheet\Reader\Ods::listWorksheetInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"listWorksheetInfo";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:95:"Return worksheet info (Name, Last Column Letter, Last Column Index, Total Rows, Total Columns).";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:8:"filename";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:50:"\PhpOffice\PhpSpreadsheet\Reader\Ods::getXmlName()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:10:"\XMLReader";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"XMLReader";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"xml";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:231;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8988;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:234;s:47:" phpDocumentor\Reflection\Location columnNumber";i:9084;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\PhpOffice\PhpSpreadsheet\Reader\Ods::getXmlName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"getXmlName";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:27:"Counteract Phpstan caching.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:14:"phpstan-impure";s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:63:"\PhpOffice\PhpSpreadsheet\Reader\Ods::loadSpreadsheetFromFile()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filename";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:239;s:47:" phpDocumentor\Reflection\Location columnNumber";i:9146;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:246;s:47:" phpDocumentor\Reflection\Location columnNumber";i:9407;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:63:"\PhpOffice\PhpSpreadsheet\Reader\Ods::loadSpreadsheetFromFile()";s:36:" phpDocumentor\Reflection\Fqsen name";s:23:"loadSpreadsheetFromFile";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:31:"Loads PhpSpreadsheet from file.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:56:"\PhpOffice\PhpSpreadsheet\Reader\Ods::loadIntoExisting()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filename";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:255;s:47:" phpDocumentor\Reflection\Location columnNumber";i:9570;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:660;s:47:" phpDocumentor\Reflection\Location columnNumber";i:30467;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\PhpOffice\PhpSpreadsheet\Reader\Ods::loadIntoExisting()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"loadIntoExisting";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:60:"Loads PhpSpreadsheet from file into PhpSpreadsheet instance.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:8:"filename";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:55:"\PhpOffice\PhpSpreadsheet\Reader\Ods::processSettings()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\ZipArchive";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"ZipArchive";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"zip";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:662;s:47:" phpDocumentor\Reflection\Location columnNumber";i:30474;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:679;s:47:" phpDocumentor\Reflection\Location columnNumber";i:31265;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\PhpOffice\PhpSpreadsheet\Reader\Ods::processSettings()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"processSettings";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::lookForActiveSheet()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\DOMElement";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"DOMElement";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"settings";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"configNs";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:681;s:47:" phpDocumentor\Reflection\Location columnNumber";i:31272;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:695;s:47:" phpDocumentor\Reflection\Location columnNumber";i:31830;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::lookForActiveSheet()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"lookForActiveSheet";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:60:"\PhpOffice\PhpSpreadsheet\Reader\Ods::lookForSelectedCells()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\DOMElement";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"DOMElement";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"settings";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"configNs";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:697;s:47:" phpDocumentor\Reflection\Location columnNumber";i:31837;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:720;s:47:" phpDocumentor\Reflection\Location columnNumber";i:33029;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\PhpOffice\PhpSpreadsheet\Reader\Ods::lookForSelectedCells()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"lookForSelectedCells";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:51:"\PhpOffice\PhpSpreadsheet\Reader\Ods::setSelected()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:4:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"wsname";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"setCol";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:3;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"setRow";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:722;s:47:" phpDocumentor\Reflection\Location columnNumber";i:33036;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:730;s:47:" phpDocumentor\Reflection\Location columnNumber";i:33414;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\PhpOffice\PhpSpreadsheet\Reader\Ods::setSelected()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"setSelected";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::scanElementForText()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:8:"\DOMNode";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"DOMNode";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"element";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:737;s:47:" phpDocumentor\Reflection\Location columnNumber";i:33499;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:761;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34392;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::scanElementForText()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"scanElementForText";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:25:"Recursively scan element.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:53:"\PhpOffice\PhpSpreadsheet\Reader\Ods::getMultiplier()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:8:"\DOMAttr";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"DOMAttr";}}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"cAttr";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:763;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34399;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:772;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34627;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\PhpOffice\PhpSpreadsheet\Reader\Ods::getMultiplier()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"getMultiplier";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:53:"\PhpOffice\PhpSpreadsheet\Reader\Ods::parseRichText()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:2:"is";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:779;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34706;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:785;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34842;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\PhpOffice\PhpSpreadsheet\Reader\Ods::parseRichText()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"parseRichText";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:2:"is";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\PhpOffice\PhpSpreadsheet\RichText\RichText";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"RichText";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:53;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::processMergedCells()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:6:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\DOMElement";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"DOMElement";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"cellData";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"tableNs";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"type";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:3;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"columnID";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:4;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"rowID";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:5;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\PhpOffice\PhpSpreadsheet\Spreadsheet";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Spreadsheet";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"spreadsheet";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:787;s:47:" phpDocumentor\Reflection\Location columnNumber";i:34849;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:820;s:47:" phpDocumentor\Reflection\Location columnNumber";i:36225;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:58:"\PhpOffice\PhpSpreadsheet\Reader\Ods::processMergedCells()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"processMergedCells";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:28;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:821;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\PhpOffice\PhpSpreadsheet\Reader\Ods";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"Ods";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\PhpOffice\PhpSpreadsheet\Reader\BaseReader";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"BaseReader";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"07bdc0efe70b2778e78e06964b941b5c";s:39:" phpDocumentor\Reflection\Php\File path";s:65:"vendor/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Reader/Ods.php";s:41:" phpDocumentor\Reflection\Php\File source";s:36229:"<?php

namespace PhpOffice\PhpSpreadsheet\Reader;

use DOMAttr;
use DOMDocument;
use DOMElement;
use DOMNode;
use PhpOffice\PhpSpreadsheet\Cell\Coordinate;
use PhpOffice\PhpSpreadsheet\Cell\DataType;
use PhpOffice\PhpSpreadsheet\Helper\Dimension as HelperDimension;
use PhpOffice\PhpSpreadsheet\Reader\Ods\AutoFilter;
use PhpOffice\PhpSpreadsheet\Reader\Ods\DefinedNames;
use PhpOffice\PhpSpreadsheet\Reader\Ods\FormulaTranslator;
use PhpOffice\PhpSpreadsheet\Reader\Ods\PageSettings;
use PhpOffice\PhpSpreadsheet\Reader\Ods\Properties as DocumentProperties;
use PhpOffice\PhpSpreadsheet\Reader\Security\XmlScanner;
use PhpOffice\PhpSpreadsheet\RichText\RichText;
use PhpOffice\PhpSpreadsheet\Shared\Date;
use PhpOffice\PhpSpreadsheet\Shared\File;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Style\NumberFormat;
use PhpOffice\PhpSpreadsheet\Worksheet\Worksheet;
use Throwable;
use XMLReader;
use ZipArchive;

class Ods extends BaseReader
{
    const INITIAL_FILE = 'content.xml';

    /**
     * Create a new Ods Reader instance.
     */
    public function __construct()
    {
        parent::__construct();
        $this->securityScanner = XmlScanner::getInstance($this);
    }

    /**
     * Can the current IReader read the file?
     */
    public function canRead(string $filename): bool
    {
        $mimeType = 'UNKNOWN';

        // Load file

        if (File::testFileNoThrow($filename, '')) {
            $zip = new ZipArchive();
            if ($zip->open($filename) === true) {
                // check if it is an OOXML archive
                $stat = $zip->statName('mimetype');
                if (!empty($stat) && ($stat['size'] <= 255)) {
                    $mimeType = $zip->getFromName($stat['name']);
                } elseif ($zip->statName('META-INF/manifest.xml')) {
                    $xml = simplexml_load_string(
                        $this->getSecurityScannerOrThrow()
                            ->scan(
                                $zip->getFromName(
                                    'META-INF/manifest.xml'
                                )
                            )
                    );
                    if ($xml !== false) {
                        $namespacesContent = $xml->getNamespaces(true);
                        if (isset($namespacesContent['manifest'])) {
                            $manifest = $xml->children($namespacesContent['manifest']);
                            foreach ($manifest as $manifestDataSet) {
                                /** @scrutinizer ignore-call */
                                $manifestAttributes = $manifestDataSet->attributes($namespacesContent['manifest']);
                                if ($manifestAttributes && $manifestAttributes->{'full-path'} == '/') {
                                    $mimeType = (string) $manifestAttributes->{'media-type'};

                                    break;
                                }
                            }
                        }
                    }
                }

                $zip->close();
            }
        }

        return $mimeType === 'application/vnd.oasis.opendocument.spreadsheet';
    }

    /**
     * Reads names of the worksheets from a file, without parsing the whole file to a PhpSpreadsheet object.
     *
     * @param string $filename
     *
     * @return string[]
     */
    public function listWorksheetNames($filename)
    {
        File::assertFile($filename, self::INITIAL_FILE);

        $worksheetNames = [];

        $xml = new XMLReader();
        $xml->xml(
            $this->getSecurityScannerOrThrow()
                ->scanFile('zip://' . realpath($filename) . '#' . self::INITIAL_FILE)
        );
        $xml->setParserProperty(2, true);

        // Step into the first level of content of the XML
        $xml->read();
        while ($xml->read()) {
            // Quickly jump through to the office:body node
            while (self::getXmlName($xml) !== 'office:body') {
                if ($xml->isEmptyElement) {
                    $xml->read();
                } else {
                    $xml->next();
                }
            }
            // Now read each node until we find our first table:table node
            while ($xml->read()) {
                $xmlName = self::getXmlName($xml);
                if ($xmlName == 'table:table' && $xml->nodeType == XMLReader::ELEMENT) {
                    // Loop through each table:table node reading the table:name attribute for each worksheet name
                    do {
                        $worksheetName = $xml->getAttribute('table:name');
                        if (!empty($worksheetName)) {
                            $worksheetNames[] = $worksheetName;
                        }
                        $xml->next();
                    } while (self::getXmlName($xml) == 'table:table' && $xml->nodeType == XMLReader::ELEMENT);
                }
            }
        }

        return $worksheetNames;
    }

    /**
     * Return worksheet info (Name, Last Column Letter, Last Column Index, Total Rows, Total Columns).
     *
     * @param string $filename
     *
     * @return array
     */
    public function listWorksheetInfo($filename)
    {
        File::assertFile($filename, self::INITIAL_FILE);

        $worksheetInfo = [];

        $xml = new XMLReader();
        $xml->xml(
            $this->getSecurityScannerOrThrow()
                ->scanFile('zip://' . realpath($filename) . '#' . self::INITIAL_FILE)
        );
        $xml->setParserProperty(2, true);

        // Step into the first level of content of the XML
        $xml->read();
        while ($xml->read()) {
            // Quickly jump through to the office:body node
            while (self::getXmlName($xml) !== 'office:body') {
                if ($xml->isEmptyElement) {
                    $xml->read();
                } else {
                    $xml->next();
                }
            }
            // Now read each node until we find our first table:table node
            while ($xml->read()) {
                if (self::getXmlName($xml) == 'table:table' && $xml->nodeType == XMLReader::ELEMENT) {
                    $worksheetNames[] = $xml->getAttribute('table:name');

                    $tmpInfo = [
                        'worksheetName' => $xml->getAttribute('table:name'),
                        'lastColumnLetter' => 'A',
                        'lastColumnIndex' => 0,
                        'totalRows' => 0,
                        'totalColumns' => 0,
                    ];

                    // Loop through each child node of the table:table element reading
                    $currCells = 0;
                    do {
                        $xml->read();
                        if (self::getXmlName($xml) == 'table:table-row' && $xml->nodeType == XMLReader::ELEMENT) {
                            $rowspan = $xml->getAttribute('table:number-rows-repeated');
                            $rowspan = empty($rowspan) ? 1 : $rowspan;
                            $tmpInfo['totalRows'] += $rowspan;
                            $tmpInfo['totalColumns'] = max($tmpInfo['totalColumns'], $currCells);
                            $currCells = 0;
                            // Step into the row
                            $xml->read();
                            do {
                                $doread = true;
                                if (self::getXmlName($xml) == 'table:table-cell' && $xml->nodeType == XMLReader::ELEMENT) {
                                    if (!$xml->isEmptyElement) {
                                        ++$currCells;
                                        $xml->next();
                                        $doread = false;
                                    }
                                } elseif (self::getXmlName($xml) == 'table:covered-table-cell' && $xml->nodeType == XMLReader::ELEMENT) {
                                    $mergeSize = $xml->getAttribute('table:number-columns-repeated');
                                    $currCells += (int) $mergeSize;
                                }
                                if ($doread) {
                                    $xml->read();
                                }
                            } while (self::getXmlName($xml) != 'table:table-row');
                        }
                    } while (self::getXmlName($xml) != 'table:table');

                    $tmpInfo['totalColumns'] = max($tmpInfo['totalColumns'], $currCells);
                    $tmpInfo['lastColumnIndex'] = $tmpInfo['totalColumns'] - 1;
                    $tmpInfo['lastColumnLetter'] = Coordinate::stringFromColumnIndex($tmpInfo['lastColumnIndex'] + 1);
                    $worksheetInfo[] = $tmpInfo;
                }
            }
        }

        return $worksheetInfo;
    }

    /**
     * Counteract Phpstan caching.
     *
     * @phpstan-impure
     */
    private static function getXmlName(XMLReader $xml): string
    {
        return $xml->name;
    }

    /**
     * Loads PhpSpreadsheet from file.
     */
    protected function loadSpreadsheetFromFile(string $filename): Spreadsheet
    {
        // Create new Spreadsheet
        $spreadsheet = new Spreadsheet();

        // Load into this instance
        return $this->loadIntoExisting($filename, $spreadsheet);
    }

    /**
     * Loads PhpSpreadsheet from file into PhpSpreadsheet instance.
     *
     * @param string $filename
     *
     * @return Spreadsheet
     */
    public function loadIntoExisting($filename, Spreadsheet $spreadsheet)
    {
        File::assertFile($filename, self::INITIAL_FILE);

        $zip = new ZipArchive();
        $zip->open($filename);

        // Meta

        $xml = @simplexml_load_string(
            $this->getSecurityScannerOrThrow()
                ->scan($zip->getFromName('meta.xml'))
        );
        if ($xml === false) {
            throw new Exception('Unable to read data from {$pFilename}');
        }

        $namespacesMeta = $xml->getNamespaces(true);

        (new DocumentProperties($spreadsheet))->load($xml, $namespacesMeta);

        // Styles

        $dom = new DOMDocument('1.01', 'UTF-8');
        $dom->loadXML(
            $this->getSecurityScannerOrThrow()
                ->scan($zip->getFromName('styles.xml'))
        );

        $pageSettings = new PageSettings($dom);

        // Main Content

        $dom = new DOMDocument('1.01', 'UTF-8');
        $dom->loadXML(
            $this->getSecurityScannerOrThrow()
                ->scan($zip->getFromName(self::INITIAL_FILE))
        );

        $officeNs = $dom->lookupNamespaceUri('office');
        $tableNs = $dom->lookupNamespaceUri('table');
        $textNs = $dom->lookupNamespaceUri('text');
        $xlinkNs = $dom->lookupNamespaceUri('xlink');
        $styleNs = $dom->lookupNamespaceUri('style');

        $pageSettings->readStyleCrossReferences($dom);

        $autoFilterReader = new AutoFilter($spreadsheet, $tableNs);
        $definedNameReader = new DefinedNames($spreadsheet, $tableNs);
        $columnWidths = [];
        $automaticStyle0 = $dom->getElementsByTagNameNS($officeNs, 'automatic-styles')->item(0);
        $automaticStyles = ($automaticStyle0 === null) ? [] : $automaticStyle0->getElementsByTagNameNS($styleNs, 'style');
        foreach ($automaticStyles as $automaticStyle) {
            $styleName = $automaticStyle->getAttributeNS($styleNs, 'name');
            $styleFamily = $automaticStyle->getAttributeNS($styleNs, 'family');
            if ($styleFamily === 'table-column') {
                $tcprops = $automaticStyle->getElementsByTagNameNS($styleNs, 'table-column-properties');
                if ($tcprops !== null) {
                    $tcprop = $tcprops->item(0);
                    if ($tcprop !== null) {
                        $columnWidth = $tcprop->getAttributeNs($styleNs, 'column-width');
                        $columnWidths[$styleName] = $columnWidth;
                    }
                }
            }
        }

        // Content
        $item0 = $dom->getElementsByTagNameNS($officeNs, 'body')->item(0);
        $spreadsheets = ($item0 === null) ? [] : $item0->getElementsByTagNameNS($officeNs, 'spreadsheet');

        foreach ($spreadsheets as $workbookData) {
            /** @var DOMElement $workbookData */
            $tables = $workbookData->getElementsByTagNameNS($tableNs, 'table');

            $worksheetID = 0;
            foreach ($tables as $worksheetDataSet) {
                /** @var DOMElement $worksheetDataSet */
                $worksheetName = $worksheetDataSet->getAttributeNS($tableNs, 'name');

                // Check loadSheetsOnly
                if (
                    $this->loadSheetsOnly !== null
                    && $worksheetName
                    && !in_array($worksheetName, $this->loadSheetsOnly)
                ) {
                    continue;
                }

                $worksheetStyleName = $worksheetDataSet->getAttributeNS($tableNs, 'style-name');

                // Create sheet
                if ($worksheetID > 0) {
                    $spreadsheet->createSheet(); // First sheet is added by default
                }
                $spreadsheet->setActiveSheetIndex($worksheetID);

                if ($worksheetName || is_numeric($worksheetName)) {
                    // Use false for $updateFormulaCellReferences to prevent adjustment of worksheet references in
                    // formula cells... during the load, all formulae should be correct, and we're simply
                    // bringing the worksheet name in line with the formula, not the reverse
                    $spreadsheet->getActiveSheet()->setTitle((string) $worksheetName, false, false);
                }

                // Go through every child of table element
                $rowID = 1;
                $tableColumnIndex = 1;
                foreach ($worksheetDataSet->childNodes as $childNode) {
                    /** @var DOMElement $childNode */

                    // Filter elements which are not under the "table" ns
                    if ($childNode->namespaceURI != $tableNs) {
                        continue;
                    }

                    $key = $childNode->nodeName;

                    // Remove ns from node name
                    if (strpos($key, ':') !== false) {
                        $keyChunks = explode(':', $key);
                        $key = array_pop($keyChunks);
                    }

                    switch ($key) {
                        case 'table-header-rows':
                            /// TODO :: Figure this out. This is only a partial implementation I guess.
                            //          ($rowData it's not used at all and I'm not sure that PHPExcel
                            //          has an API for this)

//                            foreach ($rowData as $keyRowData => $cellData) {
//                                $rowData = $cellData;
//                                break;
//                            }
                            break;
                        case 'table-column':
                            if ($childNode->hasAttributeNS($tableNs, 'number-columns-repeated')) {
                                $rowRepeats = (int) $childNode->getAttributeNS($tableNs, 'number-columns-repeated');
                            } else {
                                $rowRepeats = 1;
                            }
                            $tableStyleName = $childNode->getAttributeNS($tableNs, 'style-name');
                            if (isset($columnWidths[$tableStyleName])) {
                                $columnWidth = new HelperDimension($columnWidths[$tableStyleName]);
                                $tableColumnString = Coordinate::stringFromColumnIndex($tableColumnIndex);
                                for ($rowRepeats2 = $rowRepeats; $rowRepeats2 > 0; --$rowRepeats2) {
                                    $spreadsheet->getActiveSheet()
                                        ->getColumnDimension($tableColumnString)
                                        ->setWidth($columnWidth->toUnit('cm'), 'cm');
                                    ++$tableColumnString;
                                }
                            }
                            $tableColumnIndex += $rowRepeats;

                            break;
                        case 'table-row':
                            if ($childNode->hasAttributeNS($tableNs, 'number-rows-repeated')) {
                                $rowRepeats = (int) $childNode->getAttributeNS($tableNs, 'number-rows-repeated');
                            } else {
                                $rowRepeats = 1;
                            }

                            $columnID = 'A';
                            /** @var DOMElement $cellData */
                            foreach ($childNode->childNodes as $cellData) {
                                if ($this->getReadFilter() !== null) {
                                    if (!$this->getReadFilter()->readCell($columnID, $rowID, $worksheetName)) {
                                        if ($cellData->hasAttributeNS($tableNs, 'number-columns-repeated')) {
                                            $colRepeats = (int) $cellData->getAttributeNS($tableNs, 'number-columns-repeated');
                                        } else {
                                            $colRepeats = 1;
                                        }

                                        for ($i = 0; $i < $colRepeats; ++$i) {
                                            ++$columnID;
                                        }

                                        continue;
                                    }
                                }

                                // Initialize variables
                                $formatting = $hyperlink = null;
                                $hasCalculatedValue = false;
                                $cellDataFormula = '';

                                if ($cellData->hasAttributeNS($tableNs, 'formula')) {
                                    $cellDataFormula = $cellData->getAttributeNS($tableNs, 'formula');
                                    $hasCalculatedValue = true;
                                }

                                // Annotations
                                $annotation = $cellData->getElementsByTagNameNS($officeNs, 'annotation');

                                if ($annotation->length > 0 && $annotation->item(0) !== null) {
                                    $textNode = $annotation->item(0)->getElementsByTagNameNS($textNs, 'p');

                                    if ($textNode->length > 0 && $textNode->item(0) !== null) {
                                        $text = $this->scanElementForText($textNode->item(0));

                                        $spreadsheet->getActiveSheet()
                                            ->getComment($columnID . $rowID)
                                            ->setText($this->parseRichText($text));
//                                                                    ->setAuthor( $author )
                                    }
                                }

                                // Content

                                /** @var DOMElement[] $paragraphs */
                                $paragraphs = [];

                                foreach ($cellData->childNodes as $item) {
                                    /** @var DOMElement $item */

                                    // Filter text:p elements
                                    if ($item->nodeName == 'text:p') {
                                        $paragraphs[] = $item;
                                    }
                                }

                                if (count($paragraphs) > 0) {
                                    // Consolidate if there are multiple p records (maybe with spans as well)
                                    $dataArray = [];

                                    // Text can have multiple text:p and within those, multiple text:span.
                                    // text:p newlines, but text:span does not.
                                    // Also, here we assume there is no text data is span fields are specified, since
                                    // we have no way of knowing proper positioning anyway.

                                    foreach ($paragraphs as $pData) {
                                        $dataArray[] = $this->scanElementForText($pData);
                                    }
                                    $allCellDataText = implode("\n", $dataArray);

                                    $type = $cellData->getAttributeNS($officeNs, 'value-type');

                                    switch ($type) {
                                        case 'string':
                                            $type = DataType::TYPE_STRING;
                                            $dataValue = $allCellDataText;

                                            foreach ($paragraphs as $paragraph) {
                                                $link = $paragraph->getElementsByTagNameNS($textNs, 'a');
                                                if ($link->length > 0 && $link->item(0) !== null) {
                                                    $hyperlink = $link->item(0)->getAttributeNS($xlinkNs, 'href');
                                                }
                                            }

                                            break;
                                        case 'boolean':
                                            $type = DataType::TYPE_BOOL;
                                            $dataValue = ($allCellDataText == 'TRUE') ? true : false;

                                            break;
                                        case 'percentage':
                                            $type = DataType::TYPE_NUMERIC;
                                            $dataValue = (float) $cellData->getAttributeNS($officeNs, 'value');

                                            // percentage should always be float
                                            //if (floor($dataValue) == $dataValue) {
                                            //    $dataValue = (int) $dataValue;
                                            //}
                                            $formatting = NumberFormat::FORMAT_PERCENTAGE_00;

                                            break;
                                        case 'currency':
                                            $type = DataType::TYPE_NUMERIC;
                                            $dataValue = (float) $cellData->getAttributeNS($officeNs, 'value');

                                            if (floor($dataValue) == $dataValue) {
                                                $dataValue = (int) $dataValue;
                                            }
                                            $formatting = NumberFormat::FORMAT_CURRENCY_USD_INTEGER;

                                            break;
                                        case 'float':
                                            $type = DataType::TYPE_NUMERIC;
                                            $dataValue = (float) $cellData->getAttributeNS($officeNs, 'value');

                                            if (floor($dataValue) == $dataValue) {
                                                if ($dataValue == (int) $dataValue) {
                                                    $dataValue = (int) $dataValue;
                                                }
                                            }

                                            break;
                                        case 'date':
                                            $type = DataType::TYPE_NUMERIC;
                                            $value = $cellData->getAttributeNS($officeNs, 'date-value');
                                            $dataValue = Date::convertIsoDate($value);

                                            if ($dataValue != floor($dataValue)) {
                                                $formatting = NumberFormat::FORMAT_DATE_XLSX15
                                                    . ' '
                                                    . NumberFormat::FORMAT_DATE_TIME4;
                                            } else {
                                                $formatting = NumberFormat::FORMAT_DATE_XLSX15;
                                            }

                                            break;
                                        case 'time':
                                            $type = DataType::TYPE_NUMERIC;

                                            $timeValue = $cellData->getAttributeNS($officeNs, 'time-value');

                                            $dataValue = Date::PHPToExcel(
                                                strtotime(
                                                    '01-01-1970 ' . implode(':', /** @scrutinizer ignore-type */ sscanf($timeValue, 'PT%dH%dM%dS') ?? [])
                                                )
                                            );
                                            $formatting = NumberFormat::FORMAT_DATE_TIME4;

                                            break;
                                        default:
                                            $dataValue = null;
                                    }
                                } else {
                                    $type = DataType::TYPE_NULL;
                                    $dataValue = null;
                                }

                                if ($hasCalculatedValue) {
                                    $type = DataType::TYPE_FORMULA;
                                    $cellDataFormula = substr($cellDataFormula, strpos($cellDataFormula, ':=') + 1);
                                    $cellDataFormula = FormulaTranslator::convertToExcelFormulaValue($cellDataFormula);
                                }

                                if ($cellData->hasAttributeNS($tableNs, 'number-columns-repeated')) {
                                    $colRepeats = (int) $cellData->getAttributeNS($tableNs, 'number-columns-repeated');
                                } else {
                                    $colRepeats = 1;
                                }

                                if ($type !== null) {
                                    for ($i = 0; $i < $colRepeats; ++$i) {
                                        if ($i > 0) {
                                            ++$columnID;
                                        }

                                        if ($type !== DataType::TYPE_NULL) {
                                            for ($rowAdjust = 0; $rowAdjust < $rowRepeats; ++$rowAdjust) {
                                                $rID = $rowID + $rowAdjust;

                                                $cell = $spreadsheet->getActiveSheet()
                                                    ->getCell($columnID . $rID);

                                                // Set value
                                                if ($hasCalculatedValue) {
                                                    $cell->setValueExplicit($cellDataFormula, $type);
                                                } else {
                                                    $cell->setValueExplicit($dataValue, $type);
                                                }

                                                if ($hasCalculatedValue) {
                                                    $cell->setCalculatedValue($dataValue);
                                                }

                                                // Set other properties
                                                if ($formatting !== null) {
                                                    $spreadsheet->getActiveSheet()
                                                        ->getStyle($columnID . $rID)
                                                        ->getNumberFormat()
                                                        ->setFormatCode($formatting);
                                                } else {
                                                    $spreadsheet->getActiveSheet()
                                                        ->getStyle($columnID . $rID)
                                                        ->getNumberFormat()
                                                        ->setFormatCode(NumberFormat::FORMAT_GENERAL);
                                                }

                                                if ($hyperlink !== null) {
                                                    $cell->getHyperlink()
                                                        ->setUrl($hyperlink);
                                                }
                                            }
                                        }
                                    }
                                }

                                // Merged cells
                                $this->processMergedCells($cellData, $tableNs, $type, $columnID, $rowID, $spreadsheet);

                                ++$columnID;
                            }
                            $rowID += $rowRepeats;

                            break;
                    }
                }
                $pageSettings->setVisibilityForWorksheet($spreadsheet->getActiveSheet(), $worksheetStyleName);
                $pageSettings->setPrintSettingsForWorksheet($spreadsheet->getActiveSheet(), $worksheetStyleName);
                ++$worksheetID;
            }

            $autoFilterReader->read($workbookData);
            $definedNameReader->read($workbookData);
        }
        $spreadsheet->setActiveSheetIndex(0);

        if ($zip->locateName('settings.xml') !== false) {
            $this->processSettings($zip, $spreadsheet);
        }

        // Return
        return $spreadsheet;
    }

    private function processSettings(ZipArchive $zip, Spreadsheet $spreadsheet): void
    {
        $dom = new DOMDocument('1.01', 'UTF-8');
        $dom->loadXML(
            $this->getSecurityScannerOrThrow()
                ->scan($zip->getFromName('settings.xml'))
        );
        //$xlinkNs = $dom->lookupNamespaceUri('xlink');
        $configNs = $dom->lookupNamespaceUri('config');
        //$oooNs = $dom->lookupNamespaceUri('ooo');
        $officeNs = $dom->lookupNamespaceUri('office');
        $settings = $dom->getElementsByTagNameNS($officeNs, 'settings')
            ->item(0);
        if ($settings !== null) {
            $this->lookForActiveSheet($settings, $spreadsheet, $configNs);
            $this->lookForSelectedCells($settings, $spreadsheet, $configNs);
        }
    }

    private function lookForActiveSheet(DOMElement $settings, Spreadsheet $spreadsheet, string $configNs): void
    {
        /** @var DOMElement $t */
        foreach ($settings->getElementsByTagNameNS($configNs, 'config-item') as $t) {
            if ($t->getAttributeNs($configNs, 'name') === 'ActiveTable') {
                try {
                    $spreadsheet->setActiveSheetIndexByName($t->nodeValue ?? '');
                } catch (Throwable $e) {
                    // do nothing
                }

                break;
            }
        }
    }

    private function lookForSelectedCells(DOMElement $settings, Spreadsheet $spreadsheet, string $configNs): void
    {
        /** @var DOMElement $t */
        foreach ($settings->getElementsByTagNameNS($configNs, 'config-item-map-named') as $t) {
            if ($t->getAttributeNs($configNs, 'name') === 'Tables') {
                foreach ($t->getElementsByTagNameNS($configNs, 'config-item-map-entry') as $ws) {
                    $setRow = $setCol = '';
                    $wsname = $ws->getAttributeNs($configNs, 'name');
                    foreach ($ws->getElementsByTagNameNS($configNs, 'config-item') as $configItem) {
                        $attrName = $configItem->getAttributeNs($configNs, 'name');
                        if ($attrName === 'CursorPositionX') {
                            $setCol = $configItem->nodeValue;
                        }
                        if ($attrName === 'CursorPositionY') {
                            $setRow = $configItem->nodeValue;
                        }
                    }
                    $this->setSelected($spreadsheet, $wsname, "$setCol", "$setRow");
                }

                break;
            }
        }
    }

    private function setSelected(Spreadsheet $spreadsheet, string $wsname, string $setCol, string $setRow): void
    {
        if (is_numeric($setCol) && is_numeric($setRow)) {
            $sheet = $spreadsheet->getSheetByName($wsname);
            if ($sheet !== null) {
                $sheet->setSelectedCells([(int) $setCol + 1, (int) $setRow + 1]);
            }
        }
    }

    /**
     * Recursively scan element.
     *
     * @return string
     */
    protected function scanElementForText(DOMNode $element)
    {
        $str = '';
        foreach ($element->childNodes as $child) {
            /** @var DOMNode $child */
            if ($child->nodeType == XML_TEXT_NODE) {
                $str .= $child->nodeValue;
            } elseif ($child->nodeType == XML_ELEMENT_NODE && $child->nodeName == 'text:s') {
                // It's a space

                // Multiple spaces?
                $attributes = $child->attributes;
                /** @var ?DOMAttr $cAttr */
                $cAttr = ($attributes === null) ? null : $attributes->getNamedItem('c');
                $multiplier = self::getMultiplier($cAttr);
                $str .= str_repeat(' ', $multiplier);
            }

            if ($child->hasChildNodes()) {
                $str .= $this->scanElementForText($child);
            }
        }

        return $str;
    }

    private static function getMultiplier(?DOMAttr $cAttr): int
    {
        if ($cAttr) {
            $multiplier = (int) $cAttr->nodeValue;
        } else {
            $multiplier = 1;
        }

        return $multiplier;
    }

    /**
     * @param string $is
     *
     * @return RichText
     */
    private function parseRichText($is)
    {
        $value = new RichText();
        $value->createText($is);

        return $value;
    }

    private function processMergedCells(
        DOMElement $cellData,
        string $tableNs,
        string $type,
        string $columnID,
        int $rowID,
        Spreadsheet $spreadsheet
    ): void {
        if (
            $cellData->hasAttributeNS($tableNs, 'number-columns-spanned')
            || $cellData->hasAttributeNS($tableNs, 'number-rows-spanned')
        ) {
            if (($type !== DataType::TYPE_NULL) || ($this->readDataOnly === false)) {
                $columnTo = $columnID;

                if ($cellData->hasAttributeNS($tableNs, 'number-columns-spanned')) {
                    $columnIndex = Coordinate::columnIndexFromString($columnID);
                    $columnIndex += (int) $cellData->getAttributeNS($tableNs, 'number-columns-spanned');
                    $columnIndex -= 2;

                    $columnTo = Coordinate::stringFromColumnIndex($columnIndex + 1);
                }

                $rowTo = $rowID;

                if ($cellData->hasAttributeNS($tableNs, 'number-rows-spanned')) {
                    $rowTo = $rowTo + (int) $cellData->getAttributeNS($tableNs, 'number-rows-spanned') - 1;
                }

                $cellRange = $columnID . $rowID . ':' . $columnTo . $rowTo;
                $spreadsheet->getActiveSheet()->mergeCells($cellRange, Worksheet::MERGE_CELL_CONTENT_HIDE);
            }
        }
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";